{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"drawHeart\",\n  width: \"1903\",\n  height: \"937\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"canvas\", _hoisted_1);\n}","map":{"version":3,"names":["id","width","height","_createElementBlock","_hoisted_1"],"sources":["/home/whw/Vue/whwtest.github.io/src/App.vue"],"sourcesContent":["<template>\n  <canvas id=\"drawHeart\" width=\"1903\" height=\"937\"></canvas>\n</template>\n\n<script setup>\nimport {nextTick, onMounted} from \"vue\";\n\nvar hearts = [];\nvar canvas = \"\";\nvar ctx = \"\";\nvar wW = window.innerWidth;\nvar wH = window.innerHeight;\nvar heartImage = \"\";\nonMounted(() => {\n  nextTick(() => {\n    // 获取canvas节点\n    canvas = document.getElementById('drawHeart');\n    ctx = canvas.getContext('2d');\n    heartImage = new Image();\n    // 绘制爱心svg\n    heartImage.src = '/heart-rate.svg';\n    // 初始化方法\n    init();\n  })\n})\n\n// 监听屏幕变化\nwindow.addEventListener('resize', function () {\n  wW = window.innerWidth;\n  wH = window.innerHeight;\n});\n\n// 初始化方法\nfunction init() {\n  var num = 100;\n  canvas.width = wW;\n  canvas.height = wH;\n  for (var i = 0; i < num; i++) {\n    hearts.push(new Heart(i % 5));\n  }\n  // 请求动画帧,重新屏幕绘制频率\n  requestAnimationFrame(render);\n}\n// 获取随机的颜色用来给字体赋值\nfunction getRandomColor() {\n  var val = Math.random() * 10;\n  if (val > 0 && val <= 1) {\n    return '#00f';\n  } else if (val > 1 && val <= 2) {\n    return '#f00';\n  } else if (val > 2 && val <= 3) {\n    return '#0f0';\n  } else if (val > 3 && val <= 4) {\n    return '#368';\n  } else if (val > 4 && val <= 5) {\n    return '#08e2af';\n  } else if (val > 5 && val <= 6) {\n    return '#66e44c';\n  } else if (val > 6 && val <= 7) {\n    return '#f50';\n  } else if (val > 7 && val <= 8) {\n    return '#fc5531';\n  } else if (val > 8 && val <= 9) {\n    return '#5be9e9';\n  } else {\n    return '#d41d50';\n  }\n}\n// 随机绘制文字\nfunction getRandomText() {\n  var val = Math.random() * 15;\n  if (val > 1 && val <= 3) {\n    return '爱你一辈子';\n  } else if (val > 3 && val <= 5) {\n    return '感谢你';\n  } else if (val > 5 && val <= 8) {\n    return '喜欢你';\n  } else if (val > 8 && val <= 10) {\n    return '表白赵佳宁';\n  } else if (val > 10 && val <= 12) {\n    return '哈哈哈';\n  } else if (val > 12 && val <= 14) {\n    return '爱你~';\n  } else {\n    return 'I Love You';\n  }\n}\n// 爱心加载\nfunction Heart(type) {\n  this.type = type;\n  this.x = Math.random() * wW;\n  this.y = Math.random() * wH;\n  this.opacity = Math.random() * .5 + .5;\n  this.vel = {\n    x: (Math.random() - .5) * 5, y: (Math.random() - .5) * 5\n  }\n  this.initialH = wH * .5;\n  this.targetScale = Math.random() * .15 + .02;\n  this.scale = Math.random() * this.targetScale;\n  this.fx = Math.random() * wW;\n  this.fy = Math.random() * wH;\n  this.fs = Math.random() * 10;\n  this.text = getRandomText();\n  this.fvel = {\n    x: (Math.random() - .5) * 5, y: (Math.random() - .5) * 5, f: (Math.random() - .5) * 2\n  }\n}\n\nHeart.prototype.draw = function () {\n  ctx.save();\n  ctx.globalAlpha = this.opacity;\n  ctx.drawImage(heartImage, this.x, this.y, this.width, this.height);\n  ctx.scale(this.scale + 1, this.scale + 1);\n  if (!this.type) {\n    ctx.fillStyle = getRandomColor();\n    ctx.font = 'italic ' + this.fs + 'px sans-serif';\n    ctx.fillText(this.text, this.fx, this.fy);\n  }\n  ctx.restore();\n}\nHeart.prototype.update = function () {\n  this.x += this.vel.x;\n  this.y += this.vel.y;\n  if (this.x - this.width > wW || this.x + this.width < 0) {\n    this.scale = 0;\n    this.x = Math.random() * wW;\n    this.y = Math.random() * wH;\n  }\n  if (this.y - this.height > wH || this.y + this.height < 0) {\n    this.scale = 0;\n    this.x = Math.random() * wW;\n    this.y = Math.random() * wH;\n  }\n  this.scale += (this.targetScale - this.scale) * .1;\n  this.height = this.scale * this.initialH;\n  this.width = this.height * 1.4;\n  this.fx += this.fvel.x;\n  this.fy += this.fvel.y;\n  this.fs += this.fvel.f;\n  if (this.fs > 50) {\n    this.fs = 2;\n  }\n  if (this.fx - this.fs > wW || this.fx + this.fs < 0) {\n    this.fx = Math.random() * wW;\n    this.fy = Math.random() * wH;\n  }\n  if (this.fy - this.fs > wH || this.fy + this.fs < 0) {\n    this.fx = Math.random() * wW;\n    this.fy = Math.random() * wH;\n  }\n}\n\nfunction render() {\n  ctx.clearRect(0, 0, wW, wH);\n  for (var i = 0; i < hearts.length; i++) {\n    hearts[i].draw();\n    hearts[i].update();\n  }\n  requestAnimationFrame(render);\n}\n\n</script>\n\n<style scoped>\n#drawHeart{\n  background-color:lightpink ;\n}\n</style>\n"],"mappings":";;;EACUA,EAAE,EAAC,WAAW;EAACC,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC;;;uBAA3CC,mBAAA,CAA0D,UAA1DC,UAA0D"},"metadata":{},"sourceType":"module","externalDependencies":[]}