{"ast":null,"code":"import { h, defineComponent, ref, computed, toRef, watchEffect, withDirectives, Transition, provide, watch, nextTick } from 'vue';\nimport { hsv2rgb, rgb2hsv, rgba, hsva, hsla, hsl2hsv, hsv2hsl, rgb2hsl, hsl2rgb, toRgbaString, toHsvaString, toHslaString, toHexaString, toHsvString, toRgbString, toHexString, toHslString, getPreciseEventTarget } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { colorPickerLight } from '../styles';\nimport { useFormItem, useConfig, useTheme, useLocale, useThemeClass } from '../../_mixins';\nimport { call, createKey, useAdjustedTo } from '../../_utils';\nimport { NButton } from '../../button';\nimport HueSlider from './HueSlider';\nimport AlphaSlider from './AlphaSlider';\nimport Pallete from './Pallete';\nimport ColorInput from './ColorInput';\nimport ColorPickerTrigger from './ColorPickerTrigger';\nimport { deriveDefaultValue, getModeFromValue } from './utils';\nimport ColorPickerSwatches from './ColorPickerSwatches';\nimport ColorPreview from './ColorPreview';\nimport { colorPickerInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const colorPickerProps = Object.assign(Object.assign({}, useTheme.props), {\n  value: String,\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  defaultShow: Boolean,\n  defaultValue: String,\n  modes: {\n    type: Array,\n    // no hsva by default since browser doesn't support it\n    default: () => ['rgb', 'hex', 'hsl']\n  },\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  to: useAdjustedTo.propTo,\n  showAlpha: {\n    type: Boolean,\n    default: true\n  },\n  showPreview: Boolean,\n  swatches: Array,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  actions: {\n    type: Array,\n    default: null\n  },\n  internalActions: Array,\n  size: String,\n  renderLabel: Function,\n  onComplete: Function,\n  onConfirm: Function,\n  'onUpdate:show': [Function, Array],\n  onUpdateShow: [Function, Array],\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array]\n});\nexport default defineComponent({\n  name: 'ColorPicker',\n  props: colorPickerProps,\n  setup(props, {\n    slots\n  }) {\n    const selfRef = ref(null);\n    let upcomingValue = null;\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef\n    } = formItem;\n    const {\n      localeRef\n    } = useLocale('global');\n    const {\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('ColorPicker', '-color-picker', style, colorPickerLight, props, mergedClsPrefixRef);\n    provide(colorPickerInjectionKey, {\n      themeRef,\n      renderLabelRef: toRef(props, 'renderLabel'),\n      colorPickerSlots: slots\n    });\n    const uncontrolledShowRef = ref(props.defaultShow);\n    const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n    const {\n      defaultValue\n    } = props;\n    const uncontrolledValueRef = ref(defaultValue === undefined ? deriveDefaultValue(props.modes, props.showAlpha) : defaultValue);\n    const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n    const undoStackRef = ref([mergedValueRef.value]);\n    const valueIndexRef = ref(0);\n    const valueModeRef = computed(() => getModeFromValue(mergedValueRef.value));\n    const {\n      modes\n    } = props;\n    const displayedModeRef = ref(getModeFromValue(mergedValueRef.value) || modes[0] || 'rgb');\n    function handleUpdateDisplayedMode() {\n      const {\n        modes\n      } = props;\n      const {\n        value: displayedMode\n      } = displayedModeRef;\n      const currentModeIndex = modes.findIndex(mode => mode === displayedMode);\n      if (~currentModeIndex) {\n        displayedModeRef.value = modes[(currentModeIndex + 1) % modes.length];\n      } else {\n        displayedModeRef.value = 'rgb';\n      }\n    }\n    let _h,\n      // avoid conflict with render function's h\n      s, l, v, r, g, b, a;\n    const hsvaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      switch (valueModeRef.value) {\n        case 'hsv':\n          return hsva(mergedValue);\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2hsv(_h, s, l), a];\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsv(r, g, b), a];\n      }\n    });\n    const rgbaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      switch (valueModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgba(mergedValue);\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2rgb(_h, s, v), a];\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2rgb(_h, s, l), a];\n      }\n    });\n    const hslaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      switch (valueModeRef.value) {\n        case 'hsl':\n          return hsla(mergedValue);\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2hsl(_h, s, v), a];\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsl(r, g, b), a];\n      }\n    });\n    const mergedValueArrRef = computed(() => {\n      switch (displayedModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgbaRef.value;\n        case 'hsv':\n          return hsvaRef.value;\n        case 'hsl':\n          return hslaRef.value;\n      }\n    });\n    const displayedHueRef = ref(0);\n    const displayedAlphaRef = ref(1);\n    const displayedSvRef = ref([0, 0]);\n    function handleUpdateSv(s, v) {\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n      const hue = displayedHueRef.value;\n      const alpha = hsvaArr ? hsvaArr[3] : 1;\n      displayedSvRef.value = [s, v];\n      const {\n        showAlpha\n      } = props;\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, alpha]), 'cursor');\n          break;\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), alpha]), 'cursor');\n          break;\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n      }\n    }\n    function handleUpdateHue(hue) {\n      displayedHueRef.value = hue;\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n      if (!hsvaArr) {\n        return;\n      }\n      const [, s, v, a] = hsvaArr;\n      const {\n        showAlpha\n      } = props;\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, a]), 'cursor');\n          break;\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), a]), 'cursor');\n          break;\n      }\n    }\n    function handleUpdateAlpha(alpha) {\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, v] = hsvaRef.value;\n          doUpdateValue(toHsvaString([_h, s, v, alpha]), 'cursor');\n          break;\n        case 'rgb':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toRgbaString([r, g, b, alpha]), 'cursor');\n          break;\n        case 'hex':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toHexaString([r, g, b, alpha]), 'cursor');\n          break;\n        case 'hsl':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, l] = hslaRef.value;\n          doUpdateValue(toHslaString([_h, s, l, alpha]), 'cursor');\n          break;\n      }\n      displayedAlphaRef.value = alpha;\n    }\n    function doUpdateValue(value, updateSource) {\n      if (updateSource === 'cursor') {\n        upcomingValue = value;\n      } else {\n        upcomingValue = null;\n      }\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      nTriggerFormChange();\n      nTriggerFormInput();\n      uncontrolledValueRef.value = value;\n    }\n    function handleInputUpdateValue(value) {\n      doUpdateValue(value, 'input');\n      void nextTick(handleComplete);\n    }\n    function handleComplete(pushStack = true) {\n      const {\n        value\n      } = mergedValueRef;\n      // no value & only hue changes will complete with no value\n      if (value) {\n        const {\n          nTriggerFormChange,\n          nTriggerFormInput\n        } = formItem;\n        const {\n          onComplete\n        } = props;\n        if (onComplete) {\n          ;\n          onComplete(value);\n        }\n        const {\n          value: undoStack\n        } = undoStackRef;\n        const {\n          value: valueIndex\n        } = valueIndexRef;\n        if (pushStack) {\n          undoStack.splice(valueIndex + 1, undoStack.length, value);\n          valueIndexRef.value = valueIndex + 1;\n        }\n        nTriggerFormChange();\n        nTriggerFormInput();\n      }\n    }\n    function undo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex - 1 < 0) return;\n      doUpdateValue(undoStackRef.value[valueIndex - 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex - 1;\n    }\n    function redo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex < 0 || valueIndex + 1 >= undoStackRef.value.length) return;\n      doUpdateValue(undoStackRef.value[valueIndex + 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex + 1;\n    }\n    function handleClear() {\n      doUpdateValue(null, 'input');\n      doUpdateShow(false);\n    }\n    function handleConfirm() {\n      const {\n        value\n      } = mergedValueRef;\n      const {\n        onConfirm\n      } = props;\n      if (onConfirm) {\n        ;\n        onConfirm(value);\n      }\n      doUpdateShow(false);\n    }\n    const undoableRef = computed(() => valueIndexRef.value >= 1);\n    const redoableRef = computed(() => {\n      const {\n        value: undoStack\n      } = undoStackRef;\n      return undoStack.length > 1 && valueIndexRef.value < undoStack.length - 1;\n    });\n    watch(mergedShowRef, value => {\n      if (!value) {\n        undoStackRef.value = [mergedValueRef.value];\n        valueIndexRef.value = 0;\n      }\n    });\n    watchEffect(() => {\n      if (upcomingValue && upcomingValue === mergedValueRef.value) {\n        // let it works in uncontrolled mode\n      } else {\n        const {\n          value\n        } = hsvaRef;\n        if (value) {\n          displayedHueRef.value = value[0];\n          displayedAlphaRef.value = value[3];\n          displayedSvRef.value = [value[1], value[2]];\n        }\n      }\n      upcomingValue = null;\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        value: mergedSize\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          textColor,\n          color,\n          panelFontSize,\n          boxShadow,\n          border,\n          borderRadius,\n          dividerColor,\n          [createKey('height', mergedSize)]: height,\n          [createKey('fontSize', mergedSize)]: fontSize\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-text-color': textColor,\n        '--n-color': color,\n        '--n-panel-font-size': panelFontSize,\n        '--n-font-size': fontSize,\n        '--n-box-shadow': boxShadow,\n        '--n-border': border,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-divider-color': dividerColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('color-picker', computed(() => {\n      return mergedSizeRef.value[0];\n    }), cssVarsRef, props) : undefined;\n    function renderPanel() {\n      var _a;\n      const {\n        value: rgba\n      } = rgbaRef;\n      const {\n        value: displayedHue\n      } = displayedHueRef;\n      const {\n        internalActions,\n        modes,\n        actions\n      } = props;\n      const {\n        value: mergedTheme\n      } = themeRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-color-picker-panel`, themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value],\n        onDragstart: e => {\n          e.preventDefault();\n        },\n        style: inlineThemeDisabled ? undefined : cssVarsRef.value\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-control`\n      }, h(Pallete, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        displayedHue: displayedHue,\n        displayedSv: displayedSvRef.value,\n        onUpdateSV: handleUpdateSv,\n        onComplete: handleComplete\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview`\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview__sliders`\n      }, h(HueSlider, {\n        clsPrefix: mergedClsPrefix,\n        hue: displayedHue,\n        onUpdateHue: handleUpdateHue,\n        onComplete: handleComplete\n      }), props.showAlpha ? h(AlphaSlider, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        alpha: displayedAlphaRef.value,\n        onUpdateAlpha: handleUpdateAlpha,\n        onComplete: handleComplete\n      }) : null), props.showPreview ? h(ColorPreview, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        color: rgbaRef.value && toHexString(rgbaRef.value),\n        onUpdateColor: color => {\n          doUpdateValue(color, 'input');\n        }\n      }) : null), h(ColorInput, {\n        clsPrefix: mergedClsPrefix,\n        showAlpha: props.showAlpha,\n        mode: displayedModeRef.value,\n        modes: modes,\n        onUpdateMode: handleUpdateDisplayedMode,\n        value: mergedValueRef.value,\n        valueArr: mergedValueArrRef.value,\n        onUpdateValue: handleInputUpdateValue\n      }), ((_a = props.swatches) === null || _a === void 0 ? void 0 : _a.length) && h(ColorPickerSwatches, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        swatches: props.swatches,\n        onUpdateColor: color => {\n          doUpdateValue(color, 'input');\n        }\n      })), (actions === null || actions === void 0 ? void 0 : actions.length) ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, actions.includes('confirm') && h(NButton, {\n        size: \"small\",\n        onClick: handleConfirm,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.confirm\n      }), actions.includes('clear') && h(NButton, {\n        size: \"small\",\n        onClick: handleClear,\n        disabled: !mergedValueRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.clear\n      })) : null, slots.action ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, {\n        default: slots.action\n      }) : internalActions ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, internalActions.includes('undo') && h(NButton, {\n        size: \"small\",\n        onClick: undo,\n        disabled: !undoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.undo\n      }), internalActions.includes('redo') && h(NButton, {\n        size: \"small\",\n        onClick: redo,\n        disabled: !redoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.redo\n      })) : null);\n    }\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      selfRef,\n      hsla: hslaRef,\n      rgba: rgbaRef,\n      mergedShow: mergedShowRef,\n      mergedDisabled: mergedDisabledRef,\n      isMounted: useIsMounted(),\n      adjustedTo: useAdjustedTo(props),\n      mergedValue: mergedValueRef,\n      handleTriggerClick() {\n        doUpdateShow(true);\n      },\n      handleClickOutside(e) {\n        var _a;\n        if ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e))) {\n          return;\n        }\n        doUpdateShow(false);\n      },\n      renderPanel,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [this.themeClass, `${mergedClsPrefix}-color-picker`],\n      ref: \"selfRef\",\n      style: this.cssVars\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(ColorPickerTrigger, {\n          clsPrefix: mergedClsPrefix,\n          value: this.mergedValue,\n          hsla: this.hsla,\n          disabled: this.mergedDisabled,\n          onClick: this.handleTriggerClick\n        }, {\n          label: $slots.label\n        })\n      }), h(VFollower, {\n        placement: this.placement,\n        show: this.mergedShow,\n        containerClass: this.namespace,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        to: this.adjustedTo\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted\n        }, {\n          default: () => this.mergedShow ? withDirectives(this.renderPanel(), [[clickoutside, this.handleClickOutside, undefined, {\n            capture: true\n          }]]) : null\n        })\n      })]\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","ref","computed","toRef","watchEffect","withDirectives","Transition","provide","watch","nextTick","hsv2rgb","rgb2hsv","rgba","hsva","hsla","hsl2hsv","hsv2hsl","rgb2hsl","hsl2rgb","toRgbaString","toHsvaString","toHslaString","toHexaString","toHsvString","toRgbString","toHexString","toHslString","getPreciseEventTarget","useIsMounted","useMergedState","VBinder","VFollower","VTarget","clickoutside","colorPickerLight","useFormItem","useConfig","useTheme","useLocale","useThemeClass","call","createKey","useAdjustedTo","NButton","HueSlider","AlphaSlider","Pallete","ColorInput","ColorPickerTrigger","deriveDefaultValue","getModeFromValue","ColorPickerSwatches","ColorPreview","colorPickerInjectionKey","style","colorPickerProps","Object","assign","props","value","String","show","type","Boolean","default","undefined","defaultShow","defaultValue","modes","Array","placement","to","propTo","showAlpha","showPreview","swatches","disabled","actions","internalActions","size","renderLabel","Function","onComplete","onConfirm","onUpdateShow","onUpdateValue","name","setup","slots","selfRef","upcomingValue","formItem","mergedSizeRef","mergedDisabledRef","localeRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","themeRef","renderLabelRef","colorPickerSlots","uncontrolledShowRef","mergedShowRef","doUpdateShow","_onUpdateShow","uncontrolledValueRef","mergedValueRef","undoStackRef","valueIndexRef","valueModeRef","displayedModeRef","handleUpdateDisplayedMode","displayedMode","currentModeIndex","findIndex","mode","length","_h","s","l","v","r","g","b","a","hsvaRef","mergedValue","rgbaRef","hslaRef","mergedValueArrRef","displayedHueRef","displayedAlphaRef","displayedSvRef","handleUpdateSv","hsvaArr","hue","alpha","doUpdateValue","handleUpdateHue","handleUpdateAlpha","updateSource","nTriggerFormChange","nTriggerFormInput","_onUpdateValue","handleInputUpdateValue","handleComplete","pushStack","undoStack","valueIndex","splice","undo","redo","handleClear","handleConfirm","undoableRef","redoableRef","cssVarsRef","mergedSize","common","cubicBezierEaseInOut","self","textColor","color","panelFontSize","boxShadow","border","borderRadius","dividerColor","height","fontSize","themeClassHandle","renderPanel","_a","displayedHue","mergedTheme","mergedClsPrefix","class","themeClass","onDragstart","e","preventDefault","clsPrefix","displayedSv","onUpdateSV","onUpdateHue","onUpdateAlpha","onUpdateColor","onUpdateMode","valueArr","includes","onClick","theme","peers","Button","themeOverrides","peerOverrides","confirm","clear","action","namespace","mergedShow","mergedDisabled","isMounted","adjustedTo","handleTriggerClick","handleClickOutside","contains","cssVars","onRender","render","$slots","label","containerClass","teleportDisabled","tdkey","appear","capture"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/color-picker/src/ColorPicker.js"],"sourcesContent":["import { h, defineComponent, ref, computed, toRef, watchEffect, withDirectives, Transition, provide, watch, nextTick } from 'vue';\nimport { hsv2rgb, rgb2hsv, rgba, hsva, hsla, hsl2hsv, hsv2hsl, rgb2hsl, hsl2rgb, toRgbaString, toHsvaString, toHslaString, toHexaString, toHsvString, toRgbString, toHexString, toHslString, getPreciseEventTarget } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { colorPickerLight } from '../styles';\nimport { useFormItem, useConfig, useTheme, useLocale, useThemeClass } from '../../_mixins';\nimport { call, createKey, useAdjustedTo } from '../../_utils';\nimport { NButton } from '../../button';\nimport HueSlider from './HueSlider';\nimport AlphaSlider from './AlphaSlider';\nimport Pallete from './Pallete';\nimport ColorInput from './ColorInput';\nimport ColorPickerTrigger from './ColorPickerTrigger';\nimport { deriveDefaultValue, getModeFromValue } from './utils';\nimport ColorPickerSwatches from './ColorPickerSwatches';\nimport ColorPreview from './ColorPreview';\nimport { colorPickerInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const colorPickerProps = Object.assign(Object.assign({}, useTheme.props), { value: String, show: {\n        type: Boolean,\n        default: undefined\n    }, defaultShow: Boolean, defaultValue: String, modes: {\n        type: Array,\n        // no hsva by default since browser doesn't support it\n        default: () => ['rgb', 'hex', 'hsl']\n    }, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, to: useAdjustedTo.propTo, showAlpha: {\n        type: Boolean,\n        default: true\n    }, showPreview: Boolean, swatches: Array, disabled: {\n        type: Boolean,\n        default: undefined\n    }, actions: {\n        type: Array,\n        default: null\n    }, internalActions: Array, size: String, renderLabel: Function, onComplete: Function, onConfirm: Function, 'onUpdate:show': [Function, Array], onUpdateShow: [Function, Array], 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array] });\nexport default defineComponent({\n    name: 'ColorPicker',\n    props: colorPickerProps,\n    setup(props, { slots }) {\n        const selfRef = ref(null);\n        let upcomingValue = null;\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef } = formItem;\n        const { localeRef } = useLocale('global');\n        const { mergedClsPrefixRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('ColorPicker', '-color-picker', style, colorPickerLight, props, mergedClsPrefixRef);\n        provide(colorPickerInjectionKey, {\n            themeRef,\n            renderLabelRef: toRef(props, 'renderLabel'),\n            colorPickerSlots: slots\n        });\n        const uncontrolledShowRef = ref(props.defaultShow);\n        const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n        function doUpdateShow(value) {\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n            uncontrolledShowRef.value = value;\n        }\n        const { defaultValue } = props;\n        const uncontrolledValueRef = ref(defaultValue === undefined\n            ? deriveDefaultValue(props.modes, props.showAlpha)\n            : defaultValue);\n        const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n        const undoStackRef = ref([mergedValueRef.value]);\n        const valueIndexRef = ref(0);\n        const valueModeRef = computed(() => getModeFromValue(mergedValueRef.value));\n        const { modes } = props;\n        const displayedModeRef = ref(getModeFromValue(mergedValueRef.value) || modes[0] || 'rgb');\n        function handleUpdateDisplayedMode() {\n            const { modes } = props;\n            const { value: displayedMode } = displayedModeRef;\n            const currentModeIndex = modes.findIndex((mode) => mode === displayedMode);\n            if (~currentModeIndex) {\n                displayedModeRef.value = modes[(currentModeIndex + 1) % modes.length];\n            }\n            else {\n                displayedModeRef.value = 'rgb';\n            }\n        }\n        let _h, // avoid conflict with render function's h\n        s, l, v, r, g, b, a;\n        const hsvaRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!mergedValue)\n                return null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            switch (valueModeRef.value) {\n                case 'hsv':\n                    return hsva(mergedValue);\n                case 'hsl':\n                    ;\n                    [_h, s, l, a] = hsla(mergedValue);\n                    return [...hsl2hsv(_h, s, l), a];\n                case 'rgb':\n                case 'hex':\n                    ;\n                    [r, g, b, a] = rgba(mergedValue);\n                    return [...rgb2hsv(r, g, b), a];\n            }\n        });\n        const rgbaRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!mergedValue)\n                return null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            switch (valueModeRef.value) {\n                case 'rgb':\n                case 'hex':\n                    return rgba(mergedValue);\n                case 'hsv':\n                    ;\n                    [_h, s, v, a] = hsva(mergedValue);\n                    return [...hsv2rgb(_h, s, v), a];\n                case 'hsl':\n                    ;\n                    [_h, s, l, a] = hsla(mergedValue);\n                    return [...hsl2rgb(_h, s, l), a];\n            }\n        });\n        const hslaRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!mergedValue)\n                return null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            switch (valueModeRef.value) {\n                case 'hsl':\n                    return hsla(mergedValue);\n                case 'hsv':\n                    ;\n                    [_h, s, v, a] = hsva(mergedValue);\n                    return [...hsv2hsl(_h, s, v), a];\n                case 'rgb':\n                case 'hex':\n                    ;\n                    [r, g, b, a] = rgba(mergedValue);\n                    return [...rgb2hsl(r, g, b), a];\n            }\n        });\n        const mergedValueArrRef = computed(() => {\n            switch (displayedModeRef.value) {\n                case 'rgb':\n                case 'hex':\n                    return rgbaRef.value;\n                case 'hsv':\n                    return hsvaRef.value;\n                case 'hsl':\n                    return hslaRef.value;\n            }\n        });\n        const displayedHueRef = ref(0);\n        const displayedAlphaRef = ref(1);\n        const displayedSvRef = ref([0, 0]);\n        function handleUpdateSv(s, v) {\n            const { value: hsvaArr } = hsvaRef;\n            const hue = displayedHueRef.value;\n            const alpha = hsvaArr ? hsvaArr[3] : 1;\n            displayedSvRef.value = [s, v];\n            const { showAlpha } = props;\n            switch (displayedModeRef.value) {\n                case 'hsv':\n                    doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, alpha]), 'cursor');\n                    break;\n                case 'hsl':\n                    doUpdateValue((showAlpha ? toHslaString : toHslString)([\n                        ...hsv2hsl(hue, s, v),\n                        alpha\n                    ]), 'cursor');\n                    break;\n                case 'rgb':\n                    doUpdateValue((showAlpha ? toRgbaString : toRgbString)([\n                        ...hsv2rgb(hue, s, v),\n                        alpha\n                    ]), 'cursor');\n                    break;\n                case 'hex':\n                    doUpdateValue((showAlpha ? toHexaString : toHexString)([\n                        ...hsv2rgb(hue, s, v),\n                        alpha\n                    ]), 'cursor');\n                    break;\n            }\n        }\n        function handleUpdateHue(hue) {\n            displayedHueRef.value = hue;\n            const { value: hsvaArr } = hsvaRef;\n            if (!hsvaArr) {\n                return;\n            }\n            const [, s, v, a] = hsvaArr;\n            const { showAlpha } = props;\n            switch (displayedModeRef.value) {\n                case 'hsv':\n                    doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, a]), 'cursor');\n                    break;\n                case 'rgb':\n                    doUpdateValue((showAlpha ? toRgbaString : toRgbString)([\n                        ...hsv2rgb(hue, s, v),\n                        a\n                    ]), 'cursor');\n                    break;\n                case 'hex':\n                    doUpdateValue((showAlpha ? toHexaString : toHexString)([\n                        ...hsv2rgb(hue, s, v),\n                        a\n                    ]), 'cursor');\n                    break;\n                case 'hsl':\n                    doUpdateValue((showAlpha ? toHslaString : toHslString)([\n                        ...hsv2hsl(hue, s, v),\n                        a\n                    ]), 'cursor');\n                    break;\n            }\n        }\n        function handleUpdateAlpha(alpha) {\n            switch (displayedModeRef.value) {\n                case 'hsv':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [_h, s, v] = hsvaRef.value;\n                    doUpdateValue(toHsvaString([_h, s, v, alpha]), 'cursor');\n                    break;\n                case 'rgb':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [r, g, b] = rgbaRef.value;\n                    doUpdateValue(toRgbaString([r, g, b, alpha]), 'cursor');\n                    break;\n                case 'hex':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [r, g, b] = rgbaRef.value;\n                    doUpdateValue(toHexaString([r, g, b, alpha]), 'cursor');\n                    break;\n                case 'hsl':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [_h, s, l] = hslaRef.value;\n                    doUpdateValue(toHslaString([_h, s, l, alpha]), 'cursor');\n                    break;\n            }\n            displayedAlphaRef.value = alpha;\n        }\n        function doUpdateValue(value, updateSource) {\n            if (updateSource === 'cursor') {\n                upcomingValue = value;\n            }\n            else {\n                upcomingValue = null;\n            }\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue } = props;\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            nTriggerFormChange();\n            nTriggerFormInput();\n            uncontrolledValueRef.value = value;\n        }\n        function handleInputUpdateValue(value) {\n            doUpdateValue(value, 'input');\n            void nextTick(handleComplete);\n        }\n        function handleComplete(pushStack = true) {\n            const { value } = mergedValueRef;\n            // no value & only hue changes will complete with no value\n            if (value) {\n                const { nTriggerFormChange, nTriggerFormInput } = formItem;\n                const { onComplete } = props;\n                if (onComplete) {\n                    ;\n                    onComplete(value);\n                }\n                const { value: undoStack } = undoStackRef;\n                const { value: valueIndex } = valueIndexRef;\n                if (pushStack) {\n                    undoStack.splice(valueIndex + 1, undoStack.length, value);\n                    valueIndexRef.value = valueIndex + 1;\n                }\n                nTriggerFormChange();\n                nTriggerFormInput();\n            }\n        }\n        function undo() {\n            const { value: valueIndex } = valueIndexRef;\n            if (valueIndex - 1 < 0)\n                return;\n            doUpdateValue(undoStackRef.value[valueIndex - 1], 'input');\n            handleComplete(false);\n            valueIndexRef.value = valueIndex - 1;\n        }\n        function redo() {\n            const { value: valueIndex } = valueIndexRef;\n            if (valueIndex < 0 || valueIndex + 1 >= undoStackRef.value.length)\n                return;\n            doUpdateValue(undoStackRef.value[valueIndex + 1], 'input');\n            handleComplete(false);\n            valueIndexRef.value = valueIndex + 1;\n        }\n        function handleClear() {\n            doUpdateValue(null, 'input');\n            doUpdateShow(false);\n        }\n        function handleConfirm() {\n            const { value } = mergedValueRef;\n            const { onConfirm } = props;\n            if (onConfirm) {\n                ;\n                onConfirm(value);\n            }\n            doUpdateShow(false);\n        }\n        const undoableRef = computed(() => valueIndexRef.value >= 1);\n        const redoableRef = computed(() => {\n            const { value: undoStack } = undoStackRef;\n            return undoStack.length > 1 && valueIndexRef.value < undoStack.length - 1;\n        });\n        watch(mergedShowRef, (value) => {\n            if (!value) {\n                undoStackRef.value = [mergedValueRef.value];\n                valueIndexRef.value = 0;\n            }\n        });\n        watchEffect(() => {\n            if (upcomingValue && upcomingValue === mergedValueRef.value) {\n                // let it works in uncontrolled mode\n            }\n            else {\n                const { value } = hsvaRef;\n                if (value) {\n                    displayedHueRef.value = value[0];\n                    displayedAlphaRef.value = value[3];\n                    displayedSvRef.value = [value[1], value[2]];\n                }\n            }\n            upcomingValue = null;\n        });\n        const cssVarsRef = computed(() => {\n            const { value: mergedSize } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { textColor, color, panelFontSize, boxShadow, border, borderRadius, dividerColor, [createKey('height', mergedSize)]: height, [createKey('fontSize', mergedSize)]: fontSize } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-text-color': textColor,\n                '--n-color': color,\n                '--n-panel-font-size': panelFontSize,\n                '--n-font-size': fontSize,\n                '--n-box-shadow': boxShadow,\n                '--n-border': border,\n                '--n-border-radius': borderRadius,\n                '--n-height': height,\n                '--n-divider-color': dividerColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('color-picker', computed(() => {\n                return mergedSizeRef.value[0];\n            }), cssVarsRef, props)\n            : undefined;\n        function renderPanel() {\n            var _a;\n            const { value: rgba } = rgbaRef;\n            const { value: displayedHue } = displayedHueRef;\n            const { internalActions, modes, actions } = props;\n            const { value: mergedTheme } = themeRef;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            return (h(\"div\", { class: [\n                    `${mergedClsPrefix}-color-picker-panel`,\n                    themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value\n                ], onDragstart: (e) => {\n                    e.preventDefault();\n                }, style: inlineThemeDisabled\n                    ? undefined\n                    : cssVarsRef.value },\n                h(\"div\", { class: `${mergedClsPrefix}-color-picker-control` },\n                    h(Pallete, { clsPrefix: mergedClsPrefix, rgba: rgba, displayedHue: displayedHue, displayedSv: displayedSvRef.value, onUpdateSV: handleUpdateSv, onComplete: handleComplete }),\n                    h(\"div\", { class: `${mergedClsPrefix}-color-picker-preview` },\n                        h(\"div\", { class: `${mergedClsPrefix}-color-picker-preview__sliders` },\n                            h(HueSlider, { clsPrefix: mergedClsPrefix, hue: displayedHue, onUpdateHue: handleUpdateHue, onComplete: handleComplete }),\n                            props.showAlpha ? (h(AlphaSlider, { clsPrefix: mergedClsPrefix, rgba: rgba, alpha: displayedAlphaRef.value, onUpdateAlpha: handleUpdateAlpha, onComplete: handleComplete })) : null),\n                        props.showPreview ? (h(ColorPreview, { clsPrefix: mergedClsPrefix, mode: displayedModeRef.value, color: rgbaRef.value && toHexString(rgbaRef.value), onUpdateColor: (color) => {\n                                doUpdateValue(color, 'input');\n                            } })) : null),\n                    h(ColorInput, { clsPrefix: mergedClsPrefix, showAlpha: props.showAlpha, mode: displayedModeRef.value, modes: modes, onUpdateMode: handleUpdateDisplayedMode, value: mergedValueRef.value, valueArr: mergedValueArrRef.value, onUpdateValue: handleInputUpdateValue }),\n                    ((_a = props.swatches) === null || _a === void 0 ? void 0 : _a.length) && (h(ColorPickerSwatches, { clsPrefix: mergedClsPrefix, mode: displayedModeRef.value, swatches: props.swatches, onUpdateColor: (color) => {\n                            doUpdateValue(color, 'input');\n                        } }))),\n                (actions === null || actions === void 0 ? void 0 : actions.length) ? (h(\"div\", { class: `${mergedClsPrefix}-color-picker-action` },\n                    actions.includes('confirm') && (h(NButton, { size: \"small\", onClick: handleConfirm, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.confirm })),\n                    actions.includes('clear') && (h(NButton, { size: \"small\", onClick: handleClear, disabled: !mergedValueRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.clear })))) : null,\n                slots.action ? (h(\"div\", { class: `${mergedClsPrefix}-color-picker-action` }, { default: slots.action })) : internalActions ? (h(\"div\", { class: `${mergedClsPrefix}-color-picker-action` },\n                    internalActions.includes('undo') && (h(NButton, { size: \"small\", onClick: undo, disabled: !undoableRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.undo })),\n                    internalActions.includes('redo') && (h(NButton, { size: \"small\", onClick: redo, disabled: !redoableRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.redo })))) : null));\n        }\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            namespace: namespaceRef,\n            selfRef,\n            hsla: hslaRef,\n            rgba: rgbaRef,\n            mergedShow: mergedShowRef,\n            mergedDisabled: mergedDisabledRef,\n            isMounted: useIsMounted(),\n            adjustedTo: useAdjustedTo(props),\n            mergedValue: mergedValueRef,\n            handleTriggerClick() {\n                doUpdateShow(true);\n            },\n            handleClickOutside(e) {\n                var _a;\n                if ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e))) {\n                    return;\n                }\n                doUpdateShow(false);\n            },\n            renderPanel,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { $slots, mergedClsPrefix, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [this.themeClass, `${mergedClsPrefix}-color-picker`], ref: \"selfRef\", style: this.cssVars },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(ColorPickerTrigger, { clsPrefix: mergedClsPrefix, value: this.mergedValue, hsla: this.hsla, disabled: this.mergedDisabled, onClick: this.handleTriggerClick }, {\n                            label: $slots.label\n                        }))\n                    }),\n                    h(VFollower, { placement: this.placement, show: this.mergedShow, containerClass: this.namespace, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, to: this.adjustedTo }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted }, {\n                            default: () => this.mergedShow\n                                ? withDirectives(this.renderPanel(), [\n                                    [\n                                        clickoutside,\n                                        this.handleClickOutside,\n                                        undefined,\n                                        { capture: true }\n                                    ]\n                                ])\n                                : null\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}