{"ast":null,"code":"import { defineComponent, h, inject, ref, watchEffect, onMounted, onBeforeUnmount, provide, toRef } from 'vue';\nimport { isImageSupportNativeLazy } from '../../_utils/env/is-native-lazy-load';\nimport { useConfig } from '../../_mixins';\nimport { imageContextKey, imagePreviewSharedProps } from './interface';\nimport { observeIntersection } from './utils';\nimport { imageGroupInjectionKey } from './ImageGroup';\nimport NImagePreview from './ImagePreview';\nexport const imageProps = Object.assign({\n  alt: String,\n  height: [String, Number],\n  imgProps: Object,\n  previewedImgProps: Object,\n  lazy: Boolean,\n  intersectionObserverOptions: Object,\n  objectFit: {\n    type: String,\n    default: 'fill'\n  },\n  previewSrc: String,\n  fallbackSrc: String,\n  width: [String, Number],\n  src: String,\n  previewDisabled: Boolean,\n  loadDescription: String,\n  onError: Function,\n  onLoad: Function\n}, imagePreviewSharedProps);\nexport default defineComponent({\n  name: 'Image',\n  props: imageProps,\n  inheritAttrs: false,\n  setup(props) {\n    const imageRef = ref(null);\n    const showErrorRef = ref(false);\n    const previewInstRef = ref(null);\n    const imageGroupHandle = inject(imageGroupInjectionKey, null);\n    const {\n      mergedClsPrefixRef\n    } = imageGroupHandle || useConfig(props);\n    const exposedMethods = {\n      click: () => {\n        if (props.previewDisabled || showErrorRef.value) return;\n        const mergedPreviewSrc = props.previewSrc || props.src;\n        if (imageGroupHandle) {\n          imageGroupHandle.setPreviewSrc(mergedPreviewSrc);\n          imageGroupHandle.setThumbnailEl(imageRef.value);\n          imageGroupHandle.toggleShow();\n          return;\n        }\n        const {\n          value: previewInst\n        } = previewInstRef;\n        if (!previewInst) return;\n        previewInst.setPreviewSrc(mergedPreviewSrc);\n        previewInst.setThumbnailEl(imageRef.value);\n        previewInst.toggleShow();\n      }\n    };\n    const shouldStartLoadingRef = ref(!props.lazy);\n    onMounted(() => {\n      var _a;\n      (_a = imageRef.value) === null || _a === void 0 ? void 0 : _a.setAttribute('data-group-id', (imageGroupHandle === null || imageGroupHandle === void 0 ? void 0 : imageGroupHandle.groupId) || '');\n    });\n    onMounted(() => {\n      // Use IntersectionObserver if lazy and intersectionObserverOptions is set\n      if (props.lazy && props.intersectionObserverOptions) {\n        let unobserve;\n        const stopWatchHandle = watchEffect(() => {\n          unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n          unobserve = undefined;\n          unobserve = observeIntersection(imageRef.value, props.intersectionObserverOptions, shouldStartLoadingRef);\n        });\n        onBeforeUnmount(() => {\n          stopWatchHandle();\n          unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n        });\n      }\n    });\n    watchEffect(() => {\n      var _a;\n      void props.src;\n      void ((_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.src);\n      showErrorRef.value = false;\n    });\n    const loadedRef = ref(false);\n    provide(imageContextKey, {\n      previewedImgPropsRef: toRef(props, 'previewedImgProps')\n    });\n    return Object.assign({\n      mergedClsPrefix: mergedClsPrefixRef,\n      groupId: imageGroupHandle === null || imageGroupHandle === void 0 ? void 0 : imageGroupHandle.groupId,\n      previewInstRef,\n      imageRef,\n      showError: showErrorRef,\n      shouldStartLoading: shouldStartLoadingRef,\n      loaded: loadedRef,\n      mergedOnClick: e => {\n        var _a, _b;\n        exposedMethods.click();\n        (_b = (_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      },\n      mergedOnError: e => {\n        if (!shouldStartLoadingRef.value) return;\n        showErrorRef.value = true;\n        const {\n          onError,\n          imgProps: {\n            onError: imgPropsOnError\n          } = {}\n        } = props;\n        onError === null || onError === void 0 ? void 0 : onError(e);\n        imgPropsOnError === null || imgPropsOnError === void 0 ? void 0 : imgPropsOnError(e);\n      },\n      mergedOnLoad: e => {\n        const {\n          onLoad,\n          imgProps: {\n            onLoad: imgPropsOnLoad\n          } = {}\n        } = props;\n        onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n        imgPropsOnLoad === null || imgPropsOnLoad === void 0 ? void 0 : imgPropsOnLoad(e);\n        loadedRef.value = true;\n      }\n    }, exposedMethods);\n  },\n  render() {\n    var _a, _b;\n    const {\n      mergedClsPrefix,\n      imgProps = {},\n      loaded,\n      $attrs,\n      lazy\n    } = this;\n    const placeholderNode = (_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a);\n    const loadSrc = this.src || imgProps.src;\n    const imgNode = h('img', Object.assign(Object.assign({}, imgProps), {\n      ref: 'imageRef',\n      width: this.width || imgProps.width,\n      height: this.height || imgProps.height,\n      src: this.showError ? this.fallbackSrc : lazy && this.intersectionObserverOptions ? this.shouldStartLoading ? loadSrc : undefined : loadSrc,\n      alt: this.alt || imgProps.alt,\n      'aria-label': this.alt || imgProps.alt,\n      onClick: this.mergedOnClick,\n      onError: this.mergedOnError,\n      onLoad: this.mergedOnLoad,\n      // If interseciton observer options is set, do not use native lazy\n      loading: isImageSupportNativeLazy && lazy && !this.intersectionObserverOptions ? 'lazy' : 'eager',\n      style: [imgProps.style || '', placeholderNode && !loaded ? {\n        height: '0',\n        width: '0',\n        visibility: 'hidden'\n      } : '', {\n        objectFit: this.objectFit\n      }],\n      'data-error': this.showError,\n      'data-preview-src': this.previewSrc || this.src\n    }));\n    return h(\"div\", Object.assign({}, $attrs, {\n      role: \"none\",\n      class: [$attrs.class, `${mergedClsPrefix}-image`, (this.previewDisabled || this.showError) && `${mergedClsPrefix}-image--preview-disabled`]\n    }), this.groupId ? imgNode : h(NImagePreview, {\n      theme: this.theme,\n      themeOverrides: this.themeOverrides,\n      clsPrefix: mergedClsPrefix,\n      ref: \"previewInstRef\",\n      showToolbar: this.showToolbar,\n      showToolbarTooltip: this.showToolbarTooltip\n    }, {\n      default: () => imgNode\n    }), !loaded && placeholderNode);\n  }\n});","map":{"version":3,"names":["defineComponent","h","inject","ref","watchEffect","onMounted","onBeforeUnmount","provide","toRef","isImageSupportNativeLazy","useConfig","imageContextKey","imagePreviewSharedProps","observeIntersection","imageGroupInjectionKey","NImagePreview","imageProps","Object","assign","alt","String","height","Number","imgProps","previewedImgProps","lazy","Boolean","intersectionObserverOptions","objectFit","type","default","previewSrc","fallbackSrc","width","src","previewDisabled","loadDescription","onError","Function","onLoad","name","props","inheritAttrs","setup","imageRef","showErrorRef","previewInstRef","imageGroupHandle","mergedClsPrefixRef","exposedMethods","click","value","mergedPreviewSrc","setPreviewSrc","setThumbnailEl","toggleShow","previewInst","shouldStartLoadingRef","_a","setAttribute","groupId","unobserve","stopWatchHandle","undefined","loadedRef","previewedImgPropsRef","mergedClsPrefix","showError","shouldStartLoading","loaded","mergedOnClick","e","_b","onClick","call","mergedOnError","imgPropsOnError","mergedOnLoad","imgPropsOnLoad","render","$attrs","placeholderNode","$slots","placeholder","loadSrc","imgNode","loading","style","visibility","role","class","theme","themeOverrides","clsPrefix","showToolbar","showToolbarTooltip"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/image/src/Image.js"],"sourcesContent":["import { defineComponent, h, inject, ref, watchEffect, onMounted, onBeforeUnmount, provide, toRef } from 'vue';\nimport { isImageSupportNativeLazy } from '../../_utils/env/is-native-lazy-load';\nimport { useConfig } from '../../_mixins';\nimport { imageContextKey, imagePreviewSharedProps } from './interface';\nimport { observeIntersection } from './utils';\nimport { imageGroupInjectionKey } from './ImageGroup';\nimport NImagePreview from './ImagePreview';\nexport const imageProps = Object.assign({ alt: String, height: [String, Number], imgProps: Object, previewedImgProps: Object, lazy: Boolean, intersectionObserverOptions: Object, objectFit: {\n        type: String,\n        default: 'fill'\n    }, previewSrc: String, fallbackSrc: String, width: [String, Number], src: String, previewDisabled: Boolean, loadDescription: String, onError: Function, onLoad: Function }, imagePreviewSharedProps);\nexport default defineComponent({\n    name: 'Image',\n    props: imageProps,\n    inheritAttrs: false,\n    setup(props) {\n        const imageRef = ref(null);\n        const showErrorRef = ref(false);\n        const previewInstRef = ref(null);\n        const imageGroupHandle = inject(imageGroupInjectionKey, null);\n        const { mergedClsPrefixRef } = imageGroupHandle || useConfig(props);\n        const exposedMethods = {\n            click: () => {\n                if (props.previewDisabled || showErrorRef.value)\n                    return;\n                const mergedPreviewSrc = props.previewSrc || props.src;\n                if (imageGroupHandle) {\n                    imageGroupHandle.setPreviewSrc(mergedPreviewSrc);\n                    imageGroupHandle.setThumbnailEl(imageRef.value);\n                    imageGroupHandle.toggleShow();\n                    return;\n                }\n                const { value: previewInst } = previewInstRef;\n                if (!previewInst)\n                    return;\n                previewInst.setPreviewSrc(mergedPreviewSrc);\n                previewInst.setThumbnailEl(imageRef.value);\n                previewInst.toggleShow();\n            }\n        };\n        const shouldStartLoadingRef = ref(!props.lazy);\n        onMounted(() => {\n            var _a;\n            (_a = imageRef.value) === null || _a === void 0 ? void 0 : _a.setAttribute('data-group-id', (imageGroupHandle === null || imageGroupHandle === void 0 ? void 0 : imageGroupHandle.groupId) || '');\n        });\n        onMounted(() => {\n            // Use IntersectionObserver if lazy and intersectionObserverOptions is set\n            if (props.lazy && props.intersectionObserverOptions) {\n                let unobserve;\n                const stopWatchHandle = watchEffect(() => {\n                    unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n                    unobserve = undefined;\n                    unobserve = observeIntersection(imageRef.value, props.intersectionObserverOptions, shouldStartLoadingRef);\n                });\n                onBeforeUnmount(() => {\n                    stopWatchHandle();\n                    unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n                });\n            }\n        });\n        watchEffect(() => {\n            var _a;\n            void props.src;\n            void ((_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.src);\n            showErrorRef.value = false;\n        });\n        const loadedRef = ref(false);\n        provide(imageContextKey, {\n            previewedImgPropsRef: toRef(props, 'previewedImgProps')\n        });\n        return Object.assign({ mergedClsPrefix: mergedClsPrefixRef, groupId: imageGroupHandle === null || imageGroupHandle === void 0 ? void 0 : imageGroupHandle.groupId, previewInstRef,\n            imageRef, showError: showErrorRef, shouldStartLoading: shouldStartLoadingRef, loaded: loadedRef, mergedOnClick: (e) => {\n                var _a, _b;\n                exposedMethods.click();\n                (_b = (_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n            }, mergedOnError: (e) => {\n                if (!shouldStartLoadingRef.value)\n                    return;\n                showErrorRef.value = true;\n                const { onError, imgProps: { onError: imgPropsOnError } = {} } = props;\n                onError === null || onError === void 0 ? void 0 : onError(e);\n                imgPropsOnError === null || imgPropsOnError === void 0 ? void 0 : imgPropsOnError(e);\n            }, mergedOnLoad: (e) => {\n                const { onLoad, imgProps: { onLoad: imgPropsOnLoad } = {} } = props;\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n                imgPropsOnLoad === null || imgPropsOnLoad === void 0 ? void 0 : imgPropsOnLoad(e);\n                loadedRef.value = true;\n            } }, exposedMethods);\n    },\n    render() {\n        var _a, _b;\n        const { mergedClsPrefix, imgProps = {}, loaded, $attrs, lazy } = this;\n        const placeholderNode = (_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a);\n        const loadSrc = this.src || imgProps.src;\n        const imgNode = h('img', Object.assign(Object.assign({}, imgProps), { ref: 'imageRef', width: this.width || imgProps.width, height: this.height || imgProps.height, src: this.showError\n                ? this.fallbackSrc\n                : lazy && this.intersectionObserverOptions\n                    ? this.shouldStartLoading\n                        ? loadSrc\n                        : undefined\n                    : loadSrc, alt: this.alt || imgProps.alt, 'aria-label': this.alt || imgProps.alt, onClick: this.mergedOnClick, onError: this.mergedOnError, onLoad: this.mergedOnLoad, \n            // If interseciton observer options is set, do not use native lazy\n            loading: isImageSupportNativeLazy && lazy && !this.intersectionObserverOptions\n                ? 'lazy'\n                : 'eager', style: [\n                imgProps.style || '',\n                placeholderNode && !loaded\n                    ? { height: '0', width: '0', visibility: 'hidden' }\n                    : '',\n                { objectFit: this.objectFit }\n            ], 'data-error': this.showError, 'data-preview-src': this.previewSrc || this.src }));\n        return (h(\"div\", Object.assign({}, $attrs, { role: \"none\", class: [\n                $attrs.class,\n                `${mergedClsPrefix}-image`,\n                (this.previewDisabled || this.showError) &&\n                    `${mergedClsPrefix}-image--preview-disabled`\n            ] }),\n            this.groupId ? (imgNode) : (h(NImagePreview, { theme: this.theme, themeOverrides: this.themeOverrides, clsPrefix: mergedClsPrefix, ref: \"previewInstRef\", showToolbar: this.showToolbar, showToolbarTooltip: this.showToolbarTooltip }, {\n                default: () => imgNode\n            })),\n            !loaded && placeholderNode));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}