{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { h, defineComponent, computed, toRef, ref, provide, inject, watch, Transition, onMounted } from 'vue';\nimport Schema from 'async-validator';\nimport { get } from 'lodash-es';\nimport { createId } from 'seemly';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey, useInjectionInstanceCollection, keysOf, resolveWrappedSlot } from '../../_utils';\nimport { formLight } from '../styles';\nimport { formItemMisc, formItemSize, formItemRule } from './utils';\nimport { formInjectionKey, formItemInstsInjectionKey } from './context';\nimport style from './styles/form-item.cssr';\nexport const formItemProps = Object.assign(Object.assign({}, useTheme.props), {\n  label: String,\n  labelWidth: [Number, String],\n  labelStyle: [String, Object],\n  labelAlign: String,\n  labelPlacement: String,\n  path: String,\n  first: Boolean,\n  rulePath: String,\n  required: Boolean,\n  showRequireMark: {\n    type: Boolean,\n    default: undefined\n  },\n  requireMarkPlacement: String,\n  showFeedback: {\n    type: Boolean,\n    default: undefined\n  },\n  rule: [Object, Array],\n  size: String,\n  ignorePathChange: Boolean,\n  validationStatus: String,\n  feedback: String,\n  showLabel: {\n    type: Boolean,\n    default: undefined\n  },\n  labelProps: Object\n});\nexport const formItemPropKeys = keysOf(formItemProps);\n// wrap sync validator\nfunction wrapValidator(validator, async) {\n  return (...args) => {\n    try {\n      const validateResult = validator(...args);\n      if (!async && (typeof validateResult === 'boolean' || validateResult instanceof Error || Array.isArray(validateResult)) || (\n      // Error[]\n      validateResult === null || validateResult === void 0 ? void 0 : validateResult.then)) {\n        return validateResult;\n      } else if (validateResult === undefined) {\n        return true;\n      } else {\n        warn('form-item/validate', `You return a ${typeof validateResult} ` + 'typed value in the validator method, which is not recommended. Please use ' + (async ? '`Promise`' : '`boolean`, `Error` or `Promise`') + ' typed value instead.');\n        return true;\n      }\n    } catch (err) {\n      warn('form-item/validate', 'An error is catched in the validation, ' + \"so the validation won't be done. Your callback in `validate` method of \" + \"`n-form` or `n-form-item` won't be called in this validation.\");\n      console.error(err);\n      // If returns undefined, async-validator won't trigger callback\n      // so the result will be abandoned, which means not true and not false\n      return undefined;\n    }\n  };\n}\nexport default defineComponent({\n  name: 'FormItem',\n  props: formItemProps,\n  setup(props) {\n    useInjectionInstanceCollection(formItemInstsInjectionKey, 'formItems', toRef(props, 'path'));\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const NForm = inject(formInjectionKey, null);\n    const formItemSizeRefs = formItemSize(props);\n    const formItemMiscRefs = formItemMisc(props);\n    const {\n      validationErrored: validationErroredRef\n    } = formItemMiscRefs;\n    const {\n      mergedRequired: mergedRequiredRef,\n      mergedRules: mergedRulesRef\n    } = formItemRule(props);\n    const {\n      mergedSize: mergedSizeRef\n    } = formItemSizeRefs;\n    const {\n      mergedLabelPlacement: labelPlacementRef,\n      mergedLabelAlign: labelTextAlignRef,\n      mergedRequireMarkPlacement: mergedRequireMarkPlacementRef\n    } = formItemMiscRefs;\n    const renderExplainsRef = ref([]);\n    const feedbackIdRef = ref(createId());\n    const mergedDisabledRef = NForm ? toRef(NForm.props, 'disabled') : ref(false);\n    const themeRef = useTheme('Form', '-form-item', style, formLight, props, mergedClsPrefixRef);\n    watch(toRef(props, 'path'), () => {\n      if (props.ignorePathChange) return;\n      restoreValidation();\n    });\n    function restoreValidation() {\n      renderExplainsRef.value = [];\n      validationErroredRef.value = false;\n      if (props.feedback) {\n        feedbackIdRef.value = createId();\n      }\n    }\n    function handleContentBlur() {\n      void internalValidate('blur');\n    }\n    function handleContentChange() {\n      void internalValidate('change');\n    }\n    function handleContentFocus() {\n      void internalValidate('focus');\n    }\n    function handleContentInput() {\n      void internalValidate('input');\n    }\n    function validate(options, callback) {\n      return __awaiter(this, void 0, void 0, function* () {\n        /** the following code is for compatibility */\n        let trigger;\n        let validateCallback;\n        let shouldRuleBeApplied;\n        let asyncValidatorOptions;\n        if (typeof options === 'string') {\n          trigger = options;\n          validateCallback = callback;\n        } else if (options !== null && typeof options === 'object') {\n          trigger = options.trigger;\n          validateCallback = options.callback;\n          shouldRuleBeApplied = options.shouldRuleBeApplied;\n          asyncValidatorOptions = options.options;\n        }\n        yield new Promise((resolve, reject) => {\n          void internalValidate(trigger, shouldRuleBeApplied, asyncValidatorOptions).then(({\n            valid,\n            errors\n          }) => {\n            if (valid) {\n              if (validateCallback) {\n                validateCallback();\n              }\n              resolve();\n            } else {\n              if (validateCallback) {\n                validateCallback(errors);\n              }\n              reject(errors);\n            }\n          });\n        });\n      });\n    }\n    const internalValidate = (trigger = null, shouldRuleBeApplied = () => true, options = {\n      suppressWarning: true\n    }) => __awaiter(this, void 0, void 0, function* () {\n      const {\n        path\n      } = props;\n      if (!options) {\n        options = {};\n      } else {\n        if (!options.first) options.first = props.first;\n      }\n      const {\n        value: rules\n      } = mergedRulesRef;\n      const value = NForm ? get(NForm.props.model, path || '') : undefined;\n      const messageRenderers = {};\n      const originalMessageRendersMessage = {};\n      const activeRules = (!trigger ? rules : rules.filter(rule => {\n        if (Array.isArray(rule.trigger)) {\n          return rule.trigger.includes(trigger);\n        } else {\n          return rule.trigger === trigger;\n        }\n      })).filter(shouldRuleBeApplied).map((rule, i) => {\n        const shallowClonedRule = Object.assign({}, rule);\n        if (shallowClonedRule.validator) {\n          shallowClonedRule.validator = wrapValidator(shallowClonedRule.validator, false);\n        }\n        if (shallowClonedRule.asyncValidator) {\n          shallowClonedRule.asyncValidator = wrapValidator(shallowClonedRule.asyncValidator, true);\n        }\n        if (shallowClonedRule.renderMessage) {\n          const rendererKey = `__renderMessage__${i}`;\n          originalMessageRendersMessage[rendererKey] = shallowClonedRule.message;\n          shallowClonedRule.message = rendererKey;\n          messageRenderers[rendererKey] = shallowClonedRule.renderMessage;\n        }\n        return shallowClonedRule;\n      });\n      if (!activeRules.length) {\n        return {\n          valid: true\n        };\n      }\n      const mergedPath = path !== null && path !== void 0 ? path : '__n_no_path__';\n      const validator = new Schema({\n        [mergedPath]: activeRules\n      });\n      const {\n        validateMessages\n      } = (NForm === null || NForm === void 0 ? void 0 : NForm.props) || {};\n      if (validateMessages) {\n        validator.messages(validateMessages);\n      }\n      return yield new Promise(resolve => {\n        void validator.validate({\n          [mergedPath]: value\n        }, options, errors => {\n          if (errors === null || errors === void 0 ? void 0 : errors.length) {\n            renderExplainsRef.value = errors.map(error => {\n              const transformedMessage = (error === null || error === void 0 ? void 0 : error.message) || '';\n              return {\n                key: transformedMessage,\n                render: () => {\n                  if (transformedMessage.startsWith('__renderMessage__')) {\n                    return messageRenderers[transformedMessage]();\n                  }\n                  return transformedMessage;\n                }\n              };\n            });\n            errors.forEach(error => {\n              var _a;\n              if ((_a = error.message) === null || _a === void 0 ? void 0 : _a.startsWith('__renderMessage__')) {\n                error.message = originalMessageRendersMessage[error.message];\n              }\n            });\n            validationErroredRef.value = true;\n            resolve({\n              valid: false,\n              errors\n            });\n          } else {\n            restoreValidation();\n            resolve({\n              valid: true\n            });\n          }\n        });\n      });\n    });\n    provide(formItemInjectionKey, {\n      path: toRef(props, 'path'),\n      disabled: mergedDisabledRef,\n      mergedSize: formItemSizeRefs.mergedSize,\n      mergedValidationStatus: formItemMiscRefs.mergedValidationStatus,\n      restoreValidation,\n      handleContentBlur,\n      handleContentChange,\n      handleContentFocus,\n      handleContentInput\n    });\n    const exposedRef = {\n      validate,\n      restoreValidation,\n      internalValidate\n    };\n    const labelElementRef = ref(null);\n    onMounted(() => {\n      if (!formItemMiscRefs.isAutoLabelWidth.value) return;\n      const labelElement = labelElementRef.value;\n      if (labelElement !== null) {\n        const memoizedWhitespace = labelElement.style.whiteSpace;\n        labelElement.style.whiteSpace = 'nowrap';\n        labelElement.style.width = '';\n        NForm === null || NForm === void 0 ? void 0 : NForm.deriveMaxChildLabelWidth(Number(getComputedStyle(labelElement).width.slice(0, -2)));\n        labelElement.style.whiteSpace = memoizedWhitespace;\n      }\n    });\n    const cssVarsRef = computed(() => {\n      var _a;\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        value: labelPlacement\n      } = labelPlacementRef;\n      const direction = labelPlacement === 'top' ? 'vertical' : 'horizontal';\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          labelTextColor,\n          asteriskColor,\n          lineHeight,\n          feedbackTextColor,\n          feedbackTextColorWarning,\n          feedbackTextColorError,\n          feedbackPadding,\n          labelFontWeight,\n          [createKey('labelHeight', size)]: labelHeight,\n          [createKey('blankHeight', size)]: blankHeight,\n          [createKey('feedbackFontSize', size)]: feedbackFontSize,\n          [createKey('feedbackHeight', size)]: feedbackHeight,\n          [createKey('labelPadding', direction)]: labelPadding,\n          [createKey('labelTextAlign', direction)]: labelTextAlign,\n          [createKey(createKey('labelFontSize', labelPlacement), size)]: labelFontSize\n        }\n      } = themeRef.value;\n      let mergedLabelTextAlign = (_a = labelTextAlignRef.value) !== null && _a !== void 0 ? _a : labelTextAlign;\n      if (labelPlacement === 'top') {\n        mergedLabelTextAlign = mergedLabelTextAlign === 'right' ? 'flex-end' : 'flex-start';\n      }\n      const cssVars = {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-line-height': lineHeight,\n        '--n-blank-height': blankHeight,\n        '--n-label-font-size': labelFontSize,\n        '--n-label-text-align': mergedLabelTextAlign,\n        '--n-label-height': labelHeight,\n        '--n-label-padding': labelPadding,\n        '--n-label-font-weight': labelFontWeight,\n        '--n-asterisk-color': asteriskColor,\n        '--n-label-text-color': labelTextColor,\n        '--n-feedback-padding': feedbackPadding,\n        '--n-feedback-font-size': feedbackFontSize,\n        '--n-feedback-height': feedbackHeight,\n        '--n-feedback-text-color': feedbackTextColor,\n        '--n-feedback-text-color-warning': feedbackTextColorWarning,\n        '--n-feedback-text-color-error': feedbackTextColorError\n      };\n      return cssVars;\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('form-item', computed(() => {\n      var _a;\n      return `${mergedSizeRef.value[0]}${labelPlacementRef.value[0]}${((_a = labelTextAlignRef.value) === null || _a === void 0 ? void 0 : _a[0]) || ''}`;\n    }), cssVarsRef, props) : undefined;\n    const reverseColSpaceRef = computed(() => {\n      // label placement left\n      // require-mark-placement | label align | areas (1fr auto)\n      // left                   | left        | mark text (need reverse)\n      // left                   | right       | mark text (okay)\n      // right                  | left        | mark text (okay)\n      // right                  | right       | mark text (okay)\n      // right-hanging          | left        | text mark (okay)\n      // right-hanging          | right       | text mark (okay)\n      return labelPlacementRef.value === 'left' && mergedRequireMarkPlacementRef.value === 'left' && labelTextAlignRef.value === 'left';\n    });\n    return Object.assign(Object.assign(Object.assign(Object.assign({\n      labelElementRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedRequired: mergedRequiredRef,\n      feedbackId: feedbackIdRef,\n      renderExplains: renderExplainsRef,\n      reverseColSpace: reverseColSpaceRef\n    }, formItemMiscRefs), formItemSizeRefs), exposedRef), {\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix,\n      mergedShowLabel,\n      mergedShowRequireMark,\n      mergedRequireMarkPlacement,\n      onRender\n    } = this;\n    const renderedShowRequireMark = mergedShowRequireMark !== undefined ? mergedShowRequireMark : this.mergedRequired;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    const renderLabel = () => {\n      const labelText = this.$slots.label ? this.$slots.label() : this.label;\n      if (!labelText) return null;\n      const textNode = h(\"span\", {\n        class: `${mergedClsPrefix}-form-item-label__text`\n      }, labelText);\n      const markNode = renderedShowRequireMark ? h(\"span\", {\n        class: `${mergedClsPrefix}-form-item-label__asterisk`\n      }, mergedRequireMarkPlacement !== 'left' ? '\\u00A0*' : '*\\u00A0') : mergedRequireMarkPlacement === 'right-hanging' && h(\"span\", {\n        class: `${mergedClsPrefix}-form-item-label__asterisk-placeholder`\n      }, '\\u00A0*');\n      const {\n        labelProps\n      } = this;\n      return h(\"label\", Object.assign({}, labelProps, {\n        class: [labelProps === null || labelProps === void 0 ? void 0 : labelProps.class, `${mergedClsPrefix}-form-item-label`, `${mergedClsPrefix}-form-item-label--${mergedRequireMarkPlacement}-mark`, this.reverseColSpace && `${mergedClsPrefix}-form-item-label--reverse-columns-space`],\n        style: this.mergedLabelStyle,\n        ref: \"labelElementRef\"\n      }), mergedRequireMarkPlacement === 'left' ? [markNode, textNode] : [textNode, markNode]);\n    };\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-form-item`, this.themeClass, `${mergedClsPrefix}-form-item--${this.mergedSize}-size`, `${mergedClsPrefix}-form-item--${this.mergedLabelPlacement}-labelled`, this.isAutoLabelWidth && `${mergedClsPrefix}-form-item--auto-label-width`, !mergedShowLabel && `${mergedClsPrefix}-form-item--no-label`],\n      style: this.cssVars\n    }, mergedShowLabel && renderLabel(), h(\"div\", {\n      class: [`${mergedClsPrefix}-form-item-blank`, this.mergedValidationStatus && `${mergedClsPrefix}-form-item-blank--${this.mergedValidationStatus}`]\n    }, $slots), this.mergedShowFeedback ? h(\"div\", {\n      key: this.feedbackId,\n      class: `${mergedClsPrefix}-form-item-feedback-wrapper`\n    }, h(Transition, {\n      name: \"fade-down-transition\",\n      mode: \"out-in\"\n    }, {\n      default: () => {\n        const {\n          mergedValidationStatus\n        } = this;\n        return resolveWrappedSlot($slots.feedback, children => {\n          var _a;\n          const {\n            feedback\n          } = this;\n          const feedbackNodes = children || feedback ? h(\"div\", {\n            key: \"__feedback__\",\n            class: `${mergedClsPrefix}-form-item-feedback__line`\n          }, children || feedback) : this.renderExplains.length ? (_a = this.renderExplains) === null || _a === void 0 ? void 0 : _a.map(({\n            key,\n            render\n          }) => h(\"div\", {\n            key: key,\n            class: `${mergedClsPrefix}-form-item-feedback__line`\n          }, render())) : null;\n          return feedbackNodes ? mergedValidationStatus === 'warning' ? h(\"div\", {\n            key: \"controlled-warning\",\n            class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--warning`\n          }, feedbackNodes) : mergedValidationStatus === 'error' ? h(\"div\", {\n            key: \"controlled-error\",\n            class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--error`\n          }, feedbackNodes) : mergedValidationStatus === 'success' ? h(\"div\", {\n            key: \"controlled-success\",\n            class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--success`\n          }, feedbackNodes) : h(\"div\", {\n            key: \"controlled-default\",\n            class: `${mergedClsPrefix}-form-item-feedback`\n          }, feedbackNodes) : null;\n        });\n      }\n    })) : null);\n  }\n});","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","h","defineComponent","computed","toRef","ref","provide","inject","watch","Transition","onMounted","Schema","get","createId","formItemInjectionKey","useConfig","useTheme","useThemeClass","warn","createKey","useInjectionInstanceCollection","keysOf","resolveWrappedSlot","formLight","formItemMisc","formItemSize","formItemRule","formInjectionKey","formItemInstsInjectionKey","style","formItemProps","Object","assign","props","label","String","labelWidth","Number","labelStyle","labelAlign","labelPlacement","path","first","Boolean","rulePath","required","showRequireMark","type","default","undefined","requireMarkPlacement","showFeedback","rule","Array","size","ignorePathChange","validationStatus","feedback","showLabel","labelProps","formItemPropKeys","wrapValidator","validator","async","args","validateResult","Error","isArray","err","console","error","name","setup","mergedClsPrefixRef","inlineThemeDisabled","NForm","formItemSizeRefs","formItemMiscRefs","validationErrored","validationErroredRef","mergedRequired","mergedRequiredRef","mergedRules","mergedRulesRef","mergedSize","mergedSizeRef","mergedLabelPlacement","labelPlacementRef","mergedLabelAlign","labelTextAlignRef","mergedRequireMarkPlacement","mergedRequireMarkPlacementRef","renderExplainsRef","feedbackIdRef","mergedDisabledRef","themeRef","restoreValidation","handleContentBlur","internalValidate","handleContentChange","handleContentFocus","handleContentInput","validate","options","callback","trigger","validateCallback","shouldRuleBeApplied","asyncValidatorOptions","valid","errors","suppressWarning","rules","model","messageRenderers","originalMessageRendersMessage","activeRules","filter","includes","map","i","shallowClonedRule","asyncValidator","renderMessage","rendererKey","message","length","mergedPath","validateMessages","messages","transformedMessage","key","render","startsWith","forEach","_a","disabled","mergedValidationStatus","exposedRef","labelElementRef","isAutoLabelWidth","labelElement","memoizedWhitespace","whiteSpace","width","deriveMaxChildLabelWidth","getComputedStyle","slice","cssVarsRef","direction","common","cubicBezierEaseInOut","self","labelTextColor","asteriskColor","lineHeight","feedbackTextColor","feedbackTextColorWarning","feedbackTextColorError","feedbackPadding","labelFontWeight","labelHeight","blankHeight","feedbackFontSize","feedbackHeight","labelPadding","labelTextAlign","labelFontSize","mergedLabelTextAlign","cssVars","themeClassHandle","reverseColSpaceRef","mergedClsPrefix","feedbackId","renderExplains","reverseColSpace","themeClass","onRender","$slots","mergedShowLabel","mergedShowRequireMark","renderedShowRequireMark","renderLabel","labelText","textNode","class","markNode","mergedLabelStyle","mergedShowFeedback","mode","children","feedbackNodes"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/form/src/FormItem.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { h, defineComponent, computed, toRef, ref, provide, inject, watch, Transition, onMounted } from 'vue';\nimport Schema from 'async-validator';\nimport { get } from 'lodash-es';\nimport { createId } from 'seemly';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey, useInjectionInstanceCollection, keysOf, resolveWrappedSlot } from '../../_utils';\nimport { formLight } from '../styles';\nimport { formItemMisc, formItemSize, formItemRule } from './utils';\nimport { formInjectionKey, formItemInstsInjectionKey } from './context';\nimport style from './styles/form-item.cssr';\nexport const formItemProps = Object.assign(Object.assign({}, useTheme.props), { label: String, labelWidth: [Number, String], labelStyle: [String, Object], labelAlign: String, labelPlacement: String, path: String, first: Boolean, rulePath: String, required: Boolean, showRequireMark: {\n        type: Boolean,\n        default: undefined\n    }, requireMarkPlacement: String, showFeedback: {\n        type: Boolean,\n        default: undefined\n    }, rule: [Object, Array], size: String, ignorePathChange: Boolean, validationStatus: String, feedback: String, showLabel: {\n        type: Boolean,\n        default: undefined\n    }, labelProps: Object });\nexport const formItemPropKeys = keysOf(formItemProps);\n// wrap sync validator\nfunction wrapValidator(validator, async) {\n    return (...args) => {\n        try {\n            const validateResult = validator(...args);\n            if ((!async &&\n                (typeof validateResult === 'boolean' ||\n                    validateResult instanceof Error ||\n                    Array.isArray(validateResult))) || // Error[]\n                (validateResult === null || validateResult === void 0 ? void 0 : validateResult.then)) {\n                return validateResult;\n            }\n            else if (validateResult === undefined) {\n                return true;\n            }\n            else {\n                warn('form-item/validate', `You return a ${typeof validateResult} ` +\n                    'typed value in the validator method, which is not recommended. Please use ' +\n                    (async ? '`Promise`' : '`boolean`, `Error` or `Promise`') +\n                    ' typed value instead.');\n                return true;\n            }\n        }\n        catch (err) {\n            warn('form-item/validate', 'An error is catched in the validation, ' +\n                \"so the validation won't be done. Your callback in `validate` method of \" +\n                \"`n-form` or `n-form-item` won't be called in this validation.\");\n            console.error(err);\n            // If returns undefined, async-validator won't trigger callback\n            // so the result will be abandoned, which means not true and not false\n            return undefined;\n        }\n    };\n}\nexport default defineComponent({\n    name: 'FormItem',\n    props: formItemProps,\n    setup(props) {\n        useInjectionInstanceCollection(formItemInstsInjectionKey, 'formItems', toRef(props, 'path'));\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const NForm = inject(formInjectionKey, null);\n        const formItemSizeRefs = formItemSize(props);\n        const formItemMiscRefs = formItemMisc(props);\n        const { validationErrored: validationErroredRef } = formItemMiscRefs;\n        const { mergedRequired: mergedRequiredRef, mergedRules: mergedRulesRef } = formItemRule(props);\n        const { mergedSize: mergedSizeRef } = formItemSizeRefs;\n        const { mergedLabelPlacement: labelPlacementRef, mergedLabelAlign: labelTextAlignRef, mergedRequireMarkPlacement: mergedRequireMarkPlacementRef } = formItemMiscRefs;\n        const renderExplainsRef = ref([]);\n        const feedbackIdRef = ref(createId());\n        const mergedDisabledRef = NForm\n            ? toRef(NForm.props, 'disabled')\n            : ref(false);\n        const themeRef = useTheme('Form', '-form-item', style, formLight, props, mergedClsPrefixRef);\n        watch(toRef(props, 'path'), () => {\n            if (props.ignorePathChange)\n                return;\n            restoreValidation();\n        });\n        function restoreValidation() {\n            renderExplainsRef.value = [];\n            validationErroredRef.value = false;\n            if (props.feedback) {\n                feedbackIdRef.value = createId();\n            }\n        }\n        function handleContentBlur() {\n            void internalValidate('blur');\n        }\n        function handleContentChange() {\n            void internalValidate('change');\n        }\n        function handleContentFocus() {\n            void internalValidate('focus');\n        }\n        function handleContentInput() {\n            void internalValidate('input');\n        }\n        function validate(options, callback) {\n            return __awaiter(this, void 0, void 0, function* () {\n                /** the following code is for compatibility */\n                let trigger;\n                let validateCallback;\n                let shouldRuleBeApplied;\n                let asyncValidatorOptions;\n                if (typeof options === 'string') {\n                    trigger = options;\n                    validateCallback = callback;\n                }\n                else if (options !== null && typeof options === 'object') {\n                    trigger = options.trigger;\n                    validateCallback = options.callback;\n                    shouldRuleBeApplied = options.shouldRuleBeApplied;\n                    asyncValidatorOptions = options.options;\n                }\n                yield new Promise((resolve, reject) => {\n                    void internalValidate(trigger, shouldRuleBeApplied, asyncValidatorOptions).then(({ valid, errors }) => {\n                        if (valid) {\n                            if (validateCallback) {\n                                validateCallback();\n                            }\n                            resolve();\n                        }\n                        else {\n                            if (validateCallback) {\n                                validateCallback(errors);\n                            }\n                            reject(errors);\n                        }\n                    });\n                });\n            });\n        }\n        const internalValidate = (trigger = null, shouldRuleBeApplied = () => true, options = {\n            suppressWarning: true\n        }) => __awaiter(this, void 0, void 0, function* () {\n            const { path } = props;\n            if (!options) {\n                options = {};\n            }\n            else {\n                if (!options.first)\n                    options.first = props.first;\n            }\n            const { value: rules } = mergedRulesRef;\n            const value = NForm ? get(NForm.props.model, path || '') : undefined;\n            const messageRenderers = {};\n            const originalMessageRendersMessage = {};\n            const activeRules = (!trigger\n                ? rules\n                : rules.filter((rule) => {\n                    if (Array.isArray(rule.trigger)) {\n                        return rule.trigger.includes(trigger);\n                    }\n                    else {\n                        return rule.trigger === trigger;\n                    }\n                }))\n                .filter(shouldRuleBeApplied)\n                .map((rule, i) => {\n                const shallowClonedRule = Object.assign({}, rule);\n                if (shallowClonedRule.validator) {\n                    shallowClonedRule.validator = wrapValidator(shallowClonedRule.validator, false);\n                }\n                if (shallowClonedRule.asyncValidator) {\n                    shallowClonedRule.asyncValidator = wrapValidator(shallowClonedRule.asyncValidator, true);\n                }\n                if (shallowClonedRule.renderMessage) {\n                    const rendererKey = `__renderMessage__${i}`;\n                    originalMessageRendersMessage[rendererKey] =\n                        shallowClonedRule.message;\n                    shallowClonedRule.message = rendererKey;\n                    messageRenderers[rendererKey] = shallowClonedRule.renderMessage;\n                }\n                return shallowClonedRule;\n            });\n            if (!activeRules.length) {\n                return {\n                    valid: true\n                };\n            }\n            const mergedPath = path !== null && path !== void 0 ? path : '__n_no_path__';\n            const validator = new Schema({ [mergedPath]: activeRules });\n            const { validateMessages } = (NForm === null || NForm === void 0 ? void 0 : NForm.props) || {};\n            if (validateMessages) {\n                validator.messages(validateMessages);\n            }\n            return yield new Promise((resolve) => {\n                void validator.validate({ [mergedPath]: value }, options, (errors) => {\n                    if (errors === null || errors === void 0 ? void 0 : errors.length) {\n                        renderExplainsRef.value = errors.map((error) => {\n                            const transformedMessage = (error === null || error === void 0 ? void 0 : error.message) || '';\n                            return {\n                                key: transformedMessage,\n                                render: () => {\n                                    if (transformedMessage.startsWith('__renderMessage__')) {\n                                        return messageRenderers[transformedMessage]();\n                                    }\n                                    return transformedMessage;\n                                }\n                            };\n                        });\n                        errors.forEach((error) => {\n                            var _a;\n                            if ((_a = error.message) === null || _a === void 0 ? void 0 : _a.startsWith('__renderMessage__')) {\n                                error.message = originalMessageRendersMessage[error.message];\n                            }\n                        });\n                        validationErroredRef.value = true;\n                        resolve({\n                            valid: false,\n                            errors\n                        });\n                    }\n                    else {\n                        restoreValidation();\n                        resolve({\n                            valid: true\n                        });\n                    }\n                });\n            });\n        });\n        provide(formItemInjectionKey, {\n            path: toRef(props, 'path'),\n            disabled: mergedDisabledRef,\n            mergedSize: formItemSizeRefs.mergedSize,\n            mergedValidationStatus: formItemMiscRefs.mergedValidationStatus,\n            restoreValidation,\n            handleContentBlur,\n            handleContentChange,\n            handleContentFocus,\n            handleContentInput\n        });\n        const exposedRef = {\n            validate,\n            restoreValidation,\n            internalValidate\n        };\n        const labelElementRef = ref(null);\n        onMounted(() => {\n            if (!formItemMiscRefs.isAutoLabelWidth.value)\n                return;\n            const labelElement = labelElementRef.value;\n            if (labelElement !== null) {\n                const memoizedWhitespace = labelElement.style.whiteSpace;\n                labelElement.style.whiteSpace = 'nowrap';\n                labelElement.style.width = '';\n                NForm === null || NForm === void 0 ? void 0 : NForm.deriveMaxChildLabelWidth(Number(getComputedStyle(labelElement).width.slice(0, -2)));\n                labelElement.style.whiteSpace = memoizedWhitespace;\n            }\n        });\n        const cssVarsRef = computed(() => {\n            var _a;\n            const { value: size } = mergedSizeRef;\n            const { value: labelPlacement } = labelPlacementRef;\n            const direction = labelPlacement === 'top' ? 'vertical' : 'horizontal';\n            const { common: { cubicBezierEaseInOut }, self: { labelTextColor, asteriskColor, lineHeight, feedbackTextColor, feedbackTextColorWarning, feedbackTextColorError, feedbackPadding, labelFontWeight, [createKey('labelHeight', size)]: labelHeight, [createKey('blankHeight', size)]: blankHeight, [createKey('feedbackFontSize', size)]: feedbackFontSize, [createKey('feedbackHeight', size)]: feedbackHeight, [createKey('labelPadding', direction)]: labelPadding, [createKey('labelTextAlign', direction)]: labelTextAlign, [createKey(createKey('labelFontSize', labelPlacement), size)]: labelFontSize } } = themeRef.value;\n            let mergedLabelTextAlign = (_a = labelTextAlignRef.value) !== null && _a !== void 0 ? _a : labelTextAlign;\n            if (labelPlacement === 'top') {\n                mergedLabelTextAlign =\n                    mergedLabelTextAlign === 'right' ? 'flex-end' : 'flex-start';\n            }\n            const cssVars = {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-line-height': lineHeight,\n                '--n-blank-height': blankHeight,\n                '--n-label-font-size': labelFontSize,\n                '--n-label-text-align': mergedLabelTextAlign,\n                '--n-label-height': labelHeight,\n                '--n-label-padding': labelPadding,\n                '--n-label-font-weight': labelFontWeight,\n                '--n-asterisk-color': asteriskColor,\n                '--n-label-text-color': labelTextColor,\n                '--n-feedback-padding': feedbackPadding,\n                '--n-feedback-font-size': feedbackFontSize,\n                '--n-feedback-height': feedbackHeight,\n                '--n-feedback-text-color': feedbackTextColor,\n                '--n-feedback-text-color-warning': feedbackTextColorWarning,\n                '--n-feedback-text-color-error': feedbackTextColorError\n            };\n            return cssVars;\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('form-item', computed(() => {\n                var _a;\n                return `${mergedSizeRef.value[0]}${labelPlacementRef.value[0]}${((_a = labelTextAlignRef.value) === null || _a === void 0 ? void 0 : _a[0]) || ''}`;\n            }), cssVarsRef, props)\n            : undefined;\n        const reverseColSpaceRef = computed(() => {\n            // label placement left\n            // require-mark-placement | label align | areas (1fr auto)\n            // left                   | left        | mark text (need reverse)\n            // left                   | right       | mark text (okay)\n            // right                  | left        | mark text (okay)\n            // right                  | right       | mark text (okay)\n            // right-hanging          | left        | text mark (okay)\n            // right-hanging          | right       | text mark (okay)\n            return (labelPlacementRef.value === 'left' &&\n                mergedRequireMarkPlacementRef.value === 'left' &&\n                labelTextAlignRef.value === 'left');\n        });\n        return Object.assign(Object.assign(Object.assign(Object.assign({ labelElementRef, mergedClsPrefix: mergedClsPrefixRef, mergedRequired: mergedRequiredRef, feedbackId: feedbackIdRef, renderExplains: renderExplainsRef, reverseColSpace: reverseColSpaceRef }, formItemMiscRefs), formItemSizeRefs), exposedRef), { cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        const { $slots, mergedClsPrefix, mergedShowLabel, mergedShowRequireMark, mergedRequireMarkPlacement, onRender } = this;\n        const renderedShowRequireMark = mergedShowRequireMark !== undefined\n            ? mergedShowRequireMark\n            : this.mergedRequired;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        const renderLabel = () => {\n            const labelText = this.$slots.label ? this.$slots.label() : this.label;\n            if (!labelText)\n                return null;\n            const textNode = (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__text` }, labelText));\n            const markNode = renderedShowRequireMark ? (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__asterisk` }, mergedRequireMarkPlacement !== 'left' ? '\\u00A0*' : '*\\u00A0')) : (mergedRequireMarkPlacement === 'right-hanging' && (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__asterisk-placeholder` }, '\\u00A0*')));\n            const { labelProps } = this;\n            return (h(\"label\", Object.assign({}, labelProps, { class: [\n                    labelProps === null || labelProps === void 0 ? void 0 : labelProps.class,\n                    `${mergedClsPrefix}-form-item-label`,\n                    `${mergedClsPrefix}-form-item-label--${mergedRequireMarkPlacement}-mark`,\n                    this.reverseColSpace &&\n                        `${mergedClsPrefix}-form-item-label--reverse-columns-space`\n                ], style: this.mergedLabelStyle, ref: \"labelElementRef\" }), mergedRequireMarkPlacement === 'left'\n                ? [markNode, textNode]\n                : [textNode, markNode]));\n        };\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-form-item`,\n                this.themeClass,\n                `${mergedClsPrefix}-form-item--${this.mergedSize}-size`,\n                `${mergedClsPrefix}-form-item--${this.mergedLabelPlacement}-labelled`,\n                this.isAutoLabelWidth &&\n                    `${mergedClsPrefix}-form-item--auto-label-width`,\n                !mergedShowLabel && `${mergedClsPrefix}-form-item--no-label`\n            ], style: this.cssVars },\n            mergedShowLabel && renderLabel(),\n            h(\"div\", { class: [\n                    `${mergedClsPrefix}-form-item-blank`,\n                    this.mergedValidationStatus &&\n                        `${mergedClsPrefix}-form-item-blank--${this.mergedValidationStatus}`\n                ] }, $slots),\n            this.mergedShowFeedback ? (h(\"div\", { key: this.feedbackId, class: `${mergedClsPrefix}-form-item-feedback-wrapper` },\n                h(Transition, { name: \"fade-down-transition\", mode: \"out-in\" }, {\n                    default: () => {\n                        const { mergedValidationStatus } = this;\n                        return resolveWrappedSlot($slots.feedback, (children) => {\n                            var _a;\n                            const { feedback } = this;\n                            const feedbackNodes = children || feedback ? (h(\"div\", { key: \"__feedback__\", class: `${mergedClsPrefix}-form-item-feedback__line` }, children || feedback)) : this.renderExplains.length ? ((_a = this.renderExplains) === null || _a === void 0 ? void 0 : _a.map(({ key, render }) => (h(\"div\", { key: key, class: `${mergedClsPrefix}-form-item-feedback__line` }, render())))) : null;\n                            return feedbackNodes ? (mergedValidationStatus === 'warning' ? (h(\"div\", { key: \"controlled-warning\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--warning` }, feedbackNodes)) : mergedValidationStatus === 'error' ? (h(\"div\", { key: \"controlled-error\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--error` }, feedbackNodes)) : mergedValidationStatus === 'success' ? (h(\"div\", { key: \"controlled-success\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--success` }, feedbackNodes)) : (h(\"div\", { key: \"controlled-default\", class: `${mergedClsPrefix}-form-item-feedback` }, feedbackNodes))) : null;\n                        });\n                    }\n                }))) : null));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}