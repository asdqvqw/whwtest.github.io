{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, Transition, defineComponent, ref, computed, watchEffect, provide, inject, withDirectives, vShow, mergeProps, watch, onBeforeUnmount } from 'vue';\nimport { VFocusTrap } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { useConfig, useRtl } from '../../_mixins';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { modalBodyInjectionKey } from '../../modal/src/interface';\nimport { NScrollbar } from '../../_internal';\nimport { useLockHtmlScroll } from '../../_utils';\nimport { drawerBodyInjectionKey, drawerInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'NDrawerContent',\n  inheritAttrs: false,\n  props: {\n    blockScroll: Boolean,\n    show: {\n      type: Boolean,\n      default: undefined\n    },\n    displayDirective: {\n      type: String,\n      required: true\n    },\n    placement: {\n      type: String,\n      required: true\n    },\n    contentStyle: [Object, String],\n    nativeScrollbar: {\n      type: Boolean,\n      required: true\n    },\n    scrollbarProps: Object,\n    trapFocus: {\n      type: Boolean,\n      default: true\n    },\n    autoFocus: {\n      type: Boolean,\n      default: true\n    },\n    showMask: {\n      type: [Boolean, String],\n      required: true\n    },\n    maxWidth: Number,\n    maxHeight: Number,\n    minWidth: Number,\n    minHeight: Number,\n    resizable: Boolean,\n    onClickoutside: Function,\n    onAfterLeave: Function,\n    onAfterEnter: Function,\n    onEsc: Function\n  },\n  setup(props) {\n    const displayedRef = ref(!!props.show);\n    const bodyRef = ref(null); // used for detached content\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const NDrawer = inject(drawerInjectionKey);\n    let startPosition = 0;\n    let memoizedBodyStyleCursor = '';\n    let hoverTimerId = null;\n    const isHoverOnResizeTriggerRef = ref(false);\n    const isDraggingRef = ref(false);\n    const isVertical = computed(() => {\n      return props.placement === 'top' || props.placement === 'bottom';\n    });\n    const {\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const rtlEnabledRef = useRtl('Drawer', mergedRtlRef, mergedClsPrefixRef);\n    const handleMousedownResizeTrigger = e => {\n      isDraggingRef.value = true;\n      startPosition = isVertical.value ? e.clientY : e.clientX;\n      memoizedBodyStyleCursor = document.body.style.cursor;\n      document.body.style.cursor = isVertical.value ? 'ns-resize' : 'ew-resize';\n      document.body.addEventListener('mousemove', handleBodyMousemove);\n      document.body.addEventListener('mouseleave', handleBodyMouseleave);\n      document.body.addEventListener('mouseup', handleBodyMouseup);\n    };\n    const handleMouseenterResizeTrigger = () => {\n      if (hoverTimerId !== null) {\n        window.clearTimeout(hoverTimerId);\n        hoverTimerId = null;\n      }\n      if (isDraggingRef.value) {\n        isHoverOnResizeTriggerRef.value = true;\n      } else {\n        hoverTimerId = window.setTimeout(() => {\n          isHoverOnResizeTriggerRef.value = true;\n        }, 300);\n      }\n    };\n    const handleMouseleaveResizeTrigger = () => {\n      if (hoverTimerId !== null) {\n        window.clearTimeout(hoverTimerId);\n        hoverTimerId = null;\n      }\n      isHoverOnResizeTriggerRef.value = false;\n    };\n    const {\n      doUpdateHeight,\n      doUpdateWidth\n    } = NDrawer;\n    const regulateWidth = size => {\n      const {\n        maxWidth\n      } = props;\n      if (maxWidth && size > maxWidth) return maxWidth;\n      const {\n        minWidth\n      } = props;\n      if (minWidth && size < minWidth) return minWidth;\n      return size;\n    };\n    const regulateHeight = size => {\n      const {\n        maxHeight\n      } = props;\n      if (maxHeight && size > maxHeight) return maxHeight;\n      const {\n        minHeight\n      } = props;\n      if (minHeight && size < minHeight) return minHeight;\n      return size;\n    };\n    const handleBodyMousemove = e => {\n      var _a, _b;\n      if (isDraggingRef.value) {\n        if (isVertical.value) {\n          let height = ((_a = bodyRef.value) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n          const increment = startPosition - e.clientY;\n          height += props.placement === 'bottom' ? increment : -increment;\n          height = regulateHeight(height);\n          doUpdateHeight(height);\n          startPosition = e.clientY;\n        } else {\n          let width = ((_b = bodyRef.value) === null || _b === void 0 ? void 0 : _b.offsetWidth) || 0;\n          const increment = startPosition - e.clientX;\n          width += props.placement === 'right' ? increment : -increment;\n          width = regulateWidth(width);\n          doUpdateWidth(width);\n          startPosition = e.clientX;\n        }\n      }\n    };\n    const handleBodyMouseup = () => {\n      if (isDraggingRef.value) {\n        startPosition = 0;\n        isDraggingRef.value = false;\n        document.body.style.cursor = memoizedBodyStyleCursor;\n        document.body.removeEventListener('mousemove', handleBodyMousemove);\n        document.body.removeEventListener('mouseup', handleBodyMouseup);\n        document.body.removeEventListener('mouseleave', handleBodyMouseleave);\n      }\n    };\n    const handleBodyMouseleave = handleBodyMouseup;\n    watchEffect(() => {\n      if (props.show) displayedRef.value = true;\n    });\n    watch(() => props.show, value => {\n      if (!value) {\n        handleBodyMouseup();\n      }\n    });\n    onBeforeUnmount(() => {\n      handleBodyMouseup();\n    });\n    const bodyDirectivesRef = computed(() => {\n      const {\n        show\n      } = props;\n      const directives = [[vShow, show]];\n      if (!props.showMask) {\n        directives.push([clickoutside, props.onClickoutside, undefined, {\n          capture: true\n        }]);\n      }\n      return directives;\n    });\n    function handleAfterLeave() {\n      var _a;\n      displayedRef.value = false;\n      (_a = props.onAfterLeave) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n    useLockHtmlScroll(computed(() => props.blockScroll && displayedRef.value));\n    provide(drawerBodyInjectionKey, bodyRef);\n    provide(popoverBodyInjectionKey, null);\n    provide(modalBodyInjectionKey, null);\n    return {\n      bodyRef,\n      rtlEnabled: rtlEnabledRef,\n      mergedClsPrefix: NDrawer.mergedClsPrefixRef,\n      isMounted: NDrawer.isMountedRef,\n      mergedTheme: NDrawer.mergedThemeRef,\n      displayed: displayedRef,\n      transitionName: computed(() => {\n        return {\n          right: 'slide-in-from-right-transition',\n          left: 'slide-in-from-left-transition',\n          top: 'slide-in-from-top-transition',\n          bottom: 'slide-in-from-bottom-transition'\n        }[props.placement];\n      }),\n      handleAfterLeave,\n      bodyDirectives: bodyDirectivesRef,\n      handleMousedownResizeTrigger,\n      handleMouseenterResizeTrigger,\n      handleMouseleaveResizeTrigger,\n      isDragging: isDraggingRef,\n      isHoverOnResizeTrigger: isHoverOnResizeTriggerRef\n    };\n  },\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix\n    } = this;\n    return this.displayDirective === 'show' || this.displayed || this.show ? withDirectives(\n    /* Keep the wrapper dom. Make sure the drawer has a host.\n    Nor the detached content will disappear without transition */\n    h(\"div\", {\n      role: \"none\"\n    }, h(VFocusTrap, {\n      disabled: !this.showMask || !this.trapFocus,\n      active: this.show,\n      autoFocus: this.autoFocus,\n      onEsc: this.onEsc\n    }, {\n      default: () => h(Transition, {\n        name: this.transitionName,\n        appear: this.isMounted,\n        onAfterEnter: this.onAfterEnter,\n        onAfterLeave: this.handleAfterLeave\n      }, {\n        default: () => withDirectives(h('div', mergeProps(this.$attrs, {\n          role: 'dialog',\n          ref: 'bodyRef',\n          'aria-modal': 'true',\n          class: [`${mergedClsPrefix}-drawer`, this.rtlEnabled && `${mergedClsPrefix}-drawer--rtl`, `${mergedClsPrefix}-drawer--${this.placement}-placement`,\n          /**\n           * When the mouse is pressed to resize the drawer,\n           * disable text selection\n           */\n          this.isDragging && `${mergedClsPrefix}-drawer--unselectable`, this.nativeScrollbar && `${mergedClsPrefix}-drawer--native-scrollbar`]\n        }), [this.resizable ? h(\"div\", {\n          class: [`${mergedClsPrefix}-drawer__resize-trigger`, (this.isDragging || this.isHoverOnResizeTrigger) && `${mergedClsPrefix}-drawer__resize-trigger--hover`],\n          onMouseenter: this.handleMouseenterResizeTrigger,\n          onMouseleave: this.handleMouseleaveResizeTrigger,\n          onMousedown: this.handleMousedownResizeTrigger\n        }) : null, this.nativeScrollbar ? h(\"div\", {\n          class: `${mergedClsPrefix}-drawer-content-wrapper`,\n          style: this.contentStyle,\n          role: \"none\"\n        }, $slots) : h(NScrollbar, Object.assign({}, this.scrollbarProps, {\n          contentStyle: this.contentStyle,\n          contentClass: `${mergedClsPrefix}-drawer-content-wrapper`,\n          theme: this.mergedTheme.peers.Scrollbar,\n          themeOverrides: this.mergedTheme.peerOverrides.Scrollbar\n        }), $slots)]), this.bodyDirectives)\n      })\n    })), [[vShow, this.displayDirective === 'if' || this.displayed || this.show]]) : null;\n  }\n});","map":{"version":3,"names":["h","Transition","defineComponent","ref","computed","watchEffect","provide","inject","withDirectives","vShow","mergeProps","watch","onBeforeUnmount","VFocusTrap","clickoutside","useConfig","useRtl","popoverBodyInjectionKey","modalBodyInjectionKey","NScrollbar","useLockHtmlScroll","drawerBodyInjectionKey","drawerInjectionKey","name","inheritAttrs","props","blockScroll","Boolean","show","type","default","undefined","displayDirective","String","required","placement","contentStyle","Object","nativeScrollbar","scrollbarProps","trapFocus","autoFocus","showMask","maxWidth","Number","maxHeight","minWidth","minHeight","resizable","onClickoutside","Function","onAfterLeave","onAfterEnter","onEsc","setup","displayedRef","bodyRef","NDrawer","startPosition","memoizedBodyStyleCursor","hoverTimerId","isHoverOnResizeTriggerRef","isDraggingRef","isVertical","mergedClsPrefixRef","mergedRtlRef","rtlEnabledRef","handleMousedownResizeTrigger","e","value","clientY","clientX","document","body","style","cursor","addEventListener","handleBodyMousemove","handleBodyMouseleave","handleBodyMouseup","handleMouseenterResizeTrigger","window","clearTimeout","setTimeout","handleMouseleaveResizeTrigger","doUpdateHeight","doUpdateWidth","regulateWidth","size","regulateHeight","_a","_b","height","offsetHeight","increment","width","offsetWidth","removeEventListener","bodyDirectivesRef","directives","push","capture","handleAfterLeave","call","rtlEnabled","mergedClsPrefix","isMounted","isMountedRef","mergedTheme","mergedThemeRef","displayed","transitionName","right","left","top","bottom","bodyDirectives","isDragging","isHoverOnResizeTrigger","render","$slots","role","disabled","active","appear","$attrs","class","onMouseenter","onMouseleave","onMousedown","assign","contentClass","theme","peers","Scrollbar","themeOverrides","peerOverrides"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/drawer/src/DrawerBodyWrapper.js"],"sourcesContent":["import { h, Transition, defineComponent, ref, computed, watchEffect, provide, inject, withDirectives, vShow, mergeProps, watch, onBeforeUnmount } from 'vue';\nimport { VFocusTrap } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { useConfig, useRtl } from '../../_mixins';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { modalBodyInjectionKey } from '../../modal/src/interface';\nimport { NScrollbar } from '../../_internal';\nimport { useLockHtmlScroll } from '../../_utils';\nimport { drawerBodyInjectionKey, drawerInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'NDrawerContent',\n    inheritAttrs: false,\n    props: {\n        blockScroll: Boolean,\n        show: {\n            type: Boolean,\n            default: undefined\n        },\n        displayDirective: {\n            type: String,\n            required: true\n        },\n        placement: {\n            type: String,\n            required: true\n        },\n        contentStyle: [Object, String],\n        nativeScrollbar: {\n            type: Boolean,\n            required: true\n        },\n        scrollbarProps: Object,\n        trapFocus: {\n            type: Boolean,\n            default: true\n        },\n        autoFocus: {\n            type: Boolean,\n            default: true\n        },\n        showMask: {\n            type: [Boolean, String],\n            required: true\n        },\n        maxWidth: Number,\n        maxHeight: Number,\n        minWidth: Number,\n        minHeight: Number,\n        resizable: Boolean,\n        onClickoutside: Function,\n        onAfterLeave: Function,\n        onAfterEnter: Function,\n        onEsc: Function\n    },\n    setup(props) {\n        const displayedRef = ref(!!props.show);\n        const bodyRef = ref(null); // used for detached content\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NDrawer = inject(drawerInjectionKey);\n        let startPosition = 0;\n        let memoizedBodyStyleCursor = '';\n        let hoverTimerId = null;\n        const isHoverOnResizeTriggerRef = ref(false);\n        const isDraggingRef = ref(false);\n        const isVertical = computed(() => {\n            return props.placement === 'top' || props.placement === 'bottom';\n        });\n        const { mergedClsPrefixRef, mergedRtlRef } = useConfig(props);\n        const rtlEnabledRef = useRtl('Drawer', mergedRtlRef, mergedClsPrefixRef);\n        const handleMousedownResizeTrigger = (e) => {\n            isDraggingRef.value = true;\n            startPosition = isVertical.value ? e.clientY : e.clientX;\n            memoizedBodyStyleCursor = document.body.style.cursor;\n            document.body.style.cursor = isVertical.value ? 'ns-resize' : 'ew-resize';\n            document.body.addEventListener('mousemove', handleBodyMousemove);\n            document.body.addEventListener('mouseleave', handleBodyMouseleave);\n            document.body.addEventListener('mouseup', handleBodyMouseup);\n        };\n        const handleMouseenterResizeTrigger = () => {\n            if (hoverTimerId !== null) {\n                window.clearTimeout(hoverTimerId);\n                hoverTimerId = null;\n            }\n            if (isDraggingRef.value) {\n                isHoverOnResizeTriggerRef.value = true;\n            }\n            else {\n                hoverTimerId = window.setTimeout(() => {\n                    isHoverOnResizeTriggerRef.value = true;\n                }, 300);\n            }\n        };\n        const handleMouseleaveResizeTrigger = () => {\n            if (hoverTimerId !== null) {\n                window.clearTimeout(hoverTimerId);\n                hoverTimerId = null;\n            }\n            isHoverOnResizeTriggerRef.value = false;\n        };\n        const { doUpdateHeight, doUpdateWidth } = NDrawer;\n        const regulateWidth = (size) => {\n            const { maxWidth } = props;\n            if (maxWidth && size > maxWidth)\n                return maxWidth;\n            const { minWidth } = props;\n            if (minWidth && size < minWidth)\n                return minWidth;\n            return size;\n        };\n        const regulateHeight = (size) => {\n            const { maxHeight } = props;\n            if (maxHeight && size > maxHeight)\n                return maxHeight;\n            const { minHeight } = props;\n            if (minHeight && size < minHeight)\n                return minHeight;\n            return size;\n        };\n        const handleBodyMousemove = (e) => {\n            var _a, _b;\n            if (isDraggingRef.value) {\n                if (isVertical.value) {\n                    let height = ((_a = bodyRef.value) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n                    const increment = startPosition - e.clientY;\n                    height += props.placement === 'bottom' ? increment : -increment;\n                    height = regulateHeight(height);\n                    doUpdateHeight(height);\n                    startPosition = e.clientY;\n                }\n                else {\n                    let width = ((_b = bodyRef.value) === null || _b === void 0 ? void 0 : _b.offsetWidth) || 0;\n                    const increment = startPosition - e.clientX;\n                    width += props.placement === 'right' ? increment : -increment;\n                    width = regulateWidth(width);\n                    doUpdateWidth(width);\n                    startPosition = e.clientX;\n                }\n            }\n        };\n        const handleBodyMouseup = () => {\n            if (isDraggingRef.value) {\n                startPosition = 0;\n                isDraggingRef.value = false;\n                document.body.style.cursor = memoizedBodyStyleCursor;\n                document.body.removeEventListener('mousemove', handleBodyMousemove);\n                document.body.removeEventListener('mouseup', handleBodyMouseup);\n                document.body.removeEventListener('mouseleave', handleBodyMouseleave);\n            }\n        };\n        const handleBodyMouseleave = handleBodyMouseup;\n        watchEffect(() => {\n            if (props.show)\n                displayedRef.value = true;\n        });\n        watch(() => props.show, (value) => {\n            if (!value) {\n                handleBodyMouseup();\n            }\n        });\n        onBeforeUnmount(() => {\n            handleBodyMouseup();\n        });\n        const bodyDirectivesRef = computed(() => {\n            const { show } = props;\n            const directives = [[vShow, show]];\n            if (!props.showMask) {\n                directives.push([\n                    clickoutside,\n                    props.onClickoutside,\n                    undefined,\n                    { capture: true }\n                ]);\n            }\n            return directives;\n        });\n        function handleAfterLeave() {\n            var _a;\n            displayedRef.value = false;\n            (_a = props.onAfterLeave) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        useLockHtmlScroll(computed(() => props.blockScroll && displayedRef.value));\n        provide(drawerBodyInjectionKey, bodyRef);\n        provide(popoverBodyInjectionKey, null);\n        provide(modalBodyInjectionKey, null);\n        return {\n            bodyRef,\n            rtlEnabled: rtlEnabledRef,\n            mergedClsPrefix: NDrawer.mergedClsPrefixRef,\n            isMounted: NDrawer.isMountedRef,\n            mergedTheme: NDrawer.mergedThemeRef,\n            displayed: displayedRef,\n            transitionName: computed(() => {\n                return {\n                    right: 'slide-in-from-right-transition',\n                    left: 'slide-in-from-left-transition',\n                    top: 'slide-in-from-top-transition',\n                    bottom: 'slide-in-from-bottom-transition'\n                }[props.placement];\n            }),\n            handleAfterLeave,\n            bodyDirectives: bodyDirectivesRef,\n            handleMousedownResizeTrigger,\n            handleMouseenterResizeTrigger,\n            handleMouseleaveResizeTrigger,\n            isDragging: isDraggingRef,\n            isHoverOnResizeTrigger: isHoverOnResizeTriggerRef\n        };\n    },\n    render() {\n        const { $slots, mergedClsPrefix } = this;\n        return this.displayDirective === 'show' || this.displayed || this.show\n            ? withDirectives(\n            /* Keep the wrapper dom. Make sure the drawer has a host.\n            Nor the detached content will disappear without transition */\n            h(\"div\", { role: \"none\" },\n                h(VFocusTrap, { disabled: !this.showMask || !this.trapFocus, active: this.show, autoFocus: this.autoFocus, onEsc: this.onEsc }, {\n                    default: () => (h(Transition, { name: this.transitionName, appear: this.isMounted, onAfterEnter: this.onAfterEnter, onAfterLeave: this.handleAfterLeave }, {\n                        default: () => withDirectives(h('div', mergeProps(this.$attrs, {\n                            role: 'dialog',\n                            ref: 'bodyRef',\n                            'aria-modal': 'true',\n                            class: [\n                                `${mergedClsPrefix}-drawer`,\n                                this.rtlEnabled &&\n                                    `${mergedClsPrefix}-drawer--rtl`,\n                                `${mergedClsPrefix}-drawer--${this.placement}-placement`,\n                                /**\n                                 * When the mouse is pressed to resize the drawer,\n                                 * disable text selection\n                                 */\n                                this.isDragging &&\n                                    `${mergedClsPrefix}-drawer--unselectable`,\n                                this.nativeScrollbar &&\n                                    `${mergedClsPrefix}-drawer--native-scrollbar`\n                            ]\n                        }), [\n                            this.resizable ? (h(\"div\", { class: [\n                                    `${mergedClsPrefix}-drawer__resize-trigger`,\n                                    (this.isDragging ||\n                                        this.isHoverOnResizeTrigger) &&\n                                        `${mergedClsPrefix}-drawer__resize-trigger--hover`\n                                ], onMouseenter: this.handleMouseenterResizeTrigger, onMouseleave: this.handleMouseleaveResizeTrigger, onMousedown: this.handleMousedownResizeTrigger })) : null,\n                            this.nativeScrollbar ? (h(\"div\", { class: `${mergedClsPrefix}-drawer-content-wrapper`, style: this.contentStyle, role: \"none\" }, $slots)) : (h(NScrollbar, Object.assign({}, this.scrollbarProps, { contentStyle: this.contentStyle, contentClass: `${mergedClsPrefix}-drawer-content-wrapper`, theme: this.mergedTheme.peers.Scrollbar, themeOverrides: this.mergedTheme.peerOverrides.Scrollbar }), $slots))\n                        ]), this.bodyDirectives)\n                    }))\n                })), [\n                [\n                    vShow,\n                    this.displayDirective === 'if' || this.displayed || this.show\n                ]\n            ])\n            : null;\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}