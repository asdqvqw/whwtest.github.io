{"ast":null,"code":"import { onMounted, onUnmounted, ref } from 'vue';\nimport { isBrowser } from '../env/is-browser';\nexport const useBrowserLocation = (customWindow = isBrowser ? window : null) => {\n  const getWindowLocation = () => {\n    const {\n      hash,\n      host,\n      hostname,\n      href,\n      origin,\n      pathname,\n      port,\n      protocol,\n      search\n    } = (customWindow === null || customWindow === void 0 ? void 0 : customWindow.location) || {};\n    return {\n      hash,\n      host,\n      hostname,\n      href,\n      origin,\n      pathname,\n      port,\n      protocol,\n      search\n    };\n  };\n  const updateLocation = () => {\n    locationState.value = getWindowLocation();\n  };\n  const locationState = ref(getWindowLocation());\n  onMounted(() => {\n    if (customWindow) {\n      customWindow.addEventListener('popstate', updateLocation);\n      customWindow.addEventListener('hashchange', updateLocation);\n    }\n  });\n  onUnmounted(() => {\n    if (customWindow) {\n      customWindow.removeEventListener('popstate', updateLocation);\n      customWindow.removeEventListener('hashchange', updateLocation);\n    }\n  });\n  return locationState;\n};","map":{"version":3,"names":["onMounted","onUnmounted","ref","isBrowser","useBrowserLocation","customWindow","window","getWindowLocation","hash","host","hostname","href","origin","pathname","port","protocol","search","location","updateLocation","locationState","value","addEventListener","removeEventListener"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/_utils/composable/use-browser-location.js"],"sourcesContent":["import { onMounted, onUnmounted, ref } from 'vue';\nimport { isBrowser } from '../env/is-browser';\nexport const useBrowserLocation = (customWindow = isBrowser ? window : null) => {\n    const getWindowLocation = () => {\n        const { hash, host, hostname, href, origin, pathname, port, protocol, search } = (customWindow === null || customWindow === void 0 ? void 0 : customWindow.location) || {};\n        return {\n            hash,\n            host,\n            hostname,\n            href,\n            origin,\n            pathname,\n            port,\n            protocol,\n            search\n        };\n    };\n    const updateLocation = () => {\n        locationState.value = getWindowLocation();\n    };\n    const locationState = ref(getWindowLocation());\n    onMounted(() => {\n        if (customWindow) {\n            customWindow.addEventListener('popstate', updateLocation);\n            customWindow.addEventListener('hashchange', updateLocation);\n        }\n    });\n    onUnmounted(() => {\n        if (customWindow) {\n            customWindow.removeEventListener('popstate', updateLocation);\n            customWindow.removeEventListener('hashchange', updateLocation);\n        }\n    });\n    return locationState;\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,WAAW,EAAEC,GAAG,QAAQ,KAAK;AACjD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,YAAY,GAAGF,SAAS,GAAGG,MAAM,GAAG,IAAI,KAAK;EAC5E,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAM;MAAEC,IAAI;MAAEC,IAAI;MAAEC,QAAQ;MAAEC,IAAI;MAAEC,MAAM;MAAEC,QAAQ;MAAEC,IAAI;MAAEC,QAAQ;MAAEC;IAAO,CAAC,GAAG,CAACX,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACY,QAAQ,KAAK,CAAC,CAAC;IAC1K,OAAO;MACHT,IAAI;MACJC,IAAI;MACJC,QAAQ;MACRC,IAAI;MACJC,MAAM;MACNC,QAAQ;MACRC,IAAI;MACJC,QAAQ;MACRC;IACJ,CAAC;EACL,CAAC;EACD,MAAME,cAAc,GAAGA,CAAA,KAAM;IACzBC,aAAa,CAACC,KAAK,GAAGb,iBAAiB,CAAC,CAAC;EAC7C,CAAC;EACD,MAAMY,aAAa,GAAGjB,GAAG,CAACK,iBAAiB,CAAC,CAAC,CAAC;EAC9CP,SAAS,CAAC,MAAM;IACZ,IAAIK,YAAY,EAAE;MACdA,YAAY,CAACgB,gBAAgB,CAAC,UAAU,EAAEH,cAAc,CAAC;MACzDb,YAAY,CAACgB,gBAAgB,CAAC,YAAY,EAAEH,cAAc,CAAC;IAC/D;EACJ,CAAC,CAAC;EACFjB,WAAW,CAAC,MAAM;IACd,IAAII,YAAY,EAAE;MACdA,YAAY,CAACiB,mBAAmB,CAAC,UAAU,EAAEJ,cAAc,CAAC;MAC5Db,YAAY,CAACiB,mBAAmB,CAAC,YAAY,EAAEJ,cAAc,CAAC;IAClE;EACJ,CAAC,CAAC;EACF,OAAOC,aAAa;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}