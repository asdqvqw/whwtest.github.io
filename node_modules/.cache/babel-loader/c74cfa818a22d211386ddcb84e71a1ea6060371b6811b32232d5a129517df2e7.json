{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { h, defineComponent, computed, provide, toRef, ref, Fragment, Teleport, nextTick } from 'vue';\nimport { createId } from 'seemly';\nimport { useMergedState } from 'vooks';\nimport { useConfig, useTheme, useFormItem, useThemeClass } from '../../_mixins';\nimport { warn, call, throwError } from '../../_utils';\nimport { uploadLight } from '../styles';\nimport { uploadDraggerKey } from './UploadDragger';\nimport { uploadInjectionKey } from './interface';\nimport { createImageDataUrl, createSettledFileInfo, environmentSupportFile, isImageFile, matchType } from './utils';\nimport NUploadTrigger from './UploadTrigger';\nimport NUploadFileList from './UploadFileList';\nimport style from './styles/index.cssr';\n/**\n * fils status ['pending', 'uploading', 'finished', 'removed', 'error']\n */\nfunction createXhrHandlers(inst, file, xhr) {\n  const {\n    doChange,\n    xhrMap\n  } = inst;\n  let percentage = 0;\n  function handleXHRError(e) {\n    var _a;\n    let fileAfterChange = Object.assign({}, file, {\n      status: 'error',\n      percentage\n    });\n    xhrMap.delete(file.id);\n    fileAfterChange = createSettledFileInfo(((_a = inst.onError) === null || _a === void 0 ? void 0 : _a.call(inst, {\n      file: fileAfterChange,\n      event: e\n    })) || fileAfterChange);\n    doChange(fileAfterChange, e);\n  }\n  function handleXHRLoad(e) {\n    var _a;\n    if (inst.isErrorState) {\n      if (inst.isErrorState(xhr)) {\n        handleXHRError(e);\n        return;\n      }\n    } else {\n      if (xhr.status < 200 || xhr.status >= 300) {\n        handleXHRError(e);\n        return;\n      }\n    }\n    let fileAfterChange = Object.assign({}, file, {\n      status: 'finished',\n      percentage\n    });\n    xhrMap.delete(file.id);\n    fileAfterChange = createSettledFileInfo(((_a = inst.onFinish) === null || _a === void 0 ? void 0 : _a.call(inst, {\n      file: fileAfterChange,\n      event: e\n    })) || fileAfterChange);\n    doChange(fileAfterChange, e);\n  }\n  return {\n    handleXHRLoad,\n    handleXHRError,\n    handleXHRAbort(e) {\n      const fileAfterChange = Object.assign({}, file, {\n        status: 'removed',\n        file: null,\n        percentage\n      });\n      xhrMap.delete(file.id);\n      doChange(fileAfterChange, e);\n    },\n    handleXHRProgress(e) {\n      const fileAfterChange = Object.assign({}, file, {\n        status: 'uploading'\n      });\n      if (e.lengthComputable) {\n        const progress = Math.ceil(e.loaded / e.total * 100);\n        fileAfterChange.percentage = progress;\n        percentage = progress;\n      }\n      doChange(fileAfterChange, e);\n    }\n  };\n}\nfunction customSubmitImpl(options) {\n  const {\n    inst,\n    file,\n    data,\n    headers,\n    withCredentials,\n    action,\n    customRequest\n  } = options;\n  const {\n    doChange\n  } = options.inst;\n  let percentage = 0;\n  customRequest({\n    file,\n    data,\n    headers,\n    withCredentials,\n    action,\n    onProgress(event) {\n      const fileAfterChange = Object.assign({}, file, {\n        status: 'uploading'\n      });\n      const progress = event.percent;\n      fileAfterChange.percentage = progress;\n      percentage = progress;\n      doChange(fileAfterChange);\n    },\n    onFinish() {\n      var _a;\n      let fileAfterChange = Object.assign({}, file, {\n        status: 'finished',\n        percentage\n      });\n      fileAfterChange = createSettledFileInfo(((_a = inst.onFinish) === null || _a === void 0 ? void 0 : _a.call(inst, {\n        file: fileAfterChange\n      })) || fileAfterChange);\n      doChange(fileAfterChange);\n    },\n    onError() {\n      var _a;\n      let fileAfterChange = Object.assign({}, file, {\n        status: 'error',\n        percentage\n      });\n      fileAfterChange = createSettledFileInfo(((_a = inst.onError) === null || _a === void 0 ? void 0 : _a.call(inst, {\n        file: fileAfterChange\n      })) || fileAfterChange);\n      doChange(fileAfterChange);\n    }\n  });\n}\nfunction registerHandler(inst, file, request) {\n  const handlers = createXhrHandlers(inst, file, request);\n  request.onabort = handlers.handleXHRAbort;\n  request.onerror = handlers.handleXHRError;\n  request.onload = handlers.handleXHRLoad;\n  if (request.upload) {\n    request.upload.onprogress = handlers.handleXHRProgress;\n  }\n}\nfunction unwrapFunctionValue(data, file) {\n  if (typeof data === 'function') {\n    return data({\n      file\n    });\n  }\n  if (data) return data;\n  return {};\n}\nfunction setHeaders(request, headers, file) {\n  const headersObject = unwrapFunctionValue(headers, file);\n  if (!headersObject) return;\n  Object.keys(headersObject).forEach(key => {\n    request.setRequestHeader(key, headersObject[key]);\n  });\n}\nfunction appendData(formData, data, file) {\n  const dataObject = unwrapFunctionValue(data, file);\n  if (!dataObject) return;\n  Object.keys(dataObject).forEach(key => {\n    formData.append(key, dataObject[key]);\n  });\n}\nfunction submitImpl(inst, fieldName, file, {\n  method,\n  action,\n  withCredentials,\n  responseType,\n  headers,\n  data\n}) {\n  const request = new XMLHttpRequest();\n  request.responseType = responseType;\n  inst.xhrMap.set(file.id, request);\n  request.withCredentials = withCredentials;\n  const formData = new FormData();\n  appendData(formData, data, file);\n  if (file.file !== null) {\n    formData.append(fieldName, file.file);\n  }\n  registerHandler(inst, file, request);\n  if (action !== undefined) {\n    request.open(method.toUpperCase(), action);\n    setHeaders(request, headers, file);\n    request.send(formData);\n    const fileAfterChange = Object.assign({}, file, {\n      status: 'uploading'\n    });\n    inst.doChange(fileAfterChange);\n  }\n}\nexport const uploadProps = Object.assign(Object.assign({}, useTheme.props), {\n  name: {\n    type: String,\n    default: 'file'\n  },\n  accept: String,\n  action: String,\n  customRequest: Function,\n  directory: Boolean,\n  directoryDnd: {\n    type: Boolean,\n    default: undefined\n  },\n  method: {\n    type: String,\n    default: 'POST'\n  },\n  multiple: Boolean,\n  showFileList: {\n    type: Boolean,\n    default: true\n  },\n  data: [Object, Function],\n  headers: [Object, Function],\n  withCredentials: Boolean,\n  responseType: {\n    type: String,\n    default: ''\n  },\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  onChange: Function,\n  onRemove: Function,\n  onFinish: Function,\n  onError: Function,\n  onBeforeUpload: Function,\n  isErrorState: Function,\n  /** currently not used */\n  onDownload: Function,\n  defaultUpload: {\n    type: Boolean,\n    default: true\n  },\n  fileList: Array,\n  'onUpdate:fileList': [Function, Array],\n  onUpdateFileList: [Function, Array],\n  fileListClass: String,\n  fileListStyle: [String, Object],\n  defaultFileList: {\n    type: Array,\n    default: () => []\n  },\n  showCancelButton: {\n    type: Boolean,\n    default: true\n  },\n  showRemoveButton: {\n    type: Boolean,\n    default: true\n  },\n  showDownloadButton: Boolean,\n  showRetryButton: {\n    type: Boolean,\n    default: true\n  },\n  showPreviewButton: {\n    type: Boolean,\n    default: true\n  },\n  listType: {\n    type: String,\n    default: 'text'\n  },\n  onPreview: Function,\n  shouldUseThumbnailUrl: {\n    type: Function,\n    default: file => {\n      if (!environmentSupportFile) return false;\n      return isImageFile(file);\n    }\n  },\n  createThumbnailUrl: Function,\n  abstract: Boolean,\n  max: Number,\n  showTrigger: {\n    type: Boolean,\n    default: true\n  },\n  imageGroupProps: Object,\n  inputProps: Object,\n  triggerClass: String,\n  triggerStyle: [String, Object],\n  renderIcon: Function\n});\nexport default defineComponent({\n  name: 'Upload',\n  props: uploadProps,\n  setup(props) {\n    if (props.abstract && props.listType === 'image-card') {\n      throwError('upload', 'when the list-type is image-card, abstract is not supported.');\n    }\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Upload', '-upload', style, uploadLight, props, mergedClsPrefixRef);\n    const formItem = useFormItem(props);\n    const maxReachedRef = computed(() => {\n      const {\n        max\n      } = props;\n      if (max !== undefined) {\n        return mergedFileListRef.value.length >= max;\n      }\n      return false;\n    });\n    const uncontrolledFileListRef = ref(props.defaultFileList);\n    const controlledFileListRef = toRef(props, 'fileList');\n    const inputElRef = ref(null);\n    const draggerInsideRef = {\n      value: false\n    };\n    const dragOverRef = ref(false);\n    const xhrMap = new Map();\n    const _mergedFileListRef = useMergedState(controlledFileListRef, uncontrolledFileListRef);\n    const mergedFileListRef = computed(() => _mergedFileListRef.value.map(createSettledFileInfo));\n    function openOpenFileDialog() {\n      var _a;\n      (_a = inputElRef.value) === null || _a === void 0 ? void 0 : _a.click();\n    }\n    function handleFileInputChange(e) {\n      const target = e.target;\n      handleFileAddition(target.files ? Array.from(target.files).map(file => ({\n        file,\n        entry: null,\n        source: 'input'\n      })) : null, e);\n      // May have bug! set to null?\n      target.value = '';\n    }\n    function doUpdateFileList(files) {\n      const {\n        'onUpdate:fileList': _onUpdateFileList,\n        onUpdateFileList\n      } = props;\n      if (_onUpdateFileList) call(_onUpdateFileList, files);\n      if (onUpdateFileList) call(onUpdateFileList, files);\n      uncontrolledFileListRef.value = files;\n    }\n    const mergedMultipleRef = computed(() => props.multiple || props.directory);\n    function handleFileAddition(fileAndEntries, e) {\n      if (!fileAndEntries || fileAndEntries.length === 0) return;\n      const {\n        onBeforeUpload\n      } = props;\n      fileAndEntries = mergedMultipleRef.value ? fileAndEntries : [fileAndEntries[0]];\n      const {\n        max,\n        accept\n      } = props;\n      fileAndEntries = fileAndEntries.filter(({\n        file,\n        source\n      }) => {\n        if (source === 'dnd' && (accept === null || accept === void 0 ? void 0 : accept.trim())) {\n          return matchType(file.name, file.type, accept);\n        } else {\n          return true;\n        }\n      });\n      if (max) {\n        fileAndEntries = fileAndEntries.slice(0, max - mergedFileListRef.value.length);\n      }\n      const batchId = createId();\n      void Promise.all(fileAndEntries.map(({\n        file,\n        entry\n      }) => __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        const fileInfo = {\n          id: createId(),\n          batchId,\n          name: file.name,\n          status: 'pending',\n          percentage: 0,\n          file,\n          url: null,\n          type: file.type,\n          thumbnailUrl: null,\n          fullPath: (_a = entry === null || entry === void 0 ? void 0 : entry.fullPath) !== null && _a !== void 0 ? _a : `/${file.webkitRelativePath || file.name}`\n        };\n        if (!onBeforeUpload || (yield onBeforeUpload({\n          file: fileInfo,\n          fileList: mergedFileListRef.value\n        })) !== false) {\n          return fileInfo;\n        }\n        return null;\n      }))).then(fileInfos => __awaiter(this, void 0, void 0, function* () {\n        let nextTickChain = Promise.resolve();\n        fileInfos.forEach(fileInfo => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          nextTickChain = nextTickChain.then(nextTick).then(() => {\n            fileInfo && doChange(fileInfo, e, {\n              append: true\n            });\n          });\n        });\n        yield nextTickChain;\n      })).then(() => {\n        if (props.defaultUpload) {\n          submit();\n        }\n      });\n    }\n    function submit(fileId) {\n      const {\n        method,\n        action,\n        withCredentials,\n        headers,\n        data,\n        name: fieldName\n      } = props;\n      const filesToUpload = fileId !== undefined ? mergedFileListRef.value.filter(file => file.id === fileId) : mergedFileListRef.value;\n      const shouldReupload = fileId !== undefined;\n      filesToUpload.forEach(file => {\n        const {\n          status\n        } = file;\n        if (status === 'pending' || status === 'error' && shouldReupload) {\n          if (props.customRequest) {\n            customSubmitImpl({\n              inst: {\n                doChange,\n                xhrMap,\n                onFinish: props.onFinish,\n                onError: props.onError\n              },\n              file,\n              action,\n              withCredentials,\n              headers,\n              data,\n              customRequest: props.customRequest\n            });\n          } else {\n            submitImpl({\n              doChange,\n              xhrMap,\n              onFinish: props.onFinish,\n              onError: props.onError,\n              isErrorState: props.isErrorState\n            }, fieldName, file, {\n              method,\n              action,\n              withCredentials,\n              responseType: props.responseType,\n              headers,\n              data\n            });\n          }\n        }\n      });\n    }\n    const doChange = (fileAfterChange, event, options = {\n      append: false,\n      remove: false\n    }) => {\n      const {\n        append,\n        remove\n      } = options;\n      const fileListAfterChange = Array.from(mergedFileListRef.value);\n      const fileIndex = fileListAfterChange.findIndex(file => file.id === fileAfterChange.id);\n      if (append || remove || ~fileIndex) {\n        if (append) {\n          fileListAfterChange.push(fileAfterChange);\n        } else if (remove) {\n          fileListAfterChange.splice(fileIndex, 1);\n        } else {\n          fileListAfterChange.splice(fileIndex, 1, fileAfterChange);\n        }\n        const {\n          onChange\n        } = props;\n        if (onChange) {\n          onChange({\n            file: fileAfterChange,\n            fileList: fileListAfterChange,\n            event\n          });\n        }\n        doUpdateFileList(fileListAfterChange);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('upload', 'File has no corresponding id in current file list.');\n      }\n    };\n    function getFileThumbnailUrlResolver(file) {\n      var _a;\n      if (file.thumbnailUrl) return file.thumbnailUrl;\n      const {\n        createThumbnailUrl\n      } = props;\n      if (createThumbnailUrl) {\n        return (_a = createThumbnailUrl(file.file, file)) !== null && _a !== void 0 ? _a : file.url || '';\n      }\n      if (file.url) {\n        return file.url;\n      } else if (file.file) {\n        return createImageDataUrl(file.file);\n      }\n      return '';\n    }\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          draggerColor,\n          draggerBorder,\n          draggerBorderHover,\n          itemColorHover,\n          itemColorHoverError,\n          itemTextColorError,\n          itemTextColorSuccess,\n          itemTextColor,\n          itemIconColor,\n          itemDisabledOpacity,\n          lineHeight,\n          borderRadius,\n          fontSize,\n          itemBorderImageCardError,\n          itemBorderImageCard\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-dragger-border': draggerBorder,\n        '--n-dragger-border-hover': draggerBorderHover,\n        '--n-dragger-color': draggerColor,\n        '--n-font-size': fontSize,\n        '--n-item-color-hover': itemColorHover,\n        '--n-item-color-hover-error': itemColorHoverError,\n        '--n-item-disabled-opacity': itemDisabledOpacity,\n        '--n-item-icon-color': itemIconColor,\n        '--n-item-text-color': itemTextColor,\n        '--n-item-text-color-error': itemTextColorError,\n        '--n-item-text-color-success': itemTextColorSuccess,\n        '--n-line-height': lineHeight,\n        '--n-item-border-image-card-error': itemBorderImageCardError,\n        '--n-item-border-image-card': itemBorderImageCard\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('upload', undefined, cssVarsRef, props) : undefined;\n    provide(uploadInjectionKey, {\n      mergedClsPrefixRef,\n      mergedThemeRef: themeRef,\n      showCancelButtonRef: toRef(props, 'showCancelButton'),\n      showDownloadButtonRef: toRef(props, 'showDownloadButton'),\n      showRemoveButtonRef: toRef(props, 'showRemoveButton'),\n      showRetryButtonRef: toRef(props, 'showRetryButton'),\n      onRemoveRef: toRef(props, 'onRemove'),\n      onDownloadRef: toRef(props, 'onDownload'),\n      mergedFileListRef,\n      triggerClassRef: toRef(props, 'triggerClass'),\n      triggerStyleRef: toRef(props, 'triggerStyle'),\n      shouldUseThumbnailUrlRef: toRef(props, 'shouldUseThumbnailUrl'),\n      renderIconRef: toRef(props, 'renderIcon'),\n      xhrMap,\n      submit,\n      doChange,\n      showPreviewButtonRef: toRef(props, 'showPreviewButton'),\n      onPreviewRef: toRef(props, 'onPreview'),\n      getFileThumbnailUrlResolver,\n      listTypeRef: toRef(props, 'listType'),\n      dragOverRef,\n      openOpenFileDialog,\n      draggerInsideRef,\n      handleFileAddition,\n      mergedDisabledRef: formItem.mergedDisabledRef,\n      maxReachedRef,\n      fileListClassRef: toRef(props, 'fileListClass'),\n      fileListStyleRef: toRef(props, 'fileListStyle'),\n      abstractRef: toRef(props, 'abstract'),\n      acceptRef: toRef(props, 'accept'),\n      cssVarsRef: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClassRef: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n      showTriggerRef: toRef(props, 'showTrigger'),\n      imageGroupPropsRef: toRef(props, 'imageGroupProps'),\n      mergedDirectoryDndRef: computed(() => {\n        var _a;\n        return (_a = props.directoryDnd) !== null && _a !== void 0 ? _a : props.directory;\n      })\n    });\n    const exposedMethods = {\n      clear: () => {\n        uncontrolledFileListRef.value = [];\n      },\n      submit,\n      openOpenFileDialog\n    };\n    return Object.assign({\n      mergedClsPrefix: mergedClsPrefixRef,\n      draggerInsideRef,\n      inputElRef,\n      mergedTheme: themeRef,\n      dragOver: dragOverRef,\n      mergedMultiple: mergedMultipleRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n      handleFileInputChange\n    }, exposedMethods);\n  },\n  render() {\n    var _a, _b;\n    const {\n      draggerInsideRef,\n      mergedClsPrefix,\n      $slots,\n      directory,\n      onRender\n    } = this;\n    if ($slots.default && !this.abstract) {\n      const firstChild = $slots.default()[0];\n      if ((_a = firstChild === null || firstChild === void 0 ? void 0 : firstChild.type) === null || _a === void 0 ? void 0 : _a[uploadDraggerKey]) {\n        draggerInsideRef.value = true;\n      }\n    }\n    const inputNode = h(\"input\", Object.assign({}, this.inputProps, {\n      ref: \"inputElRef\",\n      type: \"file\",\n      class: `${mergedClsPrefix}-upload-file-input`,\n      accept: this.accept,\n      multiple: this.mergedMultiple,\n      onChange: this.handleFileInputChange,\n      // @ts-expect-error // seems vue-tsc will add the prop, so we can't use expect-error\n      webkitdirectory: directory || undefined,\n      directory: directory || undefined\n    }));\n    if (this.abstract) {\n      return h(Fragment, null, (_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots), h(Teleport, {\n        to: \"body\"\n      }, inputNode));\n    }\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-upload`, draggerInsideRef.value && `${mergedClsPrefix}-upload--dragger-inside`, this.dragOver && `${mergedClsPrefix}-upload--drag-over`, this.themeClass],\n      style: this.cssVars\n    }, inputNode, this.showTrigger && this.listType !== 'image-card' && h(NUploadTrigger, null, $slots), this.showFileList && h(NUploadFileList, null, $slots));\n  }\n});","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","h","defineComponent","computed","provide","toRef","ref","Fragment","Teleport","nextTick","createId","useMergedState","useConfig","useTheme","useFormItem","useThemeClass","warn","call","throwError","uploadLight","uploadDraggerKey","uploadInjectionKey","createImageDataUrl","createSettledFileInfo","environmentSupportFile","isImageFile","matchType","NUploadTrigger","NUploadFileList","style","createXhrHandlers","inst","file","xhr","doChange","xhrMap","percentage","handleXHRError","_a","fileAfterChange","Object","assign","status","delete","id","onError","event","handleXHRLoad","isErrorState","onFinish","handleXHRAbort","handleXHRProgress","lengthComputable","progress","Math","ceil","loaded","total","customSubmitImpl","options","data","headers","withCredentials","action","customRequest","onProgress","percent","registerHandler","request","handlers","onabort","onerror","onload","upload","onprogress","unwrapFunctionValue","setHeaders","headersObject","keys","forEach","key","setRequestHeader","appendData","formData","dataObject","append","submitImpl","fieldName","method","responseType","XMLHttpRequest","set","FormData","undefined","open","toUpperCase","send","uploadProps","props","name","type","String","default","accept","Function","directory","Boolean","directoryDnd","multiple","showFileList","disabled","onChange","onRemove","onBeforeUpload","onDownload","defaultUpload","fileList","Array","onUpdateFileList","fileListClass","fileListStyle","defaultFileList","showCancelButton","showRemoveButton","showDownloadButton","showRetryButton","showPreviewButton","listType","onPreview","shouldUseThumbnailUrl","createThumbnailUrl","abstract","max","Number","showTrigger","imageGroupProps","inputProps","triggerClass","triggerStyle","renderIcon","setup","mergedClsPrefixRef","inlineThemeDisabled","themeRef","formItem","maxReachedRef","mergedFileListRef","length","uncontrolledFileListRef","controlledFileListRef","inputElRef","draggerInsideRef","dragOverRef","Map","_mergedFileListRef","map","openOpenFileDialog","click","handleFileInputChange","target","handleFileAddition","files","from","entry","source","doUpdateFileList","_onUpdateFileList","mergedMultipleRef","fileAndEntries","filter","trim","slice","batchId","all","fileInfo","url","thumbnailUrl","fullPath","webkitRelativePath","fileInfos","nextTickChain","submit","fileId","filesToUpload","shouldReupload","remove","fileListAfterChange","fileIndex","findIndex","push","splice","process","env","NODE_ENV","getFileThumbnailUrlResolver","cssVarsRef","common","cubicBezierEaseInOut","self","draggerColor","draggerBorder","draggerBorderHover","itemColorHover","itemColorHoverError","itemTextColorError","itemTextColorSuccess","itemTextColor","itemIconColor","itemDisabledOpacity","lineHeight","borderRadius","fontSize","itemBorderImageCardError","itemBorderImageCard","themeClassHandle","mergedThemeRef","showCancelButtonRef","showDownloadButtonRef","showRemoveButtonRef","showRetryButtonRef","onRemoveRef","onDownloadRef","triggerClassRef","triggerStyleRef","shouldUseThumbnailUrlRef","renderIconRef","showPreviewButtonRef","onPreviewRef","listTypeRef","mergedDisabledRef","fileListClassRef","fileListStyleRef","abstractRef","acceptRef","themeClassRef","themeClass","onRender","showTriggerRef","imageGroupPropsRef","mergedDirectoryDndRef","exposedMethods","clear","mergedClsPrefix","mergedTheme","dragOver","mergedMultiple","cssVars","render","_b","$slots","firstChild","inputNode","class","webkitdirectory","to"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/upload/src/Upload.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { h, defineComponent, computed, provide, toRef, ref, Fragment, Teleport, nextTick } from 'vue';\nimport { createId } from 'seemly';\nimport { useMergedState } from 'vooks';\nimport { useConfig, useTheme, useFormItem, useThemeClass } from '../../_mixins';\nimport { warn, call, throwError } from '../../_utils';\nimport { uploadLight } from '../styles';\nimport { uploadDraggerKey } from './UploadDragger';\nimport { uploadInjectionKey } from './interface';\nimport { createImageDataUrl, createSettledFileInfo, environmentSupportFile, isImageFile, matchType } from './utils';\nimport NUploadTrigger from './UploadTrigger';\nimport NUploadFileList from './UploadFileList';\nimport style from './styles/index.cssr';\n/**\n * fils status ['pending', 'uploading', 'finished', 'removed', 'error']\n */\nfunction createXhrHandlers(inst, file, xhr) {\n    const { doChange, xhrMap } = inst;\n    let percentage = 0;\n    function handleXHRError(e) {\n        var _a;\n        let fileAfterChange = Object.assign({}, file, {\n            status: 'error',\n            percentage\n        });\n        xhrMap.delete(file.id);\n        fileAfterChange = createSettledFileInfo(((_a = inst.onError) === null || _a === void 0 ? void 0 : _a.call(inst, { file: fileAfterChange, event: e })) || fileAfterChange);\n        doChange(fileAfterChange, e);\n    }\n    function handleXHRLoad(e) {\n        var _a;\n        if (inst.isErrorState) {\n            if (inst.isErrorState(xhr)) {\n                handleXHRError(e);\n                return;\n            }\n        }\n        else {\n            if (xhr.status < 200 || xhr.status >= 300) {\n                handleXHRError(e);\n                return;\n            }\n        }\n        let fileAfterChange = Object.assign({}, file, {\n            status: 'finished',\n            percentage\n        });\n        xhrMap.delete(file.id);\n        fileAfterChange = createSettledFileInfo(((_a = inst.onFinish) === null || _a === void 0 ? void 0 : _a.call(inst, { file: fileAfterChange, event: e })) || fileAfterChange);\n        doChange(fileAfterChange, e);\n    }\n    return {\n        handleXHRLoad,\n        handleXHRError,\n        handleXHRAbort(e) {\n            const fileAfterChange = Object.assign({}, file, {\n                status: 'removed',\n                file: null,\n                percentage\n            });\n            xhrMap.delete(file.id);\n            doChange(fileAfterChange, e);\n        },\n        handleXHRProgress(e) {\n            const fileAfterChange = Object.assign({}, file, {\n                status: 'uploading'\n            });\n            if (e.lengthComputable) {\n                const progress = Math.ceil((e.loaded / e.total) * 100);\n                fileAfterChange.percentage = progress;\n                percentage = progress;\n            }\n            doChange(fileAfterChange, e);\n        }\n    };\n}\nfunction customSubmitImpl(options) {\n    const { inst, file, data, headers, withCredentials, action, customRequest } = options;\n    const { doChange } = options.inst;\n    let percentage = 0;\n    customRequest({\n        file,\n        data,\n        headers,\n        withCredentials,\n        action,\n        onProgress(event) {\n            const fileAfterChange = Object.assign({}, file, {\n                status: 'uploading'\n            });\n            const progress = event.percent;\n            fileAfterChange.percentage = progress;\n            percentage = progress;\n            doChange(fileAfterChange);\n        },\n        onFinish() {\n            var _a;\n            let fileAfterChange = Object.assign({}, file, {\n                status: 'finished',\n                percentage\n            });\n            fileAfterChange = createSettledFileInfo(((_a = inst.onFinish) === null || _a === void 0 ? void 0 : _a.call(inst, { file: fileAfterChange })) || fileAfterChange);\n            doChange(fileAfterChange);\n        },\n        onError() {\n            var _a;\n            let fileAfterChange = Object.assign({}, file, {\n                status: 'error',\n                percentage\n            });\n            fileAfterChange = createSettledFileInfo(((_a = inst.onError) === null || _a === void 0 ? void 0 : _a.call(inst, { file: fileAfterChange })) || fileAfterChange);\n            doChange(fileAfterChange);\n        }\n    });\n}\nfunction registerHandler(inst, file, request) {\n    const handlers = createXhrHandlers(inst, file, request);\n    request.onabort = handlers.handleXHRAbort;\n    request.onerror = handlers.handleXHRError;\n    request.onload = handlers.handleXHRLoad;\n    if (request.upload) {\n        request.upload.onprogress = handlers.handleXHRProgress;\n    }\n}\nfunction unwrapFunctionValue(data, file) {\n    if (typeof data === 'function') {\n        return data({ file });\n    }\n    if (data)\n        return data;\n    return {};\n}\nfunction setHeaders(request, headers, file) {\n    const headersObject = unwrapFunctionValue(headers, file);\n    if (!headersObject)\n        return;\n    Object.keys(headersObject).forEach((key) => {\n        request.setRequestHeader(key, headersObject[key]);\n    });\n}\nfunction appendData(formData, data, file) {\n    const dataObject = unwrapFunctionValue(data, file);\n    if (!dataObject)\n        return;\n    Object.keys(dataObject).forEach((key) => {\n        formData.append(key, dataObject[key]);\n    });\n}\nfunction submitImpl(inst, fieldName, file, { method, action, withCredentials, responseType, headers, data }) {\n    const request = new XMLHttpRequest();\n    request.responseType = responseType;\n    inst.xhrMap.set(file.id, request);\n    request.withCredentials = withCredentials;\n    const formData = new FormData();\n    appendData(formData, data, file);\n    if (file.file !== null) {\n        formData.append(fieldName, file.file);\n    }\n    registerHandler(inst, file, request);\n    if (action !== undefined) {\n        request.open(method.toUpperCase(), action);\n        setHeaders(request, headers, file);\n        request.send(formData);\n        const fileAfterChange = Object.assign({}, file, {\n            status: 'uploading'\n        });\n        inst.doChange(fileAfterChange);\n    }\n}\nexport const uploadProps = Object.assign(Object.assign({}, useTheme.props), { name: {\n        type: String,\n        default: 'file'\n    }, accept: String, action: String, customRequest: Function, directory: Boolean, directoryDnd: { type: Boolean, default: undefined }, method: {\n        type: String,\n        default: 'POST'\n    }, multiple: Boolean, showFileList: {\n        type: Boolean,\n        default: true\n    }, data: [Object, Function], headers: [Object, Function], withCredentials: Boolean, responseType: {\n        type: String,\n        default: ''\n    }, disabled: {\n        type: Boolean,\n        default: undefined\n    }, onChange: Function, onRemove: Function, onFinish: Function, onError: Function, onBeforeUpload: Function, isErrorState: Function, \n    /** currently not used */\n    onDownload: Function, defaultUpload: {\n        type: Boolean,\n        default: true\n    }, fileList: Array, 'onUpdate:fileList': [Function, Array], onUpdateFileList: [Function, Array], fileListClass: String, fileListStyle: [String, Object], defaultFileList: {\n        type: Array,\n        default: () => []\n    }, showCancelButton: {\n        type: Boolean,\n        default: true\n    }, showRemoveButton: {\n        type: Boolean,\n        default: true\n    }, showDownloadButton: Boolean, showRetryButton: {\n        type: Boolean,\n        default: true\n    }, showPreviewButton: {\n        type: Boolean,\n        default: true\n    }, listType: {\n        type: String,\n        default: 'text'\n    }, onPreview: Function, shouldUseThumbnailUrl: {\n        type: Function,\n        default: (file) => {\n            if (!environmentSupportFile)\n                return false;\n            return isImageFile(file);\n        }\n    }, createThumbnailUrl: Function, abstract: Boolean, max: Number, showTrigger: {\n        type: Boolean,\n        default: true\n    }, imageGroupProps: Object, inputProps: Object, triggerClass: String, triggerStyle: [String, Object], renderIcon: Function });\nexport default defineComponent({\n    name: 'Upload',\n    props: uploadProps,\n    setup(props) {\n        if (props.abstract && props.listType === 'image-card') {\n            throwError('upload', 'when the list-type is image-card, abstract is not supported.');\n        }\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Upload', '-upload', style, uploadLight, props, mergedClsPrefixRef);\n        const formItem = useFormItem(props);\n        const maxReachedRef = computed(() => {\n            const { max } = props;\n            if (max !== undefined) {\n                return mergedFileListRef.value.length >= max;\n            }\n            return false;\n        });\n        const uncontrolledFileListRef = ref(props.defaultFileList);\n        const controlledFileListRef = toRef(props, 'fileList');\n        const inputElRef = ref(null);\n        const draggerInsideRef = {\n            value: false\n        };\n        const dragOverRef = ref(false);\n        const xhrMap = new Map();\n        const _mergedFileListRef = useMergedState(controlledFileListRef, uncontrolledFileListRef);\n        const mergedFileListRef = computed(() => _mergedFileListRef.value.map(createSettledFileInfo));\n        function openOpenFileDialog() {\n            var _a;\n            (_a = inputElRef.value) === null || _a === void 0 ? void 0 : _a.click();\n        }\n        function handleFileInputChange(e) {\n            const target = e.target;\n            handleFileAddition(target.files\n                ? Array.from(target.files).map((file) => ({\n                    file,\n                    entry: null,\n                    source: 'input'\n                }))\n                : null, e);\n            // May have bug! set to null?\n            target.value = '';\n        }\n        function doUpdateFileList(files) {\n            const { 'onUpdate:fileList': _onUpdateFileList, onUpdateFileList } = props;\n            if (_onUpdateFileList)\n                call(_onUpdateFileList, files);\n            if (onUpdateFileList)\n                call(onUpdateFileList, files);\n            uncontrolledFileListRef.value = files;\n        }\n        const mergedMultipleRef = computed(() => props.multiple || props.directory);\n        function handleFileAddition(fileAndEntries, e) {\n            if (!fileAndEntries || fileAndEntries.length === 0)\n                return;\n            const { onBeforeUpload } = props;\n            fileAndEntries = mergedMultipleRef.value\n                ? fileAndEntries\n                : [fileAndEntries[0]];\n            const { max, accept } = props;\n            fileAndEntries = fileAndEntries.filter(({ file, source }) => {\n                if (source === 'dnd' && (accept === null || accept === void 0 ? void 0 : accept.trim())) {\n                    return matchType(file.name, file.type, accept);\n                }\n                else {\n                    return true;\n                }\n            });\n            if (max) {\n                fileAndEntries = fileAndEntries.slice(0, max - mergedFileListRef.value.length);\n            }\n            const batchId = createId();\n            void Promise.all(fileAndEntries.map(({ file, entry }) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const fileInfo = {\n                    id: createId(),\n                    batchId,\n                    name: file.name,\n                    status: 'pending',\n                    percentage: 0,\n                    file,\n                    url: null,\n                    type: file.type,\n                    thumbnailUrl: null,\n                    fullPath: (_a = entry === null || entry === void 0 ? void 0 : entry.fullPath) !== null && _a !== void 0 ? _a : `/${file.webkitRelativePath || file.name}`\n                };\n                if (!onBeforeUpload ||\n                    (yield onBeforeUpload({\n                        file: fileInfo,\n                        fileList: mergedFileListRef.value\n                    })) !== false) {\n                    return fileInfo;\n                }\n                return null;\n            })))\n                .then((fileInfos) => __awaiter(this, void 0, void 0, function* () {\n                let nextTickChain = Promise.resolve();\n                fileInfos.forEach((fileInfo) => {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                    nextTickChain = nextTickChain.then(nextTick).then(() => {\n                        fileInfo &&\n                            doChange(fileInfo, e, {\n                                append: true\n                            });\n                    });\n                });\n                yield nextTickChain;\n            }))\n                .then(() => {\n                if (props.defaultUpload) {\n                    submit();\n                }\n            });\n        }\n        function submit(fileId) {\n            const { method, action, withCredentials, headers, data, name: fieldName } = props;\n            const filesToUpload = fileId !== undefined\n                ? mergedFileListRef.value.filter((file) => file.id === fileId)\n                : mergedFileListRef.value;\n            const shouldReupload = fileId !== undefined;\n            filesToUpload.forEach((file) => {\n                const { status } = file;\n                if (status === 'pending' || (status === 'error' && shouldReupload)) {\n                    if (props.customRequest) {\n                        customSubmitImpl({\n                            inst: {\n                                doChange,\n                                xhrMap,\n                                onFinish: props.onFinish,\n                                onError: props.onError\n                            },\n                            file,\n                            action,\n                            withCredentials,\n                            headers,\n                            data,\n                            customRequest: props.customRequest\n                        });\n                    }\n                    else {\n                        submitImpl({\n                            doChange,\n                            xhrMap,\n                            onFinish: props.onFinish,\n                            onError: props.onError,\n                            isErrorState: props.isErrorState\n                        }, fieldName, file, {\n                            method,\n                            action,\n                            withCredentials,\n                            responseType: props.responseType,\n                            headers,\n                            data\n                        });\n                    }\n                }\n            });\n        }\n        const doChange = (fileAfterChange, event, options = {\n            append: false,\n            remove: false\n        }) => {\n            const { append, remove } = options;\n            const fileListAfterChange = Array.from(mergedFileListRef.value);\n            const fileIndex = fileListAfterChange.findIndex((file) => file.id === fileAfterChange.id);\n            if (append || remove || ~fileIndex) {\n                if (append) {\n                    fileListAfterChange.push(fileAfterChange);\n                }\n                else if (remove) {\n                    fileListAfterChange.splice(fileIndex, 1);\n                }\n                else {\n                    fileListAfterChange.splice(fileIndex, 1, fileAfterChange);\n                }\n                const { onChange } = props;\n                if (onChange) {\n                    onChange({\n                        file: fileAfterChange,\n                        fileList: fileListAfterChange,\n                        event\n                    });\n                }\n                doUpdateFileList(fileListAfterChange);\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                warn('upload', 'File has no corresponding id in current file list.');\n            }\n        };\n        function getFileThumbnailUrlResolver(file) {\n            var _a;\n            if (file.thumbnailUrl)\n                return file.thumbnailUrl;\n            const { createThumbnailUrl } = props;\n            if (createThumbnailUrl) {\n                return (_a = createThumbnailUrl(file.file, file)) !== null && _a !== void 0 ? _a : (file.url || '');\n            }\n            if (file.url) {\n                return file.url;\n            }\n            else if (file.file) {\n                return createImageDataUrl(file.file);\n            }\n            return '';\n        }\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self: { draggerColor, draggerBorder, draggerBorderHover, itemColorHover, itemColorHoverError, itemTextColorError, itemTextColorSuccess, itemTextColor, itemIconColor, itemDisabledOpacity, lineHeight, borderRadius, fontSize, itemBorderImageCardError, itemBorderImageCard } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-dragger-border': draggerBorder,\n                '--n-dragger-border-hover': draggerBorderHover,\n                '--n-dragger-color': draggerColor,\n                '--n-font-size': fontSize,\n                '--n-item-color-hover': itemColorHover,\n                '--n-item-color-hover-error': itemColorHoverError,\n                '--n-item-disabled-opacity': itemDisabledOpacity,\n                '--n-item-icon-color': itemIconColor,\n                '--n-item-text-color': itemTextColor,\n                '--n-item-text-color-error': itemTextColorError,\n                '--n-item-text-color-success': itemTextColorSuccess,\n                '--n-line-height': lineHeight,\n                '--n-item-border-image-card-error': itemBorderImageCardError,\n                '--n-item-border-image-card': itemBorderImageCard\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('upload', undefined, cssVarsRef, props)\n            : undefined;\n        provide(uploadInjectionKey, {\n            mergedClsPrefixRef,\n            mergedThemeRef: themeRef,\n            showCancelButtonRef: toRef(props, 'showCancelButton'),\n            showDownloadButtonRef: toRef(props, 'showDownloadButton'),\n            showRemoveButtonRef: toRef(props, 'showRemoveButton'),\n            showRetryButtonRef: toRef(props, 'showRetryButton'),\n            onRemoveRef: toRef(props, 'onRemove'),\n            onDownloadRef: toRef(props, 'onDownload'),\n            mergedFileListRef,\n            triggerClassRef: toRef(props, 'triggerClass'),\n            triggerStyleRef: toRef(props, 'triggerStyle'),\n            shouldUseThumbnailUrlRef: toRef(props, 'shouldUseThumbnailUrl'),\n            renderIconRef: toRef(props, 'renderIcon'),\n            xhrMap,\n            submit,\n            doChange,\n            showPreviewButtonRef: toRef(props, 'showPreviewButton'),\n            onPreviewRef: toRef(props, 'onPreview'),\n            getFileThumbnailUrlResolver,\n            listTypeRef: toRef(props, 'listType'),\n            dragOverRef,\n            openOpenFileDialog,\n            draggerInsideRef,\n            handleFileAddition,\n            mergedDisabledRef: formItem.mergedDisabledRef,\n            maxReachedRef,\n            fileListClassRef: toRef(props, 'fileListClass'),\n            fileListStyleRef: toRef(props, 'fileListStyle'),\n            abstractRef: toRef(props, 'abstract'),\n            acceptRef: toRef(props, 'accept'),\n            cssVarsRef: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClassRef: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n            showTriggerRef: toRef(props, 'showTrigger'),\n            imageGroupPropsRef: toRef(props, 'imageGroupProps'),\n            mergedDirectoryDndRef: computed(() => {\n                var _a;\n                return (_a = props.directoryDnd) !== null && _a !== void 0 ? _a : props.directory;\n            })\n        });\n        const exposedMethods = {\n            clear: () => {\n                uncontrolledFileListRef.value = [];\n            },\n            submit,\n            openOpenFileDialog\n        };\n        return Object.assign({ mergedClsPrefix: mergedClsPrefixRef, draggerInsideRef,\n            inputElRef, mergedTheme: themeRef, dragOver: dragOverRef, mergedMultiple: mergedMultipleRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender, handleFileInputChange }, exposedMethods);\n    },\n    render() {\n        var _a, _b;\n        const { draggerInsideRef, mergedClsPrefix, $slots, directory, onRender } = this;\n        if ($slots.default && !this.abstract) {\n            const firstChild = $slots.default()[0];\n            if ((_a = firstChild === null || firstChild === void 0 ? void 0 : firstChild.type) === null || _a === void 0 ? void 0 : _a[uploadDraggerKey]) {\n                draggerInsideRef.value = true;\n            }\n        }\n        const inputNode = (h(\"input\", Object.assign({}, this.inputProps, { ref: \"inputElRef\", type: \"file\", class: `${mergedClsPrefix}-upload-file-input`, accept: this.accept, multiple: this.mergedMultiple, onChange: this.handleFileInputChange, \n            // @ts-expect-error // seems vue-tsc will add the prop, so we can't use expect-error\n            webkitdirectory: directory || undefined, directory: directory || undefined })));\n        if (this.abstract) {\n            return (h(Fragment, null, (_b = $slots.default) === null || _b === void 0 ? void 0 :\n                _b.call($slots),\n                h(Teleport, { to: \"body\" }, inputNode)));\n        }\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-upload`,\n                draggerInsideRef.value && `${mergedClsPrefix}-upload--dragger-inside`,\n                this.dragOver && `${mergedClsPrefix}-upload--drag-over`,\n                this.themeClass\n            ], style: this.cssVars },\n            inputNode,\n            this.showTrigger && this.listType !== 'image-card' && (h(NUploadTrigger, null, $slots)),\n            this.showFileList && h(NUploadFileList, null, $slots)));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}