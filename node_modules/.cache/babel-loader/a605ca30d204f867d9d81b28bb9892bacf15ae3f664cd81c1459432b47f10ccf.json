{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, ref, computed, toRef, defineComponent, watch, Transition, withDirectives, vShow, watchEffect } from 'vue';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { createTreeMate } from 'treemate';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { useIsMounted, useMergedState, useCompitable } from 'vooks';\nimport { clickoutside } from 'vdirs';\nimport { useTheme, useConfig, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { NInternalSelectMenu, NInternalSelection } from '../../_internal';\nimport { selectLight } from '../styles';\nimport { createValOptMap, filterOptions, createTmOptions, patternMatched } from './utils';\nimport style from './styles/index.cssr';\nexport const selectProps = Object.assign(Object.assign({}, useTheme.props), {\n  to: useAdjustedTo.propTo,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  clearable: Boolean,\n  clearFilterAfterSelect: {\n    type: Boolean,\n    default: true\n  },\n  options: {\n    type: Array,\n    default: () => []\n  },\n  defaultValue: {\n    type: [String, Number, Array],\n    default: null\n  },\n  keyboard: {\n    type: Boolean,\n    default: true\n  },\n  value: [String, Number, Array],\n  placeholder: String,\n  menuProps: Object,\n  multiple: Boolean,\n  size: String,\n  filterable: Boolean,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  remote: Boolean,\n  loading: Boolean,\n  filter: Function,\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  widthMode: {\n    type: String,\n    default: 'trigger'\n  },\n  tag: Boolean,\n  onCreate: Function,\n  fallbackOption: {\n    type: [Function, Boolean],\n    default: undefined\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  },\n  maxTagCount: [Number, String],\n  consistentMenuWidth: {\n    type: Boolean,\n    default: true\n  },\n  virtualScroll: {\n    type: Boolean,\n    default: true\n  },\n  labelField: {\n    type: String,\n    default: 'label'\n  },\n  valueField: {\n    type: String,\n    default: 'value'\n  },\n  childrenField: {\n    type: String,\n    default: 'children'\n  },\n  renderLabel: Function,\n  renderOption: Function,\n  renderTag: Function,\n  'onUpdate:value': [Function, Array],\n  inputProps: Object,\n  nodeProps: Function,\n  ignoreComposition: {\n    type: Boolean,\n    default: true\n  },\n  showOnFocus: Boolean,\n  // for jsx\n  onUpdateValue: [Function, Array],\n  onBlur: [Function, Array],\n  onClear: [Function, Array],\n  onFocus: [Function, Array],\n  onScroll: [Function, Array],\n  onSearch: [Function, Array],\n  onUpdateShow: [Function, Array],\n  'onUpdate:show': [Function, Array],\n  displayDirective: {\n    type: String,\n    default: 'show'\n  },\n  resetMenuOnOptionsChange: {\n    type: Boolean,\n    default: true\n  },\n  status: String,\n  showCheckmark: {\n    type: Boolean,\n    default: true\n  },\n  /** deprecated */\n  onChange: [Function, Array],\n  items: Array\n});\nexport default defineComponent({\n  name: 'Select',\n  props: selectProps,\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.items !== undefined) {\n          warnOnce('select', '`items` is deprecated, please use `options` instead.');\n        }\n        if (props.onChange !== undefined) {\n          warnOnce('select', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n    const {\n      mergedClsPrefixRef,\n      mergedBorderedRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Select', '-select', style, selectLight, props, mergedClsPrefixRef);\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const focusedRef = ref(false);\n    const patternRef = ref('');\n    const treeMateRef = computed(() => {\n      const {\n        valueField,\n        childrenField\n      } = props;\n      const options = createTmOptions(valueField, childrenField);\n      return createTreeMate(filteredOptionsRef.value, options);\n    });\n    const valOptMapRef = computed(() => createValOptMap(localOptionsRef.value, props.valueField, props.childrenField));\n    const uncontrolledShowRef = ref(false);\n    const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n    const triggerRef = ref(null);\n    const followerRef = ref(null);\n    const menuRef = ref(null);\n    const {\n      localeRef\n    } = useLocale('Select');\n    const localizedPlaceholderRef = computed(() => {\n      var _a;\n      return (_a = props.placeholder) !== null && _a !== void 0 ? _a : localeRef.value.placeholder;\n    });\n    const compitableOptionsRef = useCompitable(props, ['items', 'options']);\n    const emptyArray = [];\n    const createdOptionsRef = ref([]);\n    const beingCreatedOptionsRef = ref([]);\n    const memoValOptMapRef = ref(new Map());\n    const wrappedFallbackOptionRef = computed(() => {\n      const {\n        fallbackOption\n      } = props;\n      if (fallbackOption === undefined) {\n        const {\n          labelField,\n          valueField\n        } = props;\n        return value => ({\n          [labelField]: String(value),\n          [valueField]: value\n        });\n      }\n      if (fallbackOption === false) return false;\n      return value => {\n        return Object.assign(fallbackOption(value), {\n          value\n        });\n      };\n    });\n    const localOptionsRef = computed(() => {\n      return beingCreatedOptionsRef.value.concat(createdOptionsRef.value).concat(compitableOptionsRef.value);\n    });\n    const resolvedFilterRef = computed(() => {\n      const {\n        filter\n      } = props;\n      if (filter) return filter;\n      const {\n        labelField,\n        valueField\n      } = props;\n      return (pattern, option) => {\n        if (!option) return false;\n        const label = option[labelField];\n        if (typeof label === 'string') {\n          return patternMatched(pattern, label);\n        }\n        const value = option[valueField];\n        if (typeof value === 'string') {\n          return patternMatched(pattern, value);\n        }\n        if (typeof value === 'number') {\n          return patternMatched(pattern, String(value));\n        }\n        return false;\n      };\n    });\n    const filteredOptionsRef = computed(() => {\n      if (props.remote) {\n        return compitableOptionsRef.value;\n      } else {\n        const {\n          value: localOptions\n        } = localOptionsRef;\n        const {\n          value: pattern\n        } = patternRef;\n        if (!pattern.length || !props.filterable) {\n          return localOptions;\n        } else {\n          return filterOptions(localOptions, resolvedFilterRef.value, pattern, props.childrenField);\n        }\n      }\n    });\n    function getMergedOptions(values) {\n      const remote = props.remote;\n      const {\n        value: memoValOptMap\n      } = memoValOptMapRef;\n      const {\n        value: valOptMap\n      } = valOptMapRef;\n      const {\n        value: wrappedFallbackOption\n      } = wrappedFallbackOptionRef;\n      const options = [];\n      values.forEach(value => {\n        if (valOptMap.has(value)) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options.push(valOptMap.get(value));\n        } else if (remote && memoValOptMap.has(value)) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options.push(memoValOptMap.get(value));\n        } else if (wrappedFallbackOption) {\n          const option = wrappedFallbackOption(value);\n          if (option) {\n            options.push(option);\n          }\n        }\n      });\n      return options;\n    }\n    const selectedOptionsRef = computed(() => {\n      if (props.multiple) {\n        const {\n          value: values\n        } = mergedValueRef;\n        if (!Array.isArray(values)) return [];\n        return getMergedOptions(values);\n      }\n      return null;\n    });\n    const selectedOptionRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!props.multiple && !Array.isArray(mergedValue)) {\n        if (mergedValue === null) return null;\n        return getMergedOptions([mergedValue])[0] || null;\n      }\n      return null;\n    });\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    function doUpdateValue(value, option) {\n      const {\n        onChange,\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue\n      } = props;\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      if (onChange) call(onChange, value, option);\n      if (onUpdateValue) call(onUpdateValue, value, option);\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, option);\n      }\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n      nTriggerFormInput();\n    }\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n    function doClear() {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear);\n    }\n    function doFocus(e) {\n      const {\n        onFocus,\n        showOnFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n      if (showOnFocus) {\n        openMenu();\n      }\n    }\n    function doSearch(value) {\n      const {\n        onSearch\n      } = props;\n      if (onSearch) call(onSearch, value);\n    }\n    function doScroll(e) {\n      const {\n        onScroll\n      } = props;\n      if (onScroll) call(onScroll, e);\n    }\n    // remote related methods\n    function updateMemorizedOptions() {\n      var _a;\n      const {\n        remote,\n        multiple\n      } = props;\n      if (remote) {\n        const {\n          value: memoValOptMap\n        } = memoValOptMapRef;\n        if (multiple) {\n          const {\n            valueField\n          } = props;\n          (_a = selectedOptionsRef.value) === null || _a === void 0 ? void 0 : _a.forEach(option => {\n            memoValOptMap.set(option[valueField], option);\n          });\n        } else {\n          const option = selectedOptionRef.value;\n          if (option) {\n            memoValOptMap.set(option[props.valueField], option);\n          }\n        }\n      }\n    }\n    // menu related methods\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n    function openMenu() {\n      if (!mergedDisabledRef.value) {\n        doUpdateShow(true);\n        uncontrolledShowRef.value = true;\n        if (props.filterable) {\n          focusSelectionInput();\n        }\n      }\n    }\n    function closeMenu() {\n      doUpdateShow(false);\n    }\n    function handleMenuAfterLeave() {\n      patternRef.value = '';\n      beingCreatedOptionsRef.value = emptyArray;\n    }\n    const activeWithoutMenuOpenRef = ref(false);\n    function onTriggerInputFocus() {\n      if (props.filterable) {\n        activeWithoutMenuOpenRef.value = true;\n      }\n    }\n    function onTriggerInputBlur() {\n      if (props.filterable) {\n        activeWithoutMenuOpenRef.value = false;\n        if (!mergedShowRef.value) {\n          handleMenuAfterLeave();\n        }\n      }\n    }\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value) return;\n      if (!mergedShowRef.value) {\n        openMenu();\n      } else {\n        if (!props.filterable) {\n          // already focused, don't need to return focus\n          closeMenu();\n        } else {\n          focusSelectionInput();\n        }\n      }\n    }\n    function handleTriggerBlur(e) {\n      var _a, _b;\n      if ((_b = (_a = menuRef.value) === null || _a === void 0 ? void 0 : _a.selfRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) {\n        return;\n      }\n      focusedRef.value = false;\n      doBlur(e);\n      // outside select, don't need to return focus\n      closeMenu();\n    }\n    function handleTriggerFocus(e) {\n      doFocus(e);\n      focusedRef.value = true;\n    }\n    function handleMenuFocus(e) {\n      focusedRef.value = true;\n    }\n    function handleMenuBlur(e) {\n      var _a;\n      if ((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget)) return;\n      focusedRef.value = false;\n      doBlur(e);\n      // outside select, don't need to return focus\n      closeMenu();\n    }\n    function handleMenuTabOut() {\n      var _a;\n      (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      closeMenu();\n    }\n    function handleMenuClickOutside(e) {\n      var _a;\n      if (mergedShowRef.value) {\n        if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(getPreciseEventTarget(e)))) {\n          // outside select, don't need to return focus\n          closeMenu();\n        }\n      }\n    }\n    function createClearedMultipleSelectValue(value) {\n      if (!Array.isArray(value)) return [];\n      if (wrappedFallbackOptionRef.value) {\n        // if option has a fallback, I can't help user to clear some unknown value\n        return Array.from(value);\n      } else {\n        // if there's no option fallback, unappeared options are treated as invalid\n        const {\n          remote\n        } = props;\n        const {\n          value: valOptMap\n        } = valOptMapRef;\n        if (remote) {\n          const {\n            value: memoValOptMap\n          } = memoValOptMapRef;\n          return value.filter(v => valOptMap.has(v) || memoValOptMap.has(v));\n        } else {\n          return value.filter(v => valOptMap.has(v));\n        }\n      }\n    }\n    function handleToggleByTmNode(tmNode) {\n      handleToggleByOption(tmNode.rawNode);\n    }\n    function handleToggleByOption(option) {\n      if (mergedDisabledRef.value) return;\n      const {\n        tag,\n        remote,\n        clearFilterAfterSelect,\n        valueField\n      } = props;\n      if (tag && !remote) {\n        const {\n          value: beingCreatedOptions\n        } = beingCreatedOptionsRef;\n        const beingCreatedOption = beingCreatedOptions[0] || null;\n        if (beingCreatedOption) {\n          const createdOptions = createdOptionsRef.value;\n          if (!createdOptions.length) {\n            createdOptionsRef.value = [beingCreatedOption];\n          } else {\n            createdOptions.push(beingCreatedOption);\n          }\n          beingCreatedOptionsRef.value = emptyArray;\n        }\n      }\n      if (remote) {\n        memoValOptMapRef.value.set(option[valueField], option);\n      }\n      if (props.multiple) {\n        const changedValue = createClearedMultipleSelectValue(mergedValueRef.value);\n        const index = changedValue.findIndex(value => value === option[valueField]);\n        if (~index) {\n          changedValue.splice(index, 1);\n          if (tag && !remote) {\n            const createdOptionIndex = getCreatedOptionIndex(option[valueField]);\n            if (~createdOptionIndex) {\n              createdOptionsRef.value.splice(createdOptionIndex, 1);\n              if (clearFilterAfterSelect) patternRef.value = '';\n            }\n          }\n        } else {\n          changedValue.push(option[valueField]);\n          if (clearFilterAfterSelect) patternRef.value = '';\n        }\n        doUpdateValue(changedValue, getMergedOptions(changedValue));\n      } else {\n        if (tag && !remote) {\n          const createdOptionIndex = getCreatedOptionIndex(option[valueField]);\n          if (~createdOptionIndex) {\n            createdOptionsRef.value = [createdOptionsRef.value[createdOptionIndex]];\n          } else {\n            createdOptionsRef.value = emptyArray;\n          }\n        }\n        focusSelection();\n        closeMenu();\n        doUpdateValue(option[valueField], option);\n      }\n    }\n    function getCreatedOptionIndex(optionValue) {\n      const createdOptions = createdOptionsRef.value;\n      return createdOptions.findIndex(createdOption => createdOption[props.valueField] === optionValue);\n    }\n    function handlePatternInput(e) {\n      if (!mergedShowRef.value) {\n        openMenu();\n      }\n      const {\n        value\n      } = e.target;\n      patternRef.value = value;\n      const {\n        tag,\n        remote\n      } = props;\n      doSearch(value);\n      if (tag && !remote) {\n        if (!value) {\n          beingCreatedOptionsRef.value = emptyArray;\n          return;\n        }\n        const {\n          onCreate\n        } = props;\n        const optionBeingCreated = onCreate ? onCreate(value) : {\n          [props.labelField]: value,\n          [props.valueField]: value\n        };\n        const {\n          valueField,\n          labelField\n        } = props;\n        if (compitableOptionsRef.value.some(option => {\n          return option[valueField] === optionBeingCreated[valueField] || option[labelField] === optionBeingCreated[labelField];\n        }) || createdOptionsRef.value.some(option => {\n          return option[valueField] === optionBeingCreated[valueField] || option[labelField] === optionBeingCreated[labelField];\n        })) {\n          beingCreatedOptionsRef.value = emptyArray;\n        } else {\n          beingCreatedOptionsRef.value = [optionBeingCreated];\n        }\n      }\n    }\n    function handleClear(e) {\n      e.stopPropagation();\n      const {\n        multiple\n      } = props;\n      if (!multiple && props.filterable) {\n        closeMenu();\n      }\n      doClear();\n      if (multiple) {\n        doUpdateValue([], []);\n      } else {\n        doUpdateValue(null, null);\n      }\n    }\n    function handleMenuMousedown(e) {\n      if (!happensIn(e, 'action') && !happensIn(e, 'empty')) e.preventDefault();\n    }\n    // scroll events on menu\n    function handleMenuScroll(e) {\n      doScroll(e);\n    }\n    // keyboard events\n    // also for menu keydown\n    function handleKeydown(e) {\n      var _a, _b, _c, _d, _e;\n      if (!props.keyboard) {\n        e.preventDefault();\n        return;\n      }\n      switch (e.key) {\n        case ' ':\n          if (props.filterable) break;else {\n            e.preventDefault();\n          }\n        // eslint-disable-next-line no-fallthrough\n        case 'Enter':\n          if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.isComposing)) {\n            if (mergedShowRef.value) {\n              const pendingTmNode = (_b = menuRef.value) === null || _b === void 0 ? void 0 : _b.getPendingTmNode();\n              if (pendingTmNode) {\n                handleToggleByTmNode(pendingTmNode);\n              } else if (!props.filterable) {\n                closeMenu();\n                focusSelection();\n              }\n            } else {\n              openMenu();\n              if (props.tag && activeWithoutMenuOpenRef.value) {\n                const beingCreatedOption = beingCreatedOptionsRef.value[0];\n                if (beingCreatedOption) {\n                  const optionValue = beingCreatedOption[props.valueField];\n                  const {\n                    value: mergedValue\n                  } = mergedValueRef;\n                  if (props.multiple) {\n                    if (Array.isArray(mergedValue) && mergedValue.some(value => value === optionValue)) {\n                      // do nothing\n                    } else {\n                      handleToggleByOption(beingCreatedOption);\n                    }\n                  } else {\n                    handleToggleByOption(beingCreatedOption);\n                  }\n                }\n              }\n            }\n          }\n          e.preventDefault();\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n          if (props.loading) return;\n          if (mergedShowRef.value) {\n            (_c = menuRef.value) === null || _c === void 0 ? void 0 : _c.prev();\n          }\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          if (props.loading) return;\n          if (mergedShowRef.value) {\n            (_d = menuRef.value) === null || _d === void 0 ? void 0 : _d.next();\n          } else {\n            openMenu();\n          }\n          break;\n        case 'Escape':\n          if (mergedShowRef.value) {\n            markEventEffectPerformed(e);\n            closeMenu();\n          }\n          (_e = triggerRef.value) === null || _e === void 0 ? void 0 : _e.focus();\n          break;\n      }\n    }\n    function focusSelection() {\n      var _a;\n      (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    function focusSelectionInput() {\n      var _a;\n      (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n    }\n    function handleTriggerOrMenuResize() {\n      var _a;\n      if (!mergedShowRef.value) return;\n      (_a = followerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n    }\n    updateMemorizedOptions();\n    watch(toRef(props, 'options'), updateMemorizedOptions);\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n        (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      focusInput: () => {\n        var _a;\n        (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n      },\n      blur: () => {\n        var _a;\n        (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      blurInput: () => {\n        var _a;\n        (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.blurInput();\n      }\n    };\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          menuBoxShadow\n        }\n      } = themeRef.value;\n      return {\n        '--n-menu-box-shadow': menuBoxShadow\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('select', undefined, cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedStatus: mergedStatusRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      namespace: namespaceRef,\n      treeMate: treeMateRef,\n      isMounted: useIsMounted(),\n      triggerRef,\n      menuRef,\n      pattern: patternRef,\n      uncontrolledShow: uncontrolledShowRef,\n      mergedShow: mergedShowRef,\n      adjustedTo: useAdjustedTo(props),\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      followerRef,\n      localizedPlaceholder: localizedPlaceholderRef,\n      selectedOption: selectedOptionRef,\n      selectedOptions: selectedOptionsRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      focused: focusedRef,\n      activeWithoutMenuOpen: activeWithoutMenuOpenRef,\n      inlineThemeDisabled,\n      onTriggerInputFocus,\n      onTriggerInputBlur,\n      handleTriggerOrMenuResize,\n      handleMenuFocus,\n      handleMenuBlur,\n      handleMenuTabOut,\n      handleTriggerClick,\n      handleToggle: handleToggleByTmNode,\n      handleDeleteOption: handleToggleByOption,\n      handlePatternInput,\n      handleClear,\n      handleTriggerBlur,\n      handleTriggerFocus,\n      handleKeydown,\n      handleMenuAfterLeave,\n      handleMenuClickOutside,\n      handleMenuScroll,\n      handleMenuKeydown: handleKeydown,\n      handleMenuMousedown,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n  render() {\n    return h(\"div\", {\n      class: `${this.mergedClsPrefix}-select`\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInternalSelection, {\n          ref: \"triggerRef\",\n          inlineThemeDisabled: this.inlineThemeDisabled,\n          status: this.mergedStatus,\n          inputProps: this.inputProps,\n          clsPrefix: this.mergedClsPrefix,\n          showArrow: this.showArrow,\n          maxTagCount: this.maxTagCount,\n          bordered: this.mergedBordered,\n          active: this.activeWithoutMenuOpen || this.mergedShow,\n          pattern: this.pattern,\n          placeholder: this.localizedPlaceholder,\n          selectedOption: this.selectedOption,\n          selectedOptions: this.selectedOptions,\n          multiple: this.multiple,\n          renderTag: this.renderTag,\n          renderLabel: this.renderLabel,\n          filterable: this.filterable,\n          clearable: this.clearable,\n          disabled: this.mergedDisabled,\n          size: this.mergedSize,\n          theme: this.mergedTheme.peers.InternalSelection,\n          labelField: this.labelField,\n          valueField: this.valueField,\n          themeOverrides: this.mergedTheme.peerOverrides.InternalSelection,\n          loading: this.loading,\n          focused: this.focused,\n          onClick: this.handleTriggerClick,\n          onDeleteOption: this.handleDeleteOption,\n          onPatternInput: this.handlePatternInput,\n          onClear: this.handleClear,\n          onBlur: this.handleTriggerBlur,\n          onFocus: this.handleTriggerFocus,\n          onKeydown: this.handleKeydown,\n          onPatternBlur: this.onTriggerInputBlur,\n          onPatternFocus: this.onTriggerInputFocus,\n          onResize: this.handleTriggerOrMenuResize,\n          ignoreComposition: this.ignoreComposition\n        }, {\n          arrow: () => {\n            var _a, _b;\n            return [(_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a)];\n          }\n        })\n      }), h(VFollower, {\n        ref: \"followerRef\",\n        show: this.mergedShow,\n        to: this.adjustedTo,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        containerClass: this.namespace,\n        width: this.consistentMenuWidth ? 'target' : undefined,\n        minWidth: \"target\",\n        placement: this.placement\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted,\n          onAfterLeave: this.handleMenuAfterLeave\n        }, {\n          default: () => {\n            var _a, _b, _c;\n            if (!(this.mergedShow || this.displayDirective === 'show')) {\n              return null;\n            }\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            return withDirectives(h(NInternalSelectMenu, Object.assign({}, this.menuProps, {\n              ref: \"menuRef\",\n              onResize: this.handleTriggerOrMenuResize,\n              inlineThemeDisabled: this.inlineThemeDisabled,\n              virtualScroll: this.consistentMenuWidth && this.virtualScroll,\n              class: [`${this.mergedClsPrefix}-select-menu`, this.themeClass, (_b = this.menuProps) === null || _b === void 0 ? void 0 : _b.class],\n              clsPrefix: this.mergedClsPrefix,\n              focusable: true,\n              labelField: this.labelField,\n              valueField: this.valueField,\n              autoPending: true,\n              nodeProps: this.nodeProps,\n              theme: this.mergedTheme.peers.InternalSelectMenu,\n              themeOverrides: this.mergedTheme.peerOverrides.InternalSelectMenu,\n              treeMate: this.treeMate,\n              multiple: this.multiple,\n              size: \"medium\",\n              renderOption: this.renderOption,\n              renderLabel: this.renderLabel,\n              value: this.mergedValue,\n              style: [(_c = this.menuProps) === null || _c === void 0 ? void 0 : _c.style, this.cssVars],\n              onToggle: this.handleToggle,\n              onScroll: this.handleMenuScroll,\n              onFocus: this.handleMenuFocus,\n              onBlur: this.handleMenuBlur,\n              onKeydown: this.handleMenuKeydown,\n              onTabOut: this.handleMenuTabOut,\n              onMousedown: this.handleMenuMousedown,\n              show: this.mergedShow,\n              showCheckmark: this.showCheckmark,\n              resetMenuOnOptionsChange: this.resetMenuOnOptionsChange\n            }), {\n              empty: () => {\n                var _a, _b;\n                return [(_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a)];\n              },\n              action: () => {\n                var _a, _b;\n                return [(_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a)];\n              }\n            }), this.displayDirective === 'show' ? [[vShow, this.mergedShow], [clickoutside, this.handleMenuClickOutside, undefined, {\n              capture: true\n            }]] : [[clickoutside, this.handleMenuClickOutside, undefined, {\n              capture: true\n            }]]);\n          }\n        })\n      })]\n    }));\n  }\n});","map":{"version":3,"names":["h","ref","computed","toRef","defineComponent","watch","Transition","withDirectives","vShow","watchEffect","getPreciseEventTarget","happensIn","createTreeMate","VBinder","VFollower","VTarget","useIsMounted","useMergedState","useCompitable","clickoutside","useTheme","useConfig","useLocale","useFormItem","useThemeClass","call","markEventEffectPerformed","useAdjustedTo","warnOnce","NInternalSelectMenu","NInternalSelection","selectLight","createValOptMap","filterOptions","createTmOptions","patternMatched","style","selectProps","Object","assign","props","to","propTo","bordered","type","Boolean","default","undefined","clearable","clearFilterAfterSelect","options","Array","defaultValue","String","Number","keyboard","value","placeholder","menuProps","multiple","size","filterable","disabled","remote","loading","filter","Function","placement","widthMode","tag","onCreate","fallbackOption","show","showArrow","maxTagCount","consistentMenuWidth","virtualScroll","labelField","valueField","childrenField","renderLabel","renderOption","renderTag","inputProps","nodeProps","ignoreComposition","showOnFocus","onUpdateValue","onBlur","onClear","onFocus","onScroll","onSearch","onUpdateShow","displayDirective","resetMenuOnOptionsChange","status","showCheckmark","onChange","items","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","mergedBorderedRef","namespaceRef","inlineThemeDisabled","themeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","focusedRef","patternRef","treeMateRef","filteredOptionsRef","valOptMapRef","localOptionsRef","uncontrolledShowRef","mergedShowRef","triggerRef","followerRef","menuRef","localeRef","localizedPlaceholderRef","_a","compitableOptionsRef","emptyArray","createdOptionsRef","beingCreatedOptionsRef","memoValOptMapRef","Map","wrappedFallbackOptionRef","concat","resolvedFilterRef","pattern","option","label","localOptions","length","getMergedOptions","values","memoValOptMap","valOptMap","wrappedFallbackOption","forEach","has","push","get","selectedOptionsRef","isArray","selectedOptionRef","mergedValue","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","doUpdateValue","_onUpdateValue","nTriggerFormChange","nTriggerFormInput","doBlur","e","nTriggerFormBlur","doClear","doFocus","nTriggerFormFocus","openMenu","doSearch","doScroll","updateMemorizedOptions","set","doUpdateShow","_onUpdateShow","focusSelectionInput","closeMenu","handleMenuAfterLeave","activeWithoutMenuOpenRef","onTriggerInputFocus","onTriggerInputBlur","handleTriggerClick","handleTriggerBlur","_b","selfRef","contains","relatedTarget","handleTriggerFocus","handleMenuFocus","handleMenuBlur","$el","handleMenuTabOut","focus","handleMenuClickOutside","createClearedMultipleSelectValue","from","v","handleToggleByTmNode","tmNode","handleToggleByOption","rawNode","beingCreatedOptions","beingCreatedOption","createdOptions","changedValue","index","findIndex","splice","createdOptionIndex","getCreatedOptionIndex","focusSelection","optionValue","createdOption","handlePatternInput","target","optionBeingCreated","some","handleClear","stopPropagation","handleMenuMousedown","preventDefault","handleMenuScroll","handleKeydown","_c","_d","_e","key","isComposing","pendingTmNode","getPendingTmNode","prev","next","focusInput","handleTriggerOrMenuResize","syncPosition","exposedMethods","blur","blurInput","cssVarsRef","self","menuBoxShadow","themeClassHandle","mergedStatus","mergedClsPrefix","mergedBordered","namespace","treeMate","isMounted","uncontrolledShow","mergedShow","adjustedTo","uncontrolledValue","localizedPlaceholder","selectedOption","selectedOptions","mergedSize","mergedDisabled","focused","activeWithoutMenuOpen","handleToggle","handleDeleteOption","handleMenuKeydown","mergedTheme","cssVars","themeClass","onRender","render","class","clsPrefix","active","theme","peers","InternalSelection","themeOverrides","peerOverrides","onClick","onDeleteOption","onPatternInput","onKeydown","onPatternBlur","onPatternFocus","onResize","arrow","$slots","teleportDisabled","tdkey","containerClass","width","minWidth","appear","onAfterLeave","focusable","autoPending","InternalSelectMenu","onToggle","onTabOut","onMousedown","empty","action","capture"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/select/src/Select.js"],"sourcesContent":["import { h, ref, computed, toRef, defineComponent, watch, Transition, withDirectives, vShow, watchEffect } from 'vue';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { createTreeMate } from 'treemate';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { useIsMounted, useMergedState, useCompitable } from 'vooks';\nimport { clickoutside } from 'vdirs';\nimport { useTheme, useConfig, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { NInternalSelectMenu, NInternalSelection } from '../../_internal';\nimport { selectLight } from '../styles';\nimport { createValOptMap, filterOptions, createTmOptions, patternMatched } from './utils';\nimport style from './styles/index.cssr';\nexport const selectProps = Object.assign(Object.assign({}, useTheme.props), { to: useAdjustedTo.propTo, bordered: {\n        type: Boolean,\n        default: undefined\n    }, clearable: Boolean, clearFilterAfterSelect: {\n        type: Boolean,\n        default: true\n    }, options: {\n        type: Array,\n        default: () => []\n    }, defaultValue: {\n        type: [String, Number, Array],\n        default: null\n    }, keyboard: {\n        type: Boolean,\n        default: true\n    }, value: [String, Number, Array], placeholder: String, menuProps: Object, multiple: Boolean, size: String, filterable: Boolean, disabled: {\n        type: Boolean,\n        default: undefined\n    }, remote: Boolean, loading: Boolean, filter: Function, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, widthMode: {\n        type: String,\n        default: 'trigger'\n    }, tag: Boolean, onCreate: Function, fallbackOption: {\n        type: [Function, Boolean],\n        default: undefined\n    }, show: {\n        type: Boolean,\n        default: undefined\n    }, showArrow: {\n        type: Boolean,\n        default: true\n    }, maxTagCount: [Number, String], consistentMenuWidth: {\n        type: Boolean,\n        default: true\n    }, virtualScroll: {\n        type: Boolean,\n        default: true\n    }, labelField: {\n        type: String,\n        default: 'label'\n    }, valueField: {\n        type: String,\n        default: 'value'\n    }, childrenField: {\n        type: String,\n        default: 'children'\n    }, renderLabel: Function, renderOption: Function, renderTag: Function, 'onUpdate:value': [Function, Array], inputProps: Object, nodeProps: Function, ignoreComposition: { type: Boolean, default: true }, showOnFocus: Boolean, \n    // for jsx\n    onUpdateValue: [Function, Array], onBlur: [Function, Array], onClear: [Function, Array], onFocus: [Function, Array], onScroll: [Function, Array], onSearch: [Function, Array], onUpdateShow: [Function, Array], 'onUpdate:show': [Function, Array], displayDirective: {\n        type: String,\n        default: 'show'\n    }, resetMenuOnOptionsChange: {\n        type: Boolean,\n        default: true\n    }, status: String, showCheckmark: {\n        type: Boolean,\n        default: true\n    }, \n    /** deprecated */\n    onChange: [Function, Array], items: Array });\nexport default defineComponent({\n    name: 'Select',\n    props: selectProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.items !== undefined) {\n                    warnOnce('select', '`items` is deprecated, please use `options` instead.');\n                }\n                if (props.onChange !== undefined) {\n                    warnOnce('select', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, mergedBorderedRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Select', '-select', style, selectLight, props, mergedClsPrefixRef);\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const focusedRef = ref(false);\n        const patternRef = ref('');\n        const treeMateRef = computed(() => {\n            const { valueField, childrenField } = props;\n            const options = createTmOptions(valueField, childrenField);\n            return createTreeMate(filteredOptionsRef.value, options);\n        });\n        const valOptMapRef = computed(() => createValOptMap(localOptionsRef.value, props.valueField, props.childrenField));\n        const uncontrolledShowRef = ref(false);\n        const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n        const triggerRef = ref(null);\n        const followerRef = ref(null);\n        const menuRef = ref(null);\n        const { localeRef } = useLocale('Select');\n        const localizedPlaceholderRef = computed(() => {\n            var _a;\n            return (_a = props.placeholder) !== null && _a !== void 0 ? _a : localeRef.value.placeholder;\n        });\n        const compitableOptionsRef = useCompitable(props, ['items', 'options']);\n        const emptyArray = [];\n        const createdOptionsRef = ref([]);\n        const beingCreatedOptionsRef = ref([]);\n        const memoValOptMapRef = ref(new Map());\n        const wrappedFallbackOptionRef = computed(() => {\n            const { fallbackOption } = props;\n            if (fallbackOption === undefined) {\n                const { labelField, valueField } = props;\n                return (value) => ({\n                    [labelField]: String(value),\n                    [valueField]: value\n                });\n            }\n            if (fallbackOption === false)\n                return false;\n            return (value) => {\n                return Object.assign(fallbackOption(value), {\n                    value\n                });\n            };\n        });\n        const localOptionsRef = computed(() => {\n            return beingCreatedOptionsRef.value.concat(createdOptionsRef.value).concat(compitableOptionsRef.value);\n        });\n        const resolvedFilterRef = computed(() => {\n            const { filter } = props;\n            if (filter)\n                return filter;\n            const { labelField, valueField } = props;\n            return (pattern, option) => {\n                if (!option)\n                    return false;\n                const label = option[labelField];\n                if (typeof label === 'string') {\n                    return patternMatched(pattern, label);\n                }\n                const value = option[valueField];\n                if (typeof value === 'string') {\n                    return patternMatched(pattern, value);\n                }\n                if (typeof value === 'number') {\n                    return patternMatched(pattern, String(value));\n                }\n                return false;\n            };\n        });\n        const filteredOptionsRef = computed(() => {\n            if (props.remote) {\n                return compitableOptionsRef.value;\n            }\n            else {\n                const { value: localOptions } = localOptionsRef;\n                const { value: pattern } = patternRef;\n                if (!pattern.length || !props.filterable) {\n                    return localOptions;\n                }\n                else {\n                    return filterOptions(localOptions, resolvedFilterRef.value, pattern, props.childrenField);\n                }\n            }\n        });\n        function getMergedOptions(values) {\n            const remote = props.remote;\n            const { value: memoValOptMap } = memoValOptMapRef;\n            const { value: valOptMap } = valOptMapRef;\n            const { value: wrappedFallbackOption } = wrappedFallbackOptionRef;\n            const options = [];\n            values.forEach((value) => {\n                if (valOptMap.has(value)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    options.push(valOptMap.get(value));\n                }\n                else if (remote && memoValOptMap.has(value)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    options.push(memoValOptMap.get(value));\n                }\n                else if (wrappedFallbackOption) {\n                    const option = wrappedFallbackOption(value);\n                    if (option) {\n                        options.push(option);\n                    }\n                }\n            });\n            return options;\n        }\n        const selectedOptionsRef = computed(() => {\n            if (props.multiple) {\n                const { value: values } = mergedValueRef;\n                if (!Array.isArray(values))\n                    return [];\n                return getMergedOptions(values);\n            }\n            return null;\n        });\n        const selectedOptionRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!props.multiple && !Array.isArray(mergedValue)) {\n                if (mergedValue === null)\n                    return null;\n                return getMergedOptions([mergedValue])[0] || null;\n            }\n            return null;\n        });\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        function doUpdateValue(value, option) {\n            const { onChange, 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            if (onChange)\n                call(onChange, value, option);\n            if (onUpdateValue)\n                call(onUpdateValue, value, option);\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, option);\n            }\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n            nTriggerFormInput();\n        }\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doClear() {\n            const { onClear } = props;\n            if (onClear)\n                call(onClear);\n        }\n        function doFocus(e) {\n            const { onFocus, showOnFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n            if (showOnFocus) {\n                openMenu();\n            }\n        }\n        function doSearch(value) {\n            const { onSearch } = props;\n            if (onSearch)\n                call(onSearch, value);\n        }\n        function doScroll(e) {\n            const { onScroll } = props;\n            if (onScroll)\n                call(onScroll, e);\n        }\n        // remote related methods\n        function updateMemorizedOptions() {\n            var _a;\n            const { remote, multiple } = props;\n            if (remote) {\n                const { value: memoValOptMap } = memoValOptMapRef;\n                if (multiple) {\n                    const { valueField } = props;\n                    (_a = selectedOptionsRef.value) === null || _a === void 0 ? void 0 : _a.forEach((option) => {\n                        memoValOptMap.set(option[valueField], option);\n                    });\n                }\n                else {\n                    const option = selectedOptionRef.value;\n                    if (option) {\n                        memoValOptMap.set(option[props.valueField], option);\n                    }\n                }\n            }\n        }\n        // menu related methods\n        function doUpdateShow(value) {\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n            uncontrolledShowRef.value = value;\n        }\n        function openMenu() {\n            if (!mergedDisabledRef.value) {\n                doUpdateShow(true);\n                uncontrolledShowRef.value = true;\n                if (props.filterable) {\n                    focusSelectionInput();\n                }\n            }\n        }\n        function closeMenu() {\n            doUpdateShow(false);\n        }\n        function handleMenuAfterLeave() {\n            patternRef.value = '';\n            beingCreatedOptionsRef.value = emptyArray;\n        }\n        const activeWithoutMenuOpenRef = ref(false);\n        function onTriggerInputFocus() {\n            if (props.filterable) {\n                activeWithoutMenuOpenRef.value = true;\n            }\n        }\n        function onTriggerInputBlur() {\n            if (props.filterable) {\n                activeWithoutMenuOpenRef.value = false;\n                if (!mergedShowRef.value) {\n                    handleMenuAfterLeave();\n                }\n            }\n        }\n        function handleTriggerClick() {\n            if (mergedDisabledRef.value)\n                return;\n            if (!mergedShowRef.value) {\n                openMenu();\n            }\n            else {\n                if (!props.filterable) {\n                    // already focused, don't need to return focus\n                    closeMenu();\n                }\n                else {\n                    focusSelectionInput();\n                }\n            }\n        }\n        function handleTriggerBlur(e) {\n            var _a, _b;\n            if ((_b = (_a = menuRef.value) === null || _a === void 0 ? void 0 : _a.selfRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) {\n                return;\n            }\n            focusedRef.value = false;\n            doBlur(e);\n            // outside select, don't need to return focus\n            closeMenu();\n        }\n        function handleTriggerFocus(e) {\n            doFocus(e);\n            focusedRef.value = true;\n        }\n        function handleMenuFocus(e) {\n            focusedRef.value = true;\n        }\n        function handleMenuBlur(e) {\n            var _a;\n            if ((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))\n                return;\n            focusedRef.value = false;\n            doBlur(e);\n            // outside select, don't need to return focus\n            closeMenu();\n        }\n        function handleMenuTabOut() {\n            var _a;\n            (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            closeMenu();\n        }\n        function handleMenuClickOutside(e) {\n            var _a;\n            if (mergedShowRef.value) {\n                if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(getPreciseEventTarget(e)))) {\n                    // outside select, don't need to return focus\n                    closeMenu();\n                }\n            }\n        }\n        function createClearedMultipleSelectValue(value) {\n            if (!Array.isArray(value))\n                return [];\n            if (wrappedFallbackOptionRef.value) {\n                // if option has a fallback, I can't help user to clear some unknown value\n                return Array.from(value);\n            }\n            else {\n                // if there's no option fallback, unappeared options are treated as invalid\n                const { remote } = props;\n                const { value: valOptMap } = valOptMapRef;\n                if (remote) {\n                    const { value: memoValOptMap } = memoValOptMapRef;\n                    return value.filter((v) => valOptMap.has(v) || memoValOptMap.has(v));\n                }\n                else {\n                    return value.filter((v) => valOptMap.has(v));\n                }\n            }\n        }\n        function handleToggleByTmNode(tmNode) {\n            handleToggleByOption(tmNode.rawNode);\n        }\n        function handleToggleByOption(option) {\n            if (mergedDisabledRef.value)\n                return;\n            const { tag, remote, clearFilterAfterSelect, valueField } = props;\n            if (tag && !remote) {\n                const { value: beingCreatedOptions } = beingCreatedOptionsRef;\n                const beingCreatedOption = beingCreatedOptions[0] || null;\n                if (beingCreatedOption) {\n                    const createdOptions = createdOptionsRef.value;\n                    if (!createdOptions.length) {\n                        createdOptionsRef.value = [beingCreatedOption];\n                    }\n                    else {\n                        createdOptions.push(beingCreatedOption);\n                    }\n                    beingCreatedOptionsRef.value = emptyArray;\n                }\n            }\n            if (remote) {\n                memoValOptMapRef.value.set(option[valueField], option);\n            }\n            if (props.multiple) {\n                const changedValue = createClearedMultipleSelectValue(mergedValueRef.value);\n                const index = changedValue.findIndex((value) => value === option[valueField]);\n                if (~index) {\n                    changedValue.splice(index, 1);\n                    if (tag && !remote) {\n                        const createdOptionIndex = getCreatedOptionIndex(option[valueField]);\n                        if (~createdOptionIndex) {\n                            createdOptionsRef.value.splice(createdOptionIndex, 1);\n                            if (clearFilterAfterSelect)\n                                patternRef.value = '';\n                        }\n                    }\n                }\n                else {\n                    changedValue.push(option[valueField]);\n                    if (clearFilterAfterSelect)\n                        patternRef.value = '';\n                }\n                doUpdateValue(changedValue, getMergedOptions(changedValue));\n            }\n            else {\n                if (tag && !remote) {\n                    const createdOptionIndex = getCreatedOptionIndex(option[valueField]);\n                    if (~createdOptionIndex) {\n                        createdOptionsRef.value = [\n                            createdOptionsRef.value[createdOptionIndex]\n                        ];\n                    }\n                    else {\n                        createdOptionsRef.value = emptyArray;\n                    }\n                }\n                focusSelection();\n                closeMenu();\n                doUpdateValue(option[valueField], option);\n            }\n        }\n        function getCreatedOptionIndex(optionValue) {\n            const createdOptions = createdOptionsRef.value;\n            return createdOptions.findIndex((createdOption) => createdOption[props.valueField] === optionValue);\n        }\n        function handlePatternInput(e) {\n            if (!mergedShowRef.value) {\n                openMenu();\n            }\n            const { value } = e.target;\n            patternRef.value = value;\n            const { tag, remote } = props;\n            doSearch(value);\n            if (tag && !remote) {\n                if (!value) {\n                    beingCreatedOptionsRef.value = emptyArray;\n                    return;\n                }\n                const { onCreate } = props;\n                const optionBeingCreated = onCreate\n                    ? onCreate(value)\n                    : { [props.labelField]: value, [props.valueField]: value };\n                const { valueField, labelField } = props;\n                if (compitableOptionsRef.value.some((option) => {\n                    return (option[valueField] === optionBeingCreated[valueField] ||\n                        option[labelField] === optionBeingCreated[labelField]);\n                }) ||\n                    createdOptionsRef.value.some((option) => {\n                        return (option[valueField] === optionBeingCreated[valueField] ||\n                            option[labelField] === optionBeingCreated[labelField]);\n                    })) {\n                    beingCreatedOptionsRef.value = emptyArray;\n                }\n                else {\n                    beingCreatedOptionsRef.value = [optionBeingCreated];\n                }\n            }\n        }\n        function handleClear(e) {\n            e.stopPropagation();\n            const { multiple } = props;\n            if (!multiple && props.filterable) {\n                closeMenu();\n            }\n            doClear();\n            if (multiple) {\n                doUpdateValue([], []);\n            }\n            else {\n                doUpdateValue(null, null);\n            }\n        }\n        function handleMenuMousedown(e) {\n            if (!happensIn(e, 'action') && !happensIn(e, 'empty'))\n                e.preventDefault();\n        }\n        // scroll events on menu\n        function handleMenuScroll(e) {\n            doScroll(e);\n        }\n        // keyboard events\n        // also for menu keydown\n        function handleKeydown(e) {\n            var _a, _b, _c, _d, _e;\n            if (!props.keyboard) {\n                e.preventDefault();\n                return;\n            }\n            switch (e.key) {\n                case ' ':\n                    if (props.filterable)\n                        break;\n                    else {\n                        e.preventDefault();\n                    }\n                // eslint-disable-next-line no-fallthrough\n                case 'Enter':\n                    if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.isComposing)) {\n                        if (mergedShowRef.value) {\n                            const pendingTmNode = (_b = menuRef.value) === null || _b === void 0 ? void 0 : _b.getPendingTmNode();\n                            if (pendingTmNode) {\n                                handleToggleByTmNode(pendingTmNode);\n                            }\n                            else if (!props.filterable) {\n                                closeMenu();\n                                focusSelection();\n                            }\n                        }\n                        else {\n                            openMenu();\n                            if (props.tag && activeWithoutMenuOpenRef.value) {\n                                const beingCreatedOption = beingCreatedOptionsRef.value[0];\n                                if (beingCreatedOption) {\n                                    const optionValue = beingCreatedOption[props.valueField];\n                                    const { value: mergedValue } = mergedValueRef;\n                                    if (props.multiple) {\n                                        if (Array.isArray(mergedValue) &&\n                                            mergedValue.some((value) => value === optionValue)) {\n                                            // do nothing\n                                        }\n                                        else {\n                                            handleToggleByOption(beingCreatedOption);\n                                        }\n                                    }\n                                    else {\n                                        handleToggleByOption(beingCreatedOption);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                    break;\n                case 'ArrowUp':\n                    e.preventDefault();\n                    if (props.loading)\n                        return;\n                    if (mergedShowRef.value) {\n                        (_c = menuRef.value) === null || _c === void 0 ? void 0 : _c.prev();\n                    }\n                    break;\n                case 'ArrowDown':\n                    e.preventDefault();\n                    if (props.loading)\n                        return;\n                    if (mergedShowRef.value) {\n                        (_d = menuRef.value) === null || _d === void 0 ? void 0 : _d.next();\n                    }\n                    else {\n                        openMenu();\n                    }\n                    break;\n                case 'Escape':\n                    if (mergedShowRef.value) {\n                        markEventEffectPerformed(e);\n                        closeMenu();\n                    }\n                    (_e = triggerRef.value) === null || _e === void 0 ? void 0 : _e.focus();\n                    break;\n            }\n        }\n        function focusSelection() {\n            var _a;\n            (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        function focusSelectionInput() {\n            var _a;\n            (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n        }\n        function handleTriggerOrMenuResize() {\n            var _a;\n            if (!mergedShowRef.value)\n                return;\n            (_a = followerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n        }\n        updateMemorizedOptions();\n        watch(toRef(props, 'options'), updateMemorizedOptions);\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            focusInput: () => {\n                var _a;\n                (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n            },\n            blur: () => {\n                var _a;\n                (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            },\n            blurInput: () => {\n                var _a;\n                (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.blurInput();\n            }\n        };\n        const cssVarsRef = computed(() => {\n            const { self: { menuBoxShadow } } = themeRef.value;\n            return {\n                '--n-menu-box-shadow': menuBoxShadow\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('select', undefined, cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, exposedMethods), { mergedStatus: mergedStatusRef, mergedClsPrefix: mergedClsPrefixRef, mergedBordered: mergedBorderedRef, namespace: namespaceRef, treeMate: treeMateRef, isMounted: useIsMounted(), triggerRef,\n            menuRef, pattern: patternRef, uncontrolledShow: uncontrolledShowRef, mergedShow: mergedShowRef, adjustedTo: useAdjustedTo(props), uncontrolledValue: uncontrolledValueRef, mergedValue: mergedValueRef, followerRef, localizedPlaceholder: localizedPlaceholderRef, selectedOption: selectedOptionRef, selectedOptions: selectedOptionsRef, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, focused: focusedRef, activeWithoutMenuOpen: activeWithoutMenuOpenRef, inlineThemeDisabled,\n            onTriggerInputFocus,\n            onTriggerInputBlur,\n            handleTriggerOrMenuResize,\n            handleMenuFocus,\n            handleMenuBlur,\n            handleMenuTabOut,\n            handleTriggerClick, handleToggle: handleToggleByTmNode, handleDeleteOption: handleToggleByOption, handlePatternInput,\n            handleClear,\n            handleTriggerBlur,\n            handleTriggerFocus,\n            handleKeydown,\n            handleMenuAfterLeave,\n            handleMenuClickOutside,\n            handleMenuScroll, handleMenuKeydown: handleKeydown, handleMenuMousedown, mergedTheme: themeRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        return (h(\"div\", { class: `${this.mergedClsPrefix}-select` },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(NInternalSelection, { ref: \"triggerRef\", inlineThemeDisabled: this.inlineThemeDisabled, status: this.mergedStatus, inputProps: this.inputProps, clsPrefix: this.mergedClsPrefix, showArrow: this.showArrow, maxTagCount: this.maxTagCount, bordered: this.mergedBordered, active: this.activeWithoutMenuOpen || this.mergedShow, pattern: this.pattern, placeholder: this.localizedPlaceholder, selectedOption: this.selectedOption, selectedOptions: this.selectedOptions, multiple: this.multiple, renderTag: this.renderTag, renderLabel: this.renderLabel, filterable: this.filterable, clearable: this.clearable, disabled: this.mergedDisabled, size: this.mergedSize, theme: this.mergedTheme.peers.InternalSelection, labelField: this.labelField, valueField: this.valueField, themeOverrides: this.mergedTheme.peerOverrides.InternalSelection, loading: this.loading, focused: this.focused, onClick: this.handleTriggerClick, onDeleteOption: this.handleDeleteOption, onPatternInput: this.handlePatternInput, onClear: this.handleClear, onBlur: this.handleTriggerBlur, onFocus: this.handleTriggerFocus, onKeydown: this.handleKeydown, onPatternBlur: this.onTriggerInputBlur, onPatternFocus: this.onTriggerInputFocus, onResize: this.handleTriggerOrMenuResize, ignoreComposition: this.ignoreComposition }, {\n                            arrow: () => { var _a, _b; return [(_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a)]; }\n                        }))\n                    }),\n                    h(VFollower, { ref: \"followerRef\", show: this.mergedShow, to: this.adjustedTo, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, containerClass: this.namespace, width: this.consistentMenuWidth ? 'target' : undefined, minWidth: \"target\", placement: this.placement }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted, onAfterLeave: this.handleMenuAfterLeave }, {\n                            default: () => {\n                                var _a, _b, _c;\n                                if (!(this.mergedShow ||\n                                    this.displayDirective === 'show')) {\n                                    return null;\n                                }\n                                (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                                return withDirectives(h(NInternalSelectMenu, Object.assign({}, this.menuProps, { ref: \"menuRef\", onResize: this.handleTriggerOrMenuResize, inlineThemeDisabled: this.inlineThemeDisabled, virtualScroll: this.consistentMenuWidth && this.virtualScroll, class: [\n                                        `${this.mergedClsPrefix}-select-menu`,\n                                        this.themeClass,\n                                        (_b = this.menuProps) === null || _b === void 0 ? void 0 : _b.class\n                                    ], clsPrefix: this.mergedClsPrefix, focusable: true, labelField: this.labelField, valueField: this.valueField, autoPending: true, nodeProps: this.nodeProps, theme: this.mergedTheme.peers.InternalSelectMenu, themeOverrides: this.mergedTheme.peerOverrides\n                                        .InternalSelectMenu, treeMate: this.treeMate, multiple: this.multiple, size: \"medium\", renderOption: this.renderOption, renderLabel: this.renderLabel, value: this.mergedValue, style: [(_c = this.menuProps) === null || _c === void 0 ? void 0 : _c.style, this.cssVars], onToggle: this.handleToggle, onScroll: this.handleMenuScroll, onFocus: this.handleMenuFocus, onBlur: this.handleMenuBlur, onKeydown: this.handleMenuKeydown, onTabOut: this.handleMenuTabOut, onMousedown: this.handleMenuMousedown, show: this.mergedShow, showCheckmark: this.showCheckmark, resetMenuOnOptionsChange: this.resetMenuOnOptionsChange }), {\n                                    empty: () => { var _a, _b; return [(_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a)]; },\n                                    action: () => { var _a, _b; return [(_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a)]; }\n                                }), this.displayDirective === 'show'\n                                    ? [\n                                        [vShow, this.mergedShow],\n                                        [\n                                            clickoutside,\n                                            this.handleMenuClickOutside,\n                                            undefined,\n                                            { capture: true }\n                                        ]\n                                    ]\n                                    : [\n                                        [\n                                            clickoutside,\n                                            this.handleMenuClickOutside,\n                                            undefined,\n                                            { capture: true }\n                                        ]\n                                    ]);\n                            }\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}