{"ast":null,"code":"import { h, defineComponent, inject } from 'vue';\nimport { NCheckbox } from '../../checkbox';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'NTreeNodeCheckbox',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    indent: {\n      type: Number,\n      required: true\n    },\n    right: Boolean,\n    focusable: Boolean,\n    disabled: Boolean,\n    checked: Boolean,\n    indeterminate: Boolean,\n    onCheck: Function\n  },\n  setup(props) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const NTree = inject(treeInjectionKey);\n    function doCheck(value) {\n      const {\n        onCheck\n      } = props;\n      if (onCheck) {\n        onCheck(value);\n      }\n    }\n    function handleUpdateValue(value) {\n      doCheck(value);\n    }\n    return {\n      handleUpdateValue,\n      mergedTheme: NTree.mergedThemeRef\n    };\n  },\n  render() {\n    const {\n      clsPrefix,\n      mergedTheme,\n      checked,\n      indeterminate,\n      disabled,\n      focusable,\n      indent,\n      handleUpdateValue\n    } = this;\n    return h(\"span\", {\n      class: [`${clsPrefix}-tree-node-checkbox`, this.right && `${clsPrefix}-tree-node-checkbox--right`],\n      style: {\n        width: `${indent}px`\n      },\n      \"data-checkbox\": true\n    }, h(NCheckbox, {\n      focusable: focusable,\n      disabled: disabled,\n      theme: mergedTheme.peers.Checkbox,\n      themeOverrides: mergedTheme.peerOverrides.Checkbox,\n      checked: checked,\n      indeterminate: indeterminate,\n      onUpdateChecked: handleUpdateValue\n    }));\n  }\n});","map":{"version":3,"names":["h","defineComponent","inject","NCheckbox","treeInjectionKey","name","props","clsPrefix","type","String","required","indent","Number","right","Boolean","focusable","disabled","checked","indeterminate","onCheck","Function","setup","NTree","doCheck","value","handleUpdateValue","mergedTheme","mergedThemeRef","render","class","style","width","theme","peers","Checkbox","themeOverrides","peerOverrides","onUpdateChecked"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/tree/src/TreeNodeCheckbox.js"],"sourcesContent":["import { h, defineComponent, inject } from 'vue';\nimport { NCheckbox } from '../../checkbox';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'NTreeNodeCheckbox',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        indent: {\n            type: Number,\n            required: true\n        },\n        right: Boolean,\n        focusable: Boolean,\n        disabled: Boolean,\n        checked: Boolean,\n        indeterminate: Boolean,\n        onCheck: Function\n    },\n    setup(props) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NTree = inject(treeInjectionKey);\n        function doCheck(value) {\n            const { onCheck } = props;\n            if (onCheck) {\n                onCheck(value);\n            }\n        }\n        function handleUpdateValue(value) {\n            doCheck(value);\n        }\n        return {\n            handleUpdateValue,\n            mergedTheme: NTree.mergedThemeRef\n        };\n    },\n    render() {\n        const { clsPrefix, mergedTheme, checked, indeterminate, disabled, focusable, indent, handleUpdateValue } = this;\n        return (h(\"span\", { class: [\n                `${clsPrefix}-tree-node-checkbox`,\n                this.right && `${clsPrefix}-tree-node-checkbox--right`\n            ], style: {\n                width: `${indent}px`\n            }, \"data-checkbox\": true },\n            h(NCheckbox, { focusable: focusable, disabled: disabled, theme: mergedTheme.peers.Checkbox, themeOverrides: mergedTheme.peerOverrides.Checkbox, checked: checked, indeterminate: indeterminate, onUpdateChecked: handleUpdateValue })));\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAC,EAAEC,eAAe,EAAEC,MAAM,QAAQ,KAAK;AAChD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,eAAeH,eAAe,CAAC;EAC3BI,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE;IACHC,SAAS,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACd,CAAC;IACDC,MAAM,EAAE;MACJH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACd,CAAC;IACDG,KAAK,EAAEC,OAAO;IACdC,SAAS,EAAED,OAAO;IAClBE,QAAQ,EAAEF,OAAO;IACjBG,OAAO,EAAEH,OAAO;IAChBI,aAAa,EAAEJ,OAAO;IACtBK,OAAO,EAAEC;EACb,CAAC;EACDC,KAAKA,CAACf,KAAK,EAAE;IACT;IACA,MAAMgB,KAAK,GAAGpB,MAAM,CAACE,gBAAgB,CAAC;IACtC,SAASmB,OAAOA,CAACC,KAAK,EAAE;MACpB,MAAM;QAAEL;MAAQ,CAAC,GAAGb,KAAK;MACzB,IAAIa,OAAO,EAAE;QACTA,OAAO,CAACK,KAAK,CAAC;MAClB;IACJ;IACA,SAASC,iBAAiBA,CAACD,KAAK,EAAE;MAC9BD,OAAO,CAACC,KAAK,CAAC;IAClB;IACA,OAAO;MACHC,iBAAiB;MACjBC,WAAW,EAAEJ,KAAK,CAACK;IACvB,CAAC;EACL,CAAC;EACDC,MAAMA,CAAA,EAAG;IACL,MAAM;MAAErB,SAAS;MAAEmB,WAAW;MAAET,OAAO;MAAEC,aAAa;MAAEF,QAAQ;MAAED,SAAS;MAAEJ,MAAM;MAAEc;IAAkB,CAAC,GAAG,IAAI;IAC/G,OAAQzB,CAAC,CAAC,MAAM,EAAE;MAAE6B,KAAK,EAAE,CAClB,GAAEtB,SAAU,qBAAoB,EACjC,IAAI,CAACM,KAAK,IAAK,GAAEN,SAAU,4BAA2B,CACzD;MAAEuB,KAAK,EAAE;QACNC,KAAK,EAAG,GAAEpB,MAAO;MACrB,CAAC;MAAE,eAAe,EAAE;IAAK,CAAC,EAC1BX,CAAC,CAACG,SAAS,EAAE;MAAEY,SAAS,EAAEA,SAAS;MAAEC,QAAQ,EAAEA,QAAQ;MAAEgB,KAAK,EAAEN,WAAW,CAACO,KAAK,CAACC,QAAQ;MAAEC,cAAc,EAAET,WAAW,CAACU,aAAa,CAACF,QAAQ;MAAEjB,OAAO,EAAEA,OAAO;MAAEC,aAAa,EAAEA,aAAa;MAAEmB,eAAe,EAAEZ;IAAkB,CAAC,CAAC,CAAC;EAC9O;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}