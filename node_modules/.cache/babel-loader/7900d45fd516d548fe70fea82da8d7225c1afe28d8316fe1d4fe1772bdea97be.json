{"ast":null,"code":"import { h, Transition, ref, inject, defineComponent, computed, withDirectives } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { createTreeMate } from 'treemate';\nimport { createTmOptions } from '../../select/src/utils';\nimport { NInternalSelectMenu } from '../../_internal';\nimport { createSelectOptions } from './utils';\nimport { cascaderInjectionKey } from './interface';\nimport { resolveSlot } from '../../_utils';\nexport default defineComponent({\n  name: 'NCascaderSelectMenu',\n  props: {\n    value: {\n      type: [String, Number, Array],\n      default: null\n    },\n    show: Boolean,\n    pattern: {\n      type: String,\n      default: ''\n    },\n    multiple: Boolean,\n    tmNodes: {\n      type: Array,\n      default: () => []\n    },\n    filter: Function,\n    labelField: {\n      type: String,\n      required: true\n    },\n    separator: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const {\n      isMountedRef,\n      mergedValueRef,\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      mergedCheckStrategyRef,\n      slots: cascaderSlots,\n      syncSelectMenuPosition,\n      closeMenu,\n      handleSelectMenuClickOutside,\n      doUncheck: cascaderDoUncheck,\n      doCheck: cascaderDoCheck,\n      clearPattern\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    } = inject(cascaderInjectionKey);\n    const menuInstRef = ref(null);\n    const selectOptionsRef = computed(() => {\n      return createSelectOptions(props.tmNodes, mergedCheckStrategyRef.value === 'child', props.labelField, props.separator);\n    });\n    const mergedFilterRef = computed(() => {\n      const {\n        filter\n      } = props;\n      if (filter) return filter;\n      const {\n        labelField\n      } = props;\n      return (pattern, _, path) => path.some(option => option[labelField] && ~option[labelField].indexOf(pattern));\n    });\n    const filteredSelectOptionsRef = computed(() => {\n      const {\n        pattern\n      } = props;\n      const {\n        value: mergedFilter\n      } = mergedFilterRef;\n      return (pattern ? selectOptionsRef.value.filter(option => {\n        return mergedFilter(pattern, option.rawNode, option.path);\n      }) : selectOptionsRef.value).map(option => ({\n        value: option.value,\n        label: option.label\n      }));\n    });\n    const selectTreeMateRef = computed(() => {\n      return createTreeMate(filteredSelectOptionsRef.value, createTmOptions('value', 'children'));\n    });\n    function handleResize() {\n      syncSelectMenuPosition();\n    }\n    function handleToggle(tmNode) {\n      doCheck(tmNode);\n    }\n    // We don't care what type the tmNode is, we only care about its key\n    function doCheck(tmNode) {\n      if (props.multiple) {\n        const {\n          value: mergedValue\n        } = mergedValueRef;\n        if (Array.isArray(mergedValue)) {\n          if (!mergedValue.includes(tmNode.key)) {\n            cascaderDoCheck(tmNode.key);\n          } else {\n            cascaderDoUncheck(tmNode.key);\n          }\n        } else if (mergedValue === null) {\n          cascaderDoCheck(tmNode.key);\n        }\n        clearPattern();\n      } else {\n        cascaderDoCheck(tmNode.key);\n        // currently the select menu is set to focusable\n        // however just leave it here\n        closeMenu(true);\n      }\n    }\n    function prev() {\n      var _a;\n      (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n    }\n    function next() {\n      var _a;\n      (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.next();\n    }\n    function enter() {\n      var _a;\n      if (menuInstRef) {\n        const pendingOptionTmNode = (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.getPendingTmNode();\n        if (pendingOptionTmNode) {\n          doCheck(pendingOptionTmNode);\n        }\n        return true;\n      }\n      return false;\n    }\n    function handleClickOutside(e) {\n      handleSelectMenuClickOutside(e);\n    }\n    const exposedRef = {\n      prev,\n      next,\n      enter\n    };\n    return Object.assign({\n      isMounted: isMountedRef,\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      menuInstRef,\n      selectTreeMate: selectTreeMateRef,\n      handleResize,\n      handleToggle,\n      handleClickOutside,\n      cascaderSlots\n    }, exposedRef);\n  },\n  render() {\n    const {\n      mergedClsPrefix,\n      isMounted,\n      mergedTheme,\n      cascaderSlots\n    } = this;\n    return h(Transition, {\n      name: \"fade-in-scale-up-transition\",\n      appear: isMounted\n    }, {\n      default: () => this.show ? withDirectives(h(NInternalSelectMenu, {\n        ref: \"menuInstRef\",\n        onResize: this.handleResize,\n        clsPrefix: mergedClsPrefix,\n        class: `${mergedClsPrefix}-cascader-menu`,\n        autoPending: true,\n        themeOverrides: mergedTheme.peerOverrides.InternalSelectMenu,\n        theme: mergedTheme.peers.InternalSelectMenu,\n        treeMate: this.selectTreeMate,\n        multiple: this.multiple,\n        value: this.value,\n        onToggle: this.handleToggle\n      }, {\n        empty: () => resolveSlot(cascaderSlots['not-found'], () => [])\n      }), [[clickoutside, this.handleClickOutside, undefined, {\n        capture: true\n      }]]) : null\n    });\n  }\n});","map":{"version":3,"names":["h","Transition","ref","inject","defineComponent","computed","withDirectives","clickoutside","createTreeMate","createTmOptions","NInternalSelectMenu","createSelectOptions","cascaderInjectionKey","resolveSlot","name","props","value","type","String","Number","Array","default","show","Boolean","pattern","multiple","tmNodes","filter","Function","labelField","required","separator","setup","isMountedRef","mergedValueRef","mergedClsPrefixRef","mergedThemeRef","mergedCheckStrategyRef","slots","cascaderSlots","syncSelectMenuPosition","closeMenu","handleSelectMenuClickOutside","doUncheck","cascaderDoUncheck","doCheck","cascaderDoCheck","clearPattern","menuInstRef","selectOptionsRef","mergedFilterRef","_","path","some","option","indexOf","filteredSelectOptionsRef","mergedFilter","rawNode","map","label","selectTreeMateRef","handleResize","handleToggle","tmNode","mergedValue","isArray","includes","key","prev","_a","next","enter","pendingOptionTmNode","getPendingTmNode","handleClickOutside","e","exposedRef","Object","assign","isMounted","mergedTheme","mergedClsPrefix","selectTreeMate","render","appear","onResize","clsPrefix","class","autoPending","themeOverrides","peerOverrides","InternalSelectMenu","theme","peers","treeMate","onToggle","empty","undefined","capture"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/cascader/src/CascaderSelectMenu.js"],"sourcesContent":["import { h, Transition, ref, inject, defineComponent, computed, withDirectives } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { createTreeMate } from 'treemate';\nimport { createTmOptions } from '../../select/src/utils';\nimport { NInternalSelectMenu } from '../../_internal';\nimport { createSelectOptions } from './utils';\nimport { cascaderInjectionKey } from './interface';\nimport { resolveSlot } from '../../_utils';\nexport default defineComponent({\n    name: 'NCascaderSelectMenu',\n    props: {\n        value: {\n            type: [String, Number, Array],\n            default: null\n        },\n        show: Boolean,\n        pattern: {\n            type: String,\n            default: ''\n        },\n        multiple: Boolean,\n        tmNodes: {\n            type: Array,\n            default: () => []\n        },\n        filter: Function,\n        labelField: {\n            type: String,\n            required: true\n        },\n        separator: {\n            type: String,\n            required: true\n        }\n    },\n    setup(props) {\n        const { isMountedRef, mergedValueRef, mergedClsPrefixRef, mergedThemeRef, mergedCheckStrategyRef, slots: cascaderSlots, syncSelectMenuPosition, closeMenu, handleSelectMenuClickOutside, doUncheck: cascaderDoUncheck, doCheck: cascaderDoCheck, clearPattern\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(cascaderInjectionKey);\n        const menuInstRef = ref(null);\n        const selectOptionsRef = computed(() => {\n            return createSelectOptions(props.tmNodes, mergedCheckStrategyRef.value === 'child', props.labelField, props.separator);\n        });\n        const mergedFilterRef = computed(() => {\n            const { filter } = props;\n            if (filter)\n                return filter;\n            const { labelField } = props;\n            return (pattern, _, path) => path.some((option) => option[labelField] && ~option[labelField].indexOf(pattern));\n        });\n        const filteredSelectOptionsRef = computed(() => {\n            const { pattern } = props;\n            const { value: mergedFilter } = mergedFilterRef;\n            return (pattern\n                ? selectOptionsRef.value.filter((option) => {\n                    return mergedFilter(pattern, option.rawNode, option.path);\n                })\n                : selectOptionsRef.value).map((option) => ({\n                value: option.value,\n                label: option.label\n            }));\n        });\n        const selectTreeMateRef = computed(() => {\n            return createTreeMate(filteredSelectOptionsRef.value, createTmOptions('value', 'children'));\n        });\n        function handleResize() {\n            syncSelectMenuPosition();\n        }\n        function handleToggle(tmNode) {\n            doCheck(tmNode);\n        }\n        // We don't care what type the tmNode is, we only care about its key\n        function doCheck(tmNode) {\n            if (props.multiple) {\n                const { value: mergedValue } = mergedValueRef;\n                if (Array.isArray(mergedValue)) {\n                    if (!mergedValue.includes(tmNode.key)) {\n                        cascaderDoCheck(tmNode.key);\n                    }\n                    else {\n                        cascaderDoUncheck(tmNode.key);\n                    }\n                }\n                else if (mergedValue === null) {\n                    cascaderDoCheck(tmNode.key);\n                }\n                clearPattern();\n            }\n            else {\n                cascaderDoCheck(tmNode.key);\n                // currently the select menu is set to focusable\n                // however just leave it here\n                closeMenu(true);\n            }\n        }\n        function prev() {\n            var _a;\n            (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n        }\n        function next() {\n            var _a;\n            (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.next();\n        }\n        function enter() {\n            var _a;\n            if (menuInstRef) {\n                const pendingOptionTmNode = (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.getPendingTmNode();\n                if (pendingOptionTmNode) {\n                    doCheck(pendingOptionTmNode);\n                }\n                return true;\n            }\n            return false;\n        }\n        function handleClickOutside(e) {\n            handleSelectMenuClickOutside(e);\n        }\n        const exposedRef = {\n            prev,\n            next,\n            enter\n        };\n        return Object.assign({ isMounted: isMountedRef, mergedTheme: mergedThemeRef, mergedClsPrefix: mergedClsPrefixRef, menuInstRef, selectTreeMate: selectTreeMateRef, handleResize,\n            handleToggle,\n            handleClickOutside,\n            cascaderSlots }, exposedRef);\n    },\n    render() {\n        const { mergedClsPrefix, isMounted, mergedTheme, cascaderSlots } = this;\n        return (h(Transition, { name: \"fade-in-scale-up-transition\", appear: isMounted }, {\n            default: () => this.show\n                ? withDirectives(h(NInternalSelectMenu, { ref: \"menuInstRef\", onResize: this.handleResize, clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-cascader-menu`, autoPending: true, themeOverrides: mergedTheme.peerOverrides.InternalSelectMenu, theme: mergedTheme.peers.InternalSelectMenu, treeMate: this.selectTreeMate, multiple: this.multiple, value: this.value, onToggle: this.handleToggle }, {\n                    empty: () => resolveSlot(cascaderSlots['not-found'], () => [])\n                }), [\n                    [\n                        clickoutside,\n                        this.handleClickOutside,\n                        undefined,\n                        { capture: true }\n                    ]\n                ])\n                : null\n        }));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}