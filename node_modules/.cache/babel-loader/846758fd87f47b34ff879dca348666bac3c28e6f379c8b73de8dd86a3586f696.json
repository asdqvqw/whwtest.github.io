{"ast":null,"code":"import { h, ref, computed, defineComponent, inject, watch, watchEffect, onMounted, onBeforeUnmount } from 'vue';\nimport { VResizeObserver } from 'vueuc';\nimport { isImageSupportNativeLazy } from '../../_utils/env/is-native-lazy-load';\nimport { observeIntersection } from '../../image/src/utils';\nimport { tagInjectionKey } from '../../tag/src/Tag';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, color2Class, resolveWrappedSlot, resolveSlot } from '../../_utils';\nimport { avatarLight } from '../styles';\nimport { avatarGroupInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const avatarProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: [String, Number],\n  src: String,\n  circle: {\n    type: Boolean,\n    default: undefined\n  },\n  objectFit: String,\n  round: {\n    type: Boolean,\n    default: undefined\n  },\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  onError: Function,\n  fallbackSrc: String,\n  intersectionObserverOptions: Object,\n  lazy: Boolean,\n  onLoad: Function,\n  renderPlaceholder: Function,\n  renderFallback: Function,\n  imgProps: Object,\n  /** @deprecated */\n  color: String\n});\nexport default defineComponent({\n  name: 'Avatar',\n  props: avatarProps,\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const hasLoadErrorRef = ref(false);\n    let memoedTextHtml = null;\n    const textRef = ref(null);\n    const selfRef = ref(null);\n    const fitTextTransform = () => {\n      const {\n        value: textEl\n      } = textRef;\n      if (textEl) {\n        if (memoedTextHtml === null || memoedTextHtml !== textEl.innerHTML) {\n          memoedTextHtml = textEl.innerHTML;\n          const {\n            value: selfEl\n          } = selfRef;\n          if (selfEl) {\n            const {\n              offsetWidth: elWidth,\n              offsetHeight: elHeight\n            } = selfEl;\n            const {\n              offsetWidth: textWidth,\n              offsetHeight: textHeight\n            } = textEl;\n            const radix = 0.9;\n            const ratio = Math.min(elWidth / textWidth * radix, elHeight / textHeight * radix, 1);\n            textEl.style.transform = `translateX(-50%) translateY(-50%) scale(${ratio})`;\n          }\n        }\n      }\n    };\n    const NAvatarGroup = inject(avatarGroupInjectionKey, null);\n    const mergedSizeRef = computed(() => {\n      const {\n        size\n      } = props;\n      if (size) return size;\n      const {\n        size: avatarGroupSize\n      } = NAvatarGroup || {};\n      if (avatarGroupSize) return avatarGroupSize;\n      return 'medium';\n    });\n    const themeRef = useTheme('Avatar', '-avatar', style, avatarLight, props, mergedClsPrefixRef);\n    const TagInjection = inject(tagInjectionKey, null);\n    const mergedRoundRef = computed(() => {\n      if (NAvatarGroup) return true;\n      const {\n        round,\n        circle\n      } = props;\n      if (round !== undefined || circle !== undefined) return round || circle;\n      if (TagInjection) {\n        return TagInjection.roundRef.value;\n      }\n      return false;\n    });\n    const mergedBorderedRef = computed(() => {\n      if (NAvatarGroup) return true;\n      return props.bordered || false;\n    });\n    const handleError = e => {\n      var _a;\n      if (!shouldStartLoadingRef.value) return;\n      hasLoadErrorRef.value = true;\n      const {\n        onError,\n        imgProps\n      } = props;\n      (_a = imgProps === null || imgProps === void 0 ? void 0 : imgProps.onError) === null || _a === void 0 ? void 0 : _a.call(imgProps, e);\n      if (onError) {\n        onError(e);\n      }\n    };\n    watch(() => props.src, () => hasLoadErrorRef.value = false);\n    const cssVarsRef = computed(() => {\n      const size = mergedSizeRef.value;\n      const round = mergedRoundRef.value;\n      const bordered = mergedBorderedRef.value;\n      const {\n        color: propColor\n      } = props;\n      const {\n        self: {\n          borderRadius,\n          fontSize,\n          color,\n          border,\n          colorModal,\n          colorPopover\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      let height;\n      if (typeof size === 'number') {\n        height = `${size}px`;\n      } else {\n        height = themeRef.value.self[createKey('height', size)];\n      }\n      return {\n        '--n-font-size': fontSize,\n        '--n-border': bordered ? border : 'none',\n        '--n-border-radius': round ? '50%' : borderRadius,\n        '--n-color': propColor || color,\n        '--n-color-modal': propColor || colorModal,\n        '--n-color-popover': propColor || colorPopover,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-merged-size': `var(--n-avatar-size-override, ${height})`\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('avatar', computed(() => {\n      const size = mergedSizeRef.value;\n      const round = mergedRoundRef.value;\n      const bordered = mergedBorderedRef.value;\n      const {\n        color\n      } = props;\n      let hash = '';\n      if (size) {\n        if (typeof size === 'number') {\n          hash += `a${size}`;\n        } else {\n          hash += size[0];\n        }\n      }\n      if (round) {\n        hash += 'b';\n      }\n      if (bordered) {\n        hash += 'c';\n      }\n      if (color) {\n        hash += color2Class(color);\n      }\n      return hash;\n    }), cssVarsRef, props) : undefined;\n    const shouldStartLoadingRef = ref(!props.lazy);\n    onMounted(() => {\n      if (isImageSupportNativeLazy) {\n        return;\n      }\n      let unobserve;\n      const stopWatchHandle = watchEffect(() => {\n        unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n        unobserve = undefined;\n        if (props.lazy) {\n          unobserve = observeIntersection(selfRef.value, props.intersectionObserverOptions, shouldStartLoadingRef);\n        }\n      });\n      onBeforeUnmount(() => {\n        stopWatchHandle();\n        unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n      });\n    });\n    const loadedRef = ref(!props.lazy);\n    return {\n      textRef,\n      selfRef,\n      mergedRoundRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      fitTextTransform,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n      hasLoadError: hasLoadErrorRef,\n      handleError,\n      shouldStartLoading: shouldStartLoadingRef,\n      loaded: loadedRef,\n      mergedOnLoad: e => {\n        var _a;\n        const {\n          onLoad,\n          imgProps\n        } = props;\n        onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n        (_a = imgProps === null || imgProps === void 0 ? void 0 : imgProps.onLoad) === null || _a === void 0 ? void 0 : _a.call(imgProps, e);\n        loadedRef.value = true;\n      }\n    };\n  },\n  render() {\n    var _a, _b;\n    const {\n      $slots,\n      src,\n      mergedClsPrefix,\n      lazy,\n      onRender,\n      mergedOnLoad,\n      shouldStartLoading,\n      loaded,\n      hasLoadError\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    let img;\n    const placeholderNode = !loaded && !hasLoadError && (this.renderPlaceholder ? this.renderPlaceholder() : (_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a));\n    if (this.hasLoadError) {\n      img = this.renderFallback ? this.renderFallback() : resolveSlot($slots.fallback, () => [h(\"img\", {\n        src: this.fallbackSrc,\n        style: {\n          objectFit: this.objectFit\n        }\n      })]);\n    } else {\n      img = resolveWrappedSlot($slots.default, children => {\n        if (children) {\n          return h(VResizeObserver, {\n            onResize: this.fitTextTransform\n          }, {\n            default: () => h(\"span\", {\n              ref: \"textRef\",\n              class: `${mergedClsPrefix}-avatar__text`\n            }, children)\n          });\n        } else if (src) {\n          const {\n            imgProps\n          } = this;\n          return h('img', Object.assign(Object.assign({}, imgProps), {\n            loading:\n            // If interseciton observer options is set, do not use native lazy\n            isImageSupportNativeLazy && !this.intersectionObserverOptions && lazy ? 'lazy' : 'eager',\n            src: isImageSupportNativeLazy ? src : shouldStartLoading || loaded ? src : undefined,\n            onLoad: mergedOnLoad,\n            'data-image-src': src,\n            onError: this.handleError,\n            style: [imgProps === null || imgProps === void 0 ? void 0 : imgProps.style, {\n              objectFit: this.objectFit\n            }, placeholderNode ? {\n              height: '0',\n              width: '0',\n              visibility: 'hidden',\n              position: 'absolute'\n            } : '']\n          }));\n        }\n      });\n    }\n    return h(\"span\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-avatar`, this.themeClass],\n      style: this.cssVars\n    }, img, lazy && placeholderNode);\n  }\n});","map":{"version":3,"names":["h","ref","computed","defineComponent","inject","watch","watchEffect","onMounted","onBeforeUnmount","VResizeObserver","isImageSupportNativeLazy","observeIntersection","tagInjectionKey","useConfig","useTheme","useThemeClass","createKey","color2Class","resolveWrappedSlot","resolveSlot","avatarLight","avatarGroupInjectionKey","style","avatarProps","Object","assign","props","size","String","Number","src","circle","type","Boolean","default","undefined","objectFit","round","bordered","onError","Function","fallbackSrc","intersectionObserverOptions","lazy","onLoad","renderPlaceholder","renderFallback","imgProps","color","name","setup","mergedClsPrefixRef","inlineThemeDisabled","hasLoadErrorRef","memoedTextHtml","textRef","selfRef","fitTextTransform","value","textEl","innerHTML","selfEl","offsetWidth","elWidth","offsetHeight","elHeight","textWidth","textHeight","radix","ratio","Math","min","transform","NAvatarGroup","mergedSizeRef","avatarGroupSize","themeRef","TagInjection","mergedRoundRef","roundRef","mergedBorderedRef","handleError","e","_a","shouldStartLoadingRef","call","cssVarsRef","propColor","self","borderRadius","fontSize","border","colorModal","colorPopover","common","cubicBezierEaseInOut","height","themeClassHandle","hash","unobserve","stopWatchHandle","loadedRef","mergedClsPrefix","cssVars","themeClass","onRender","hasLoadError","shouldStartLoading","loaded","mergedOnLoad","render","_b","$slots","img","placeholderNode","placeholder","fallback","children","onResize","class","loading","width","visibility","position"],"sources":["/home/whw/Vue/whwtest.github.io/node_modules/naive-ui/es/avatar/src/Avatar.js"],"sourcesContent":["import { h, ref, computed, defineComponent, inject, watch, watchEffect, onMounted, onBeforeUnmount } from 'vue';\nimport { VResizeObserver } from 'vueuc';\nimport { isImageSupportNativeLazy } from '../../_utils/env/is-native-lazy-load';\nimport { observeIntersection } from '../../image/src/utils';\nimport { tagInjectionKey } from '../../tag/src/Tag';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, color2Class, resolveWrappedSlot, resolveSlot } from '../../_utils';\nimport { avatarLight } from '../styles';\nimport { avatarGroupInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const avatarProps = Object.assign(Object.assign({}, useTheme.props), { size: [String, Number], src: String, circle: {\n        type: Boolean,\n        default: undefined\n    }, objectFit: String, round: {\n        type: Boolean,\n        default: undefined\n    }, bordered: {\n        type: Boolean,\n        default: undefined\n    }, onError: Function, fallbackSrc: String, intersectionObserverOptions: Object, lazy: Boolean, onLoad: Function, renderPlaceholder: Function, renderFallback: Function, imgProps: Object, \n    /** @deprecated */\n    color: String });\nexport default defineComponent({\n    name: 'Avatar',\n    props: avatarProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const hasLoadErrorRef = ref(false);\n        let memoedTextHtml = null;\n        const textRef = ref(null);\n        const selfRef = ref(null);\n        const fitTextTransform = () => {\n            const { value: textEl } = textRef;\n            if (textEl) {\n                if (memoedTextHtml === null || memoedTextHtml !== textEl.innerHTML) {\n                    memoedTextHtml = textEl.innerHTML;\n                    const { value: selfEl } = selfRef;\n                    if (selfEl) {\n                        const { offsetWidth: elWidth, offsetHeight: elHeight } = selfEl;\n                        const { offsetWidth: textWidth, offsetHeight: textHeight } = textEl;\n                        const radix = 0.9;\n                        const ratio = Math.min((elWidth / textWidth) * radix, (elHeight / textHeight) * radix, 1);\n                        textEl.style.transform = `translateX(-50%) translateY(-50%) scale(${ratio})`;\n                    }\n                }\n            }\n        };\n        const NAvatarGroup = inject(avatarGroupInjectionKey, null);\n        const mergedSizeRef = computed(() => {\n            const { size } = props;\n            if (size)\n                return size;\n            const { size: avatarGroupSize } = NAvatarGroup || {};\n            if (avatarGroupSize)\n                return avatarGroupSize;\n            return 'medium';\n        });\n        const themeRef = useTheme('Avatar', '-avatar', style, avatarLight, props, mergedClsPrefixRef);\n        const TagInjection = inject(tagInjectionKey, null);\n        const mergedRoundRef = computed(() => {\n            if (NAvatarGroup)\n                return true;\n            const { round, circle } = props;\n            if (round !== undefined || circle !== undefined)\n                return round || circle;\n            if (TagInjection) {\n                return TagInjection.roundRef.value;\n            }\n            return false;\n        });\n        const mergedBorderedRef = computed(() => {\n            if (NAvatarGroup)\n                return true;\n            return props.bordered || false;\n        });\n        const handleError = (e) => {\n            var _a;\n            if (!shouldStartLoadingRef.value)\n                return;\n            hasLoadErrorRef.value = true;\n            const { onError, imgProps } = props;\n            (_a = imgProps === null || imgProps === void 0 ? void 0 : imgProps.onError) === null || _a === void 0 ? void 0 : _a.call(imgProps, e);\n            if (onError) {\n                onError(e);\n            }\n        };\n        watch(() => props.src, () => (hasLoadErrorRef.value = false));\n        const cssVarsRef = computed(() => {\n            const size = mergedSizeRef.value;\n            const round = mergedRoundRef.value;\n            const bordered = mergedBorderedRef.value;\n            const { color: propColor } = props;\n            const { self: { borderRadius, fontSize, color, border, colorModal, colorPopover }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            let height;\n            if (typeof size === 'number') {\n                height = `${size}px`;\n            }\n            else {\n                height = themeRef.value.self[createKey('height', size)];\n            }\n            return {\n                '--n-font-size': fontSize,\n                '--n-border': bordered ? border : 'none',\n                '--n-border-radius': round ? '50%' : borderRadius,\n                '--n-color': propColor || color,\n                '--n-color-modal': propColor || colorModal,\n                '--n-color-popover': propColor || colorPopover,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-merged-size': `var(--n-avatar-size-override, ${height})`\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('avatar', computed(() => {\n                const size = mergedSizeRef.value;\n                const round = mergedRoundRef.value;\n                const bordered = mergedBorderedRef.value;\n                const { color } = props;\n                let hash = '';\n                if (size) {\n                    if (typeof size === 'number') {\n                        hash += `a${size}`;\n                    }\n                    else {\n                        hash += size[0];\n                    }\n                }\n                if (round) {\n                    hash += 'b';\n                }\n                if (bordered) {\n                    hash += 'c';\n                }\n                if (color) {\n                    hash += color2Class(color);\n                }\n                return hash;\n            }), cssVarsRef, props)\n            : undefined;\n        const shouldStartLoadingRef = ref(!props.lazy);\n        onMounted(() => {\n            if (isImageSupportNativeLazy) {\n                return;\n            }\n            let unobserve;\n            const stopWatchHandle = watchEffect(() => {\n                unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n                unobserve = undefined;\n                if (props.lazy) {\n                    unobserve = observeIntersection(selfRef.value, props.intersectionObserverOptions, shouldStartLoadingRef);\n                }\n            });\n            onBeforeUnmount(() => {\n                stopWatchHandle();\n                unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n            });\n        });\n        const loadedRef = ref(!props.lazy);\n        return {\n            textRef,\n            selfRef,\n            mergedRoundRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            fitTextTransform,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n            hasLoadError: hasLoadErrorRef,\n            handleError,\n            shouldStartLoading: shouldStartLoadingRef,\n            loaded: loadedRef,\n            mergedOnLoad: (e) => {\n                var _a;\n                const { onLoad, imgProps } = props;\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n                (_a = imgProps === null || imgProps === void 0 ? void 0 : imgProps.onLoad) === null || _a === void 0 ? void 0 : _a.call(imgProps, e);\n                loadedRef.value = true;\n            }\n        };\n    },\n    render() {\n        var _a, _b;\n        const { $slots, src, mergedClsPrefix, lazy, onRender, mergedOnLoad, shouldStartLoading, loaded, hasLoadError } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        let img;\n        const placeholderNode = !loaded &&\n            !hasLoadError &&\n            (this.renderPlaceholder\n                ? this.renderPlaceholder()\n                : (_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a));\n        if (this.hasLoadError) {\n            img = this.renderFallback\n                ? this.renderFallback()\n                : resolveSlot($slots.fallback, () => [\n                    h(\"img\", { src: this.fallbackSrc, style: { objectFit: this.objectFit } })\n                ]);\n        }\n        else {\n            img = resolveWrappedSlot($slots.default, (children) => {\n                if (children) {\n                    return (h(VResizeObserver, { onResize: this.fitTextTransform }, {\n                        default: () => (h(\"span\", { ref: \"textRef\", class: `${mergedClsPrefix}-avatar__text` }, children))\n                    }));\n                }\n                else if (src) {\n                    const { imgProps } = this;\n                    return h('img', Object.assign(Object.assign({}, imgProps), { loading: \n                        // If interseciton observer options is set, do not use native lazy\n                        isImageSupportNativeLazy &&\n                            !this.intersectionObserverOptions &&\n                            lazy\n                            ? 'lazy'\n                            : 'eager', src: isImageSupportNativeLazy\n                            ? src\n                            : shouldStartLoading || loaded\n                                ? src\n                                : undefined, onLoad: mergedOnLoad, 'data-image-src': src, onError: this.handleError, style: [\n                            imgProps === null || imgProps === void 0 ? void 0 : imgProps.style,\n                            { objectFit: this.objectFit },\n                            placeholderNode\n                                ? {\n                                    height: '0',\n                                    width: '0',\n                                    visibility: 'hidden',\n                                    position: 'absolute'\n                                }\n                                : ''\n                        ] }));\n                }\n            });\n        }\n        return (h(\"span\", { ref: \"selfRef\", class: [`${mergedClsPrefix}-avatar`, this.themeClass], style: this.cssVars },\n            img,\n            lazy && placeholderNode));\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAC,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,SAAS,EAAEC,eAAe,QAAQ,KAAK;AAC/G,SAASC,eAAe,QAAQ,OAAO;AACvC,SAASC,wBAAwB,QAAQ,sCAAsC;AAC/E,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,QAAQ,eAAe;AAClE,SAASC,SAAS,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,WAAW,QAAQ,cAAc;AACtF,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,uBAAuB,QAAQ,WAAW;AACnD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,QAAQ,CAACY,KAAK,CAAC,EAAE;EAAEC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;EAAEC,GAAG,EAAEF,MAAM;EAAEG,MAAM,EAAE;IACnHC,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAEC;EACb,CAAC;EAAEC,SAAS,EAAER,MAAM;EAAES,KAAK,EAAE;IACzBL,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAEC;EACb,CAAC;EAAEG,QAAQ,EAAE;IACTN,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAEC;EACb,CAAC;EAAEI,OAAO,EAAEC,QAAQ;EAAEC,WAAW,EAAEb,MAAM;EAAEc,2BAA2B,EAAElB,MAAM;EAAEmB,IAAI,EAAEV,OAAO;EAAEW,MAAM,EAAEJ,QAAQ;EAAEK,iBAAiB,EAAEL,QAAQ;EAAEM,cAAc,EAAEN,QAAQ;EAAEO,QAAQ,EAAEvB,MAAM;EACxL;EACAwB,KAAK,EAAEpB;AAAO,CAAC,CAAC;AACpB,eAAezB,eAAe,CAAC;EAC3B8C,IAAI,EAAE,QAAQ;EACdvB,KAAK,EAAEH,WAAW;EAClB2B,KAAKA,CAACxB,KAAK,EAAE;IACT,MAAM;MAAEyB,kBAAkB;MAAEC;IAAoB,CAAC,GAAGvC,SAAS,CAACa,KAAK,CAAC;IACpE,MAAM2B,eAAe,GAAGpD,GAAG,CAAC,KAAK,CAAC;IAClC,IAAIqD,cAAc,GAAG,IAAI;IACzB,MAAMC,OAAO,GAAGtD,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMuD,OAAO,GAAGvD,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMwD,gBAAgB,GAAGA,CAAA,KAAM;MAC3B,MAAM;QAAEC,KAAK,EAAEC;MAAO,CAAC,GAAGJ,OAAO;MACjC,IAAII,MAAM,EAAE;QACR,IAAIL,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKK,MAAM,CAACC,SAAS,EAAE;UAChEN,cAAc,GAAGK,MAAM,CAACC,SAAS;UACjC,MAAM;YAAEF,KAAK,EAAEG;UAAO,CAAC,GAAGL,OAAO;UACjC,IAAIK,MAAM,EAAE;YACR,MAAM;cAAEC,WAAW,EAAEC,OAAO;cAAEC,YAAY,EAAEC;YAAS,CAAC,GAAGJ,MAAM;YAC/D,MAAM;cAAEC,WAAW,EAAEI,SAAS;cAAEF,YAAY,EAAEG;YAAW,CAAC,GAAGR,MAAM;YACnE,MAAMS,KAAK,GAAG,GAAG;YACjB,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAER,OAAO,GAAGG,SAAS,GAAIE,KAAK,EAAGH,QAAQ,GAAGE,UAAU,GAAIC,KAAK,EAAE,CAAC,CAAC;YACzFT,MAAM,CAACrC,KAAK,CAACkD,SAAS,GAAI,2CAA0CH,KAAM,GAAE;UAChF;QACJ;MACJ;IACJ,CAAC;IACD,MAAMI,YAAY,GAAGrE,MAAM,CAACiB,uBAAuB,EAAE,IAAI,CAAC;IAC1D,MAAMqD,aAAa,GAAGxE,QAAQ,CAAC,MAAM;MACjC,MAAM;QAAEyB;MAAK,CAAC,GAAGD,KAAK;MACtB,IAAIC,IAAI,EACJ,OAAOA,IAAI;MACf,MAAM;QAAEA,IAAI,EAAEgD;MAAgB,CAAC,GAAGF,YAAY,IAAI,CAAC,CAAC;MACpD,IAAIE,eAAe,EACf,OAAOA,eAAe;MAC1B,OAAO,QAAQ;IACnB,CAAC,CAAC;IACF,MAAMC,QAAQ,GAAG9D,QAAQ,CAAC,QAAQ,EAAE,SAAS,EAAEQ,KAAK,EAAEF,WAAW,EAAEM,KAAK,EAAEyB,kBAAkB,CAAC;IAC7F,MAAM0B,YAAY,GAAGzE,MAAM,CAACQ,eAAe,EAAE,IAAI,CAAC;IAClD,MAAMkE,cAAc,GAAG5E,QAAQ,CAAC,MAAM;MAClC,IAAIuE,YAAY,EACZ,OAAO,IAAI;MACf,MAAM;QAAEpC,KAAK;QAAEN;MAAO,CAAC,GAAGL,KAAK;MAC/B,IAAIW,KAAK,KAAKF,SAAS,IAAIJ,MAAM,KAAKI,SAAS,EAC3C,OAAOE,KAAK,IAAIN,MAAM;MAC1B,IAAI8C,YAAY,EAAE;QACd,OAAOA,YAAY,CAACE,QAAQ,CAACrB,KAAK;MACtC;MACA,OAAO,KAAK;IAChB,CAAC,CAAC;IACF,MAAMsB,iBAAiB,GAAG9E,QAAQ,CAAC,MAAM;MACrC,IAAIuE,YAAY,EACZ,OAAO,IAAI;MACf,OAAO/C,KAAK,CAACY,QAAQ,IAAI,KAAK;IAClC,CAAC,CAAC;IACF,MAAM2C,WAAW,GAAIC,CAAC,IAAK;MACvB,IAAIC,EAAE;MACN,IAAI,CAACC,qBAAqB,CAAC1B,KAAK,EAC5B;MACJL,eAAe,CAACK,KAAK,GAAG,IAAI;MAC5B,MAAM;QAAEnB,OAAO;QAAEQ;MAAS,CAAC,GAAGrB,KAAK;MACnC,CAACyD,EAAE,GAAGpC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACR,OAAO,MAAM,IAAI,IAAI4C,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,IAAI,CAACtC,QAAQ,EAAEmC,CAAC,CAAC;MACrI,IAAI3C,OAAO,EAAE;QACTA,OAAO,CAAC2C,CAAC,CAAC;MACd;IACJ,CAAC;IACD7E,KAAK,CAAC,MAAMqB,KAAK,CAACI,GAAG,EAAE,MAAOuB,eAAe,CAACK,KAAK,GAAG,KAAM,CAAC;IAC7D,MAAM4B,UAAU,GAAGpF,QAAQ,CAAC,MAAM;MAC9B,MAAMyB,IAAI,GAAG+C,aAAa,CAAChB,KAAK;MAChC,MAAMrB,KAAK,GAAGyC,cAAc,CAACpB,KAAK;MAClC,MAAMpB,QAAQ,GAAG0C,iBAAiB,CAACtB,KAAK;MACxC,MAAM;QAAEV,KAAK,EAAEuC;MAAU,CAAC,GAAG7D,KAAK;MAClC,MAAM;QAAE8D,IAAI,EAAE;UAAEC,YAAY;UAAEC,QAAQ;UAAE1C,KAAK;UAAE2C,MAAM;UAAEC,UAAU;UAAEC;QAAa,CAAC;QAAEC,MAAM,EAAE;UAAEC;QAAqB;MAAE,CAAC,GAAGnB,QAAQ,CAAClB,KAAK;MACtI,IAAIsC,MAAM;MACV,IAAI,OAAOrE,IAAI,KAAK,QAAQ,EAAE;QAC1BqE,MAAM,GAAI,GAAErE,IAAK,IAAG;MACxB,CAAC,MACI;QACDqE,MAAM,GAAGpB,QAAQ,CAAClB,KAAK,CAAC8B,IAAI,CAACxE,SAAS,CAAC,QAAQ,EAAEW,IAAI,CAAC,CAAC;MAC3D;MACA,OAAO;QACH,eAAe,EAAE+D,QAAQ;QACzB,YAAY,EAAEpD,QAAQ,GAAGqD,MAAM,GAAG,MAAM;QACxC,mBAAmB,EAAEtD,KAAK,GAAG,KAAK,GAAGoD,YAAY;QACjD,WAAW,EAAEF,SAAS,IAAIvC,KAAK;QAC/B,iBAAiB,EAAEuC,SAAS,IAAIK,UAAU;QAC1C,mBAAmB,EAAEL,SAAS,IAAIM,YAAY;QAC9C,YAAY,EAAEE,oBAAoB;QAClC,iBAAiB,EAAG,iCAAgCC,MAAO;MAC/D,CAAC;IACL,CAAC,CAAC;IACF,MAAMC,gBAAgB,GAAG7C,mBAAmB,GACtCrC,aAAa,CAAC,QAAQ,EAAEb,QAAQ,CAAC,MAAM;MACrC,MAAMyB,IAAI,GAAG+C,aAAa,CAAChB,KAAK;MAChC,MAAMrB,KAAK,GAAGyC,cAAc,CAACpB,KAAK;MAClC,MAAMpB,QAAQ,GAAG0C,iBAAiB,CAACtB,KAAK;MACxC,MAAM;QAAEV;MAAM,CAAC,GAAGtB,KAAK;MACvB,IAAIwE,IAAI,GAAG,EAAE;MACb,IAAIvE,IAAI,EAAE;QACN,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;UAC1BuE,IAAI,IAAK,IAAGvE,IAAK,EAAC;QACtB,CAAC,MACI;UACDuE,IAAI,IAAIvE,IAAI,CAAC,CAAC,CAAC;QACnB;MACJ;MACA,IAAIU,KAAK,EAAE;QACP6D,IAAI,IAAI,GAAG;MACf;MACA,IAAI5D,QAAQ,EAAE;QACV4D,IAAI,IAAI,GAAG;MACf;MACA,IAAIlD,KAAK,EAAE;QACPkD,IAAI,IAAIjF,WAAW,CAAC+B,KAAK,CAAC;MAC9B;MACA,OAAOkD,IAAI;IACf,CAAC,CAAC,EAAEZ,UAAU,EAAE5D,KAAK,CAAC,GACpBS,SAAS;IACf,MAAMiD,qBAAqB,GAAGnF,GAAG,CAAC,CAACyB,KAAK,CAACiB,IAAI,CAAC;IAC9CpC,SAAS,CAAC,MAAM;MACZ,IAAIG,wBAAwB,EAAE;QAC1B;MACJ;MACA,IAAIyF,SAAS;MACb,MAAMC,eAAe,GAAG9F,WAAW,CAAC,MAAM;QACtC6F,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAAC,CAAC;QACjEA,SAAS,GAAGhE,SAAS;QACrB,IAAIT,KAAK,CAACiB,IAAI,EAAE;UACZwD,SAAS,GAAGxF,mBAAmB,CAAC6C,OAAO,CAACE,KAAK,EAAEhC,KAAK,CAACgB,2BAA2B,EAAE0C,qBAAqB,CAAC;QAC5G;MACJ,CAAC,CAAC;MACF5E,eAAe,CAAC,MAAM;QAClB4F,eAAe,CAAC,CAAC;QACjBD,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAAC,CAAC;MACrE,CAAC,CAAC;IACN,CAAC,CAAC;IACF,MAAME,SAAS,GAAGpG,GAAG,CAAC,CAACyB,KAAK,CAACiB,IAAI,CAAC;IAClC,OAAO;MACHY,OAAO;MACPC,OAAO;MACPsB,cAAc;MACdwB,eAAe,EAAEnD,kBAAkB;MACnCM,gBAAgB;MAChB8C,OAAO,EAAEnD,mBAAmB,GAAGjB,SAAS,GAAGmD,UAAU;MACrDkB,UAAU,EAAEP,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACO,UAAU;MAC3GC,QAAQ,EAAER,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACQ,QAAQ;MACvGC,YAAY,EAAErD,eAAe;MAC7B4B,WAAW;MACX0B,kBAAkB,EAAEvB,qBAAqB;MACzCwB,MAAM,EAAEP,SAAS;MACjBQ,YAAY,EAAG3B,CAAC,IAAK;QACjB,IAAIC,EAAE;QACN,MAAM;UAAEvC,MAAM;UAAEG;QAAS,CAAC,GAAGrB,KAAK;QAClCkB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACsC,CAAC,CAAC;QACzD,CAACC,EAAE,GAAGpC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACH,MAAM,MAAM,IAAI,IAAIuC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,IAAI,CAACtC,QAAQ,EAAEmC,CAAC,CAAC;QACpImB,SAAS,CAAC3C,KAAK,GAAG,IAAI;MAC1B;IACJ,CAAC;EACL,CAAC;EACDoD,MAAMA,CAAA,EAAG;IACL,IAAI3B,EAAE,EAAE4B,EAAE;IACV,MAAM;MAAEC,MAAM;MAAElF,GAAG;MAAEwE,eAAe;MAAE3D,IAAI;MAAE8D,QAAQ;MAAEI,YAAY;MAAEF,kBAAkB;MAAEC,MAAM;MAAEF;IAAa,CAAC,GAAG,IAAI;IACrHD,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAAC,CAAC;IAC9D,IAAIQ,GAAG;IACP,MAAMC,eAAe,GAAG,CAACN,MAAM,IAC3B,CAACF,YAAY,KACZ,IAAI,CAAC7D,iBAAiB,GACjB,IAAI,CAACA,iBAAiB,CAAC,CAAC,GACxB,CAACkE,EAAE,GAAG,CAAC5B,EAAE,GAAG,IAAI,CAAC6B,MAAM,EAAEG,WAAW,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC1B,IAAI,CAACF,EAAE,CAAC,CAAC;IACjG,IAAI,IAAI,CAACuB,YAAY,EAAE;MACnBO,GAAG,GAAG,IAAI,CAACnE,cAAc,GACnB,IAAI,CAACA,cAAc,CAAC,CAAC,GACrB3B,WAAW,CAAC6F,MAAM,CAACI,QAAQ,EAAE,MAAM,CACjCpH,CAAC,CAAC,KAAK,EAAE;QAAE8B,GAAG,EAAE,IAAI,CAACW,WAAW;QAAEnB,KAAK,EAAE;UAAEc,SAAS,EAAE,IAAI,CAACA;QAAU;MAAE,CAAC,CAAC,CAC5E,CAAC;IACV,CAAC,MACI;MACD6E,GAAG,GAAG/F,kBAAkB,CAAC8F,MAAM,CAAC9E,OAAO,EAAGmF,QAAQ,IAAK;QACnD,IAAIA,QAAQ,EAAE;UACV,OAAQrH,CAAC,CAACS,eAAe,EAAE;YAAE6G,QAAQ,EAAE,IAAI,CAAC7D;UAAiB,CAAC,EAAE;YAC5DvB,OAAO,EAAEA,CAAA,KAAOlC,CAAC,CAAC,MAAM,EAAE;cAAEC,GAAG,EAAE,SAAS;cAAEsH,KAAK,EAAG,GAAEjB,eAAgB;YAAe,CAAC,EAAEe,QAAQ;UACpG,CAAC,CAAC;QACN,CAAC,MACI,IAAIvF,GAAG,EAAE;UACV,MAAM;YAAEiB;UAAS,CAAC,GAAG,IAAI;UACzB,OAAO/C,CAAC,CAAC,KAAK,EAAEwB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEsB,QAAQ,CAAC,EAAE;YAAEyE,OAAO;YAChE;YACA9G,wBAAwB,IACpB,CAAC,IAAI,CAACgC,2BAA2B,IACjCC,IAAI,GACF,MAAM,GACN,OAAO;YAAEb,GAAG,EAAEpB,wBAAwB,GACtCoB,GAAG,GACH6E,kBAAkB,IAAIC,MAAM,GACxB9E,GAAG,GACHK,SAAS;YAAES,MAAM,EAAEiE,YAAY;YAAE,gBAAgB,EAAE/E,GAAG;YAAES,OAAO,EAAE,IAAI,CAAC0C,WAAW;YAAE3D,KAAK,EAAE,CAChGyB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACzB,KAAK,EAClE;cAAEc,SAAS,EAAE,IAAI,CAACA;YAAU,CAAC,EAC7B8E,eAAe,GACT;cACElB,MAAM,EAAE,GAAG;cACXyB,KAAK,EAAE,GAAG;cACVC,UAAU,EAAE,QAAQ;cACpBC,QAAQ,EAAE;YACd,CAAC,GACC,EAAE;UACV,CAAC,CAAC,CAAC;QACb;MACJ,CAAC,CAAC;IACN;IACA,OAAQ3H,CAAC,CAAC,MAAM,EAAE;MAAEC,GAAG,EAAE,SAAS;MAAEsH,KAAK,EAAE,CAAE,GAAEjB,eAAgB,SAAQ,EAAE,IAAI,CAACE,UAAU,CAAC;MAAElF,KAAK,EAAE,IAAI,CAACiF;IAAQ,CAAC,EAC5GU,GAAG,EACHtE,IAAI,IAAIuE,eAAe,CAAC;EAChC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}